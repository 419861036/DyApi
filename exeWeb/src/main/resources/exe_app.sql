/*
Navicat MySQL Data Transfer

Source Server         : 47.93.26.128
Source Server Version : 50636
Source Host           : 47.93.26.128:3306
Source Database       : xmlcore

Target Server Type    : MYSQL
Target Server Version : 50636
File Encoding         : 65001

Date: 2021-03-29 10:14:19
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `exe_app`
-- ----------------------------
DROP TABLE IF EXISTS `exe_app`;
CREATE TABLE `exe_app` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `appName` varchar(255) NOT NULL COMMENT '应用名称',
  `contextPath` varchar(255) DEFAULT NULL COMMENT '应用路径',
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of exe_app
-- ----------------------------
INSERT INTO `exe_app` VALUES ('1', '应用管理', '/app', '2020-10-22 09:13:10', '2020-10-22 09:13:12');
INSERT INTO `exe_app` VALUES ('2', '虚拟资源管理', '/resource', '2020-10-26 17:37:01', null);
INSERT INTO `exe_app` VALUES ('3', '采集', '/cai', '2020-10-22 09:13:10', '2021-01-15 19:31:02');
INSERT INTO `exe_app` VALUES ('4', '文件管理', '/file', '2020-10-27 09:30:38', '2020-10-27 09:30:41');
INSERT INTO `exe_app` VALUES ('30', 'test1', 'test1', '2020-10-27 15:04:44', null);
INSERT INTO `exe_app` VALUES ('32', '收藏夹', '/scj', '2020-11-09 14:51:03', null);
INSERT INTO `exe_app` VALUES ('35', 'api管理', '/apimgt', '2020-11-18 15:45:40', null);
INSERT INTO `exe_app` VALUES ('43', '数据库管理', '/db', '2020-11-23 20:31:52', null);
INSERT INTO `exe_app` VALUES ('47', '用户管理', '/user', '2020-11-24 20:59:34', null);
INSERT INTO `exe_app` VALUES ('48', '角色管理', '/role', '2020-11-25 10:10:56', null);
INSERT INTO `exe_app` VALUES ('49', '菜单', '/menu', '2020-12-30 17:16:12', null);
INSERT INTO `exe_app` VALUES ('50', '任务管理', 'task', '2021-01-17 11:12:12', null);
INSERT INTO `exe_app` VALUES ('51', 'IPTV', '/iptv', '2021-01-18 13:38:26', null);
INSERT INTO `exe_app` VALUES ('52', 'debug', '/debug', '2021-02-02 13:25:09', null);

-- ----------------------------
-- Table structure for `exe_resource`
-- ----------------------------
DROP TABLE IF EXISTS `exe_resource`;
CREATE TABLE `exe_resource` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `appId` int(11) DEFAULT NULL COMMENT '应用ID',
  `type` varchar(255) DEFAULT NULL,
  `path` varchar(255) DEFAULT NULL,
  `ruleName` varchar(255) DEFAULT NULL,
  `corn` varchar(255) DEFAULT NULL COMMENT '定时任务',
  `caiConfig` longtext,
  `caiRule` longtext,
  `loginRule` longtext,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=173 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of exe_resource
-- ----------------------------
INSERT INTO `exe_resource` VALUES ('4', '3', 'cai', null, '通过数据查询实现分页采集', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"discuz 数据采集\" corn=\"\">\r\n	<seg name=\"初始化\">\r\n		<count name=\"初始化页码\" inc=\"0\" init=\"0\" var=\"start\"/>\r\n		<count name=\"设置每页数据\" inc=\"0\" init=\"2\" var=\"limit\"/>\r\n		<go name=\"跳转下一页\" to=\"分页循环\"/>\r\n	</seg>\r\n	<seg name=\"分页循环\">\r\n		<print name=\"打印\"  :out=\"开始位置:#{start}\" />\r\n		<sqlFind name=\"查找分页数据\"  var=\"pageList\" cols=\"id,path,name,data\"\r\n			:sql=\"select * from cai_field where levId=4 and name=\'url_0\' limit #{start},#{limit}\"\r\n		/>\r\n		<count name=\"初始化数据索引位置\"  init=\"0\" var=\"dataPos\"/>\r\n		<go name=\"跳转数据循环\" to=\"数据循环\"/>\r\n	</seg>\r\n	<seg name=\"数据循环\">\r\n		<var name=\"获取分页数据\"  key=\"pageList\" :index=\"#{dataPos}\" childKey=\"data\" var=\"url\"  />\r\n		<var name=\"获取分页数据长度\"  key=\"pageList\" size=\"true\" var=\"len\"  />\r\n		<if name=\"判断url是否存在\" :js=\"\'#{url}\'!=\'\' \" true=\"打开详情页面\" false=\"跳转到下一页\" />\r\n		\r\n		<open  name=\"打开详情页面\"  :url=\"#{url}\" target=\"detail\"/>\r\n		<find name=\"找到详情列表元素\"   ></find>\r\n		<count name=\"数据索引位置+1\"  inc=\"1\" var=\"dataPos\"/>\r\n		<go name=\"跳转数据循环\" to=\"数据循环\"/>\r\n	</seg>\r\n	<seg name=\"跳转到下一页\">\r\n		<if name=\"判断是否存在下一页\" :js=\"\'#{len}\'!=\'0\' \" true=\"设置下一页位置\" false=\"退出\" />\r\n		<count name=\"设置下一页位置\" :inc=\"#{limit}\" var=\"start\"/>\r\n		<go name=\"跳转下一页\" to=\"分页循环\"/>\r\n	</seg>\r\n	<seg name=\"退出\">\r\n		<quit name=\"退出\"/>\r\n	</seg>\r\n	\r\n</rule>\r\n\r\n\r\n', null, null, null, null);
INSERT INTO `exe_resource` VALUES ('5', '1', 'api', '/app/add', 'APP新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用新增\" corn=\"\">\n	<seg name=\"应用新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"应用名称\" key=\"appName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"上下文\" key=\"contextPath\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.appName,vo.contextPath,createTime,vo.upTime\"\n			sql=\"insert into exe_app(id,appName,contextPath,createTime,upTime) values(?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-23 20:34:49');
INSERT INTO `exe_resource` VALUES ('6', '1', 'api', '/app/mod', 'APP修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用修改\" corn=\"\">\n	<seg name=\"应用修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"应用名称\" key=\"appName\" mock=\"@string(\'lower\', 5)\" reg=\"\"  verify=\"required\" />\n        <field name=\"上下文\" key=\"contextPath\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"/>\n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.appName,vo.contextPath,upTime,vo.id\"\n			sql=\"update exe_app set appName=?,contextPath=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-23 20:34:22');
INSERT INTO `exe_resource` VALUES ('7', '1', 'api', '/app/page', 'APP分页列表', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用查询\" corn=\"\">\n	<seg name=\"应用查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"应用名称\" var=\"appName\" key=\"appName\" />\n     <param name=\"上下文\" var=\"contextPath\" key=\"contextPath\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from exe_app where 1=1 \"/>\n		<append name=\"添加appName\" key=\"sql\" when=\"appName\" value=\" and appName like concat(\'%\',?,\'%\') \"/>\n		<append name=\"添加contextPath\" key=\"sql\" when=\"contextPath\" value=\" and contextPath like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,appName,contextPath,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"appName,contextPath\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-25 10:18:26');
INSERT INTO `exe_resource` VALUES ('9', '1', 'api', '/test/demo', '模板页面demo', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <param name=\"userId\" var=\"userId\" key=\"userId\" />\n        <param name=\"token\" var=\"token\" key=\"token\" />\n        <param name=\"user_type\" var=\"user_type\" key=\"user_type\" />\n        <param name=\"product_id\" var=\"product_id\" key=\"product_id\" />\n        <code name=\"解析数据\" hasBody=\"true\">\n        <![CDATA[\n             \n            def exe(a,cmdHandle){\n                def vars=cmdHandle.vars\n                org.slf4j.Logger LOGGER= org.slf4j.LoggerFactory.getLogger(\"order\");\n                LOGGER.info(\"----start-----userId=$vars.userId&token=$vars.token&user_type=$vars.user_type&product_id=$vars.product_id----start---end--\");\n            }\n         ]]>\n        </code>\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>', null, null, null, '2021-01-18 11:29:50');
INSERT INTO `exe_resource` VALUES ('16', '2', 'api', '/resource/page', '资源分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源查询\" corn=\"\">\n	<seg name=\"资源查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"资源名称\" var=\"resourceName\" key=\"resourceName\" />\n     <param name=\"资源路径\" var=\"path\" key=\"path\" />\n     <param name=\"appId\" var=\"appId\" key=\"appId\" />\n     <param name=\"type\" var=\"type\" key=\"type\" />\n      \n		<var name=\"sql\" var=\"sql\" init=\"select id,type,path,ruleName resourceName,createTime,upTime from exe_resource where 1=1 \"/>\n			<append name=\"添加resourceName\" key=\"sql\" when=\"resourceName\" value=\" and ruleName like concat(\'%\',?,\'%\') \" t=\" like concat(\'%\',?,\'%\')\"/>\n      	  <append name=\"添加path\" key=\"sql\" when=\"path\" value=\" and path like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加appId\" key=\"sql\" when=\"appId\" value=\" and appId =? \"/>\n        <append name=\"添加type\" key=\"sql\" when=\"type\" value=\" and type=? \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,type,path,resourceName,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"resourceName,path,appId,type\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-19 10:06:05');
INSERT INTO `exe_resource` VALUES ('20', '2', 'api', '/resource/add', '资源新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源新增\" corn=\"\">\n	<seg name=\"资源新增\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"resource\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"appId\" key=\"appId\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\"  />\n        <field name=\"应用类型\" key=\"type\" mock=\"{&quot;data|1&quot;: [&quot;api&quot;,&quot;html&quot;,&quot;ftl&quot;]}\" reg=\"\" verify=\"required\"  />\n        <field name=\"资源路径\" key=\"path\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"  />\n        <field name=\"资源名称\" key=\"resourceName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"  />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"vo.appId,vo.type,vo.path,vo.resourceName,createTime\"\n			sql=\"insert into exe_resource(appId,type,path,ruleName,createTime) values(?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-23 17:01:06');
INSERT INTO `exe_resource` VALUES ('21', '2', 'api', '/resource/mod', '资源修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源修改\" corn=\"\">\n	<seg name=\"资源修改\">\n      <bean name=\"bean\" key=\"resource\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\" />\n        <field name=\"appId\" key=\"appId\" mock=\"@integer(1, 10)\" reg=\"\" />\n        <field name=\"应用类型\" key=\"type\" mock=\"{&quot;data|1&quot;: [&quot;api&quot;,&quot;html&quot;,&quot;ftl&quot;]}\" reg=\"\" />\n        <field name=\"资源路径\" key=\"path\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"资源名称\" key=\"resourceName\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n      </bean>\n		<parse name=\"解析参数\" var=\"vo\" type=\"resource\"/>\n		<var name=\"设置当前时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"修改数据\" var=\"insertCnt\" cols=\"vo.appId,vo.type,vo.path,vo.resourceName,upTime,vo.id\"\n			sql=\"update exe_resource set appId=?,type=?,path=?,ruleName=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-23 17:01:27');
INSERT INTO `exe_resource` VALUES ('24', '2', 'api', '/resource/get', '根据ID查询资源', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"查询\" corn=\"\">\r\n	<seg name=\"查询\">\r\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\r\n		\r\n		\r\n		\r\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,appId,type,path,resourceName,config,createTime,upTime\" param=\"id\"\r\n		sql=\"select id,appId,type,path,ruleName resourceName,caiConfig config,createTime,upTime from exe_resource where 1=1 and id=?\" \r\n		>\r\n			\r\n		</sqlFind>\r\n		\r\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\r\n		<go  name=\"跳转到结束\" to=\"end\"/>\r\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\r\n		<empty name=\"end\"/>\r\n	</seg>\r\n	\r\n</rule>', null, null, null, null);
INSERT INTO `exe_resource` VALUES ('25', '2', 'api', '/resource/modData', '修改资源内容', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"编辑资源\" corn=\"\">\n	<seg name=\"编辑资源\">\n		<parse name=\"解析参数\" var=\"vo\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"config\" key=\"config\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n      </bean>\n		<var name=\"设置当前时间\" var=\"upTime\" type=\"date\"/>\n		<var name=\"设置tableName\" var=\"tableName\" init=\"resource\"/>\n      <var name=\"设置name\" var=\"name\" init=\"资源\"/>\n		<exeSql name=\"修改数据\" var=\"insertCnt\" cols=\"vo.config,upTime,vo.id\"\n			sql=\"update exe_resource set caiConfig=?,upTime=? where id=?\"\n		>\n		</exeSql>\n      <exeSql name=\"插入历史数据\" var=\"cnt\" cols=\"vo.id,name,tableName,vo.config,upTime\"\n			sql=\"insert into exe_version(sourceId,name,tableName,content,createTime) values(?,?,?,?,?)\"\n		>\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2020-11-23 17:01:51');
INSERT INTO `exe_resource` VALUES ('26', '1', 'api', '/app/get', '根据ID查询应用', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"查询\" corn=\"\">\r\n	<seg name=\"查询\">\r\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\r\n		\r\n		\r\n		\r\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,appName,contextPath,createTime,upTime\" param=\"id\"\r\n		sql=\"select * from exe_app where 1=1 and id=?\" \r\n		>\r\n			\r\n		</sqlFind>\r\n		\r\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\r\n		<go  name=\"跳转到结束\" to=\"end\"/>\r\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\r\n		<empty name=\"end\"/>\r\n	</seg>\r\n	\r\n</rule>', null, null, null, null);
INSERT INTO `exe_resource` VALUES ('27', '1', 'api', '/app/del', 'APP删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用删除\" corn=\"\">\n	<seg name=\"应用删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  exe_app where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"删除成功\"  false=\"失败\"/>\n		<resp name=\"删除成功\" code=\"200\" :msg=\"删除成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2021-01-25 09:28:59');
INSERT INTO `exe_resource` VALUES ('28', '4', 'api', '/file/list', '文件列表', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件列表\" corn=\"\">\n	<seg name=\"文件列表\">\n		<param name=\"path\" var=\"path\" key=\"path\"/>\n        <param name=\"currPath1\" var=\"currPath1\" key=\"currPath\"/>\n		<file name=\"文件列表\" op=\"list\" var=\"list\" :dir=\"#{path}\" :currPath=\"#{currPath1}\" />\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, null, '2021-03-09 10:36:48');
INSERT INTO `exe_resource` VALUES ('29', '4', 'api', '/file/mkdir', '创建文件夹', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"创建文件夹\" corn=\"\">\r\n	<seg name=\"创建文件夹\">\r\n		<param name=\"path\" var=\"path\" key=\"path\"/>\r\n		<param name=\"folder\" var=\"folder\" key=\"folder\"/>\r\n		\r\n		<file name=\"创建文件夹\" op=\"mkdir\" var=\"rs\" :dir=\"#{path}\" :folder=\"#{folder}\"/>\r\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\r\n		<go  name=\"跳转到结束\" to=\"end\"/>\r\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\r\n		<empty name=\"end\"/>\r\n	</seg>\r\n	\r\n</rule>', null, null, '2020-11-02 09:59:36', '2020-11-02 11:14:02');
INSERT INTO `exe_resource` VALUES ('30', '4', 'api', '/file/del', '删除文件', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"删除文件\" corn=\"\">\r\n	<seg name=\"删除文件\">\r\n		<param name=\"path\" var=\"path\" key=\"path\"/>\r\n		\r\n		<file name=\"删除文件\" op=\"del\" var=\"list\" :dir=\"#{path}\"/>\r\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\r\n		<go  name=\"跳转到结束\" to=\"end\"/>\r\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\r\n		<empty name=\"end\"/>\r\n	</seg>\r\n	\r\n</rule>', null, null, '2020-11-02 11:19:34', '2020-11-02 14:18:49');
INSERT INTO `exe_resource` VALUES ('32', '4', 'api', '/file/save', '保存文件内容', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"保存文件\" corn=\"\">\n	<seg name=\"保存文件\">\n		<parse name=\"解析参数\" var=\"vo\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"path\" key=\"path\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\"/>\n        <field name=\"data\" key=\"data\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"path\" var=\"path\" key=\"vo.path\" decode=\"true\"/>\n		<var name=\"data\" var=\"data\" key=\"vo.data\"/>\n      <var name=\"设置时间\" var=\"upTime\" type=\"date\"/>\n      <var name=\"设置tableName\" var=\"tableName\" init=\"file\"/>\n      <var name=\"设置name\" var=\"name\" init=\"文件\"/>\n		\n		<file name=\"保存文件\" op=\"write\" var=\"list\" :dir=\"#{path}\" key=\"data\"/>\n      <exeSql name=\"插入历史数据\" var=\"cnt\" cols=\"path,name,tableName,vo.data,upTime\"\n			sql=\"insert into exe_version(sourceId,name,tableName,content,createTime) values(?,?,?,?,?)\"\n		>\n		</exeSql>\n		<resp name=\"保存成功\" code=\"200\" :msg=\"保存成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-02 11:19:34', '2020-11-19 16:00:42');
INSERT INTO `exe_resource` VALUES ('33', '4', 'api', '/file/get', '查看文件', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查看文件\" corn=\"\">\n	<seg name=\"查看文件\">\n		<param name=\"path\" var=\"path\" key=\"path\"/>\n      <param name=\"startLine\" var=\"startLine\" key=\"startLine\"/>\n      <param name=\"limit\" var=\"limit\" key=\"limit\"/>\n		\n		<file name=\"查看文件\" op=\"read\" var=\"list\" :dir=\"#{path}\" :limit=\"#{limit}\" :startLine=\"#{startLine}\" />\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-02 11:19:34', '2020-11-18 10:52:49');
INSERT INTO `exe_resource` VALUES ('34', '4', 'api', '/file/newfile', '新建文件', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"创建文件\" corn=\"\">\n	<seg name=\"创建文件\">\n		<param name=\"path\" var=\"path\" key=\"path\"/>\n		\n		<file name=\"创建文件\" op=\"newfile\" var=\"rs\" :dir=\"#{path}\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"创建成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-04 14:38:19', '2020-11-04 14:42:01');
INSERT INTO `exe_resource` VALUES ('35', '4', 'api', '/file/rename', '重命名文件', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件重命名\" corn=\"\">\n	<seg name=\"文件重命名\">\n		<param name=\"path\" var=\"path\" key=\"path\"/>\n		<param name=\"dest\" var=\"dest\" key=\"dest\"/>\n		<file name=\"文件重命名\" op=\"rename\" var=\"rs\" :dir=\"#{path}\" :dest=\"#{dest}\"/>\n     <if name=\"判断是否执行成功\" js=\"rs==\'true\'\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"修改成功\" code=\"200\" :msg=\"修改成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-04 14:38:52', '2020-11-23 17:02:50');
INSERT INTO `exe_resource` VALUES ('36', '32', 'api', '/scj/sc/add', '新增收藏夹', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"收藏夹新增\" corn=\"\">\n	<seg name=\"收藏夹新增\">\n		<parse name=\"解析参数\" var=\"vo\" type=\"scj\"/>\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"名称\" key=\"name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"私有的\" key=\"private\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n        <field name=\"备注\" key=\"remark\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n        <field name=\"链接\" key=\"link\" mock=\"@string(\'lower\', 50)\" reg=\"\"  />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n      \n      \n		<split name=\"拆分标签集合\" var=\"tagIds\" :key=\"#{vo.tagIds}\" split=\",\"/>\n		\n		<exeSql name=\"插入数据\"  rsId=\"scId\" cols=\"vo.name,vo.remark,vo.link,vo.private,createTime\"\n			sql=\"insert into scj_sc(name,remark,link,private,createTime) values(?,?,?,?,?)\"\n		>\n		</exeSql>\n      <exeSql name=\"删除标签关联\" var=\"cnt\" cols=\"scId\"\n			sql=\"delete from scj_tag_sc_ref where scId=?\"\n		>\n		</exeSql>\n      <count name=\"数据索引位置\" init=\"0\"  var=\"index\"/>\n      <go name=\"跳转循环新增标签\" to=\"循环新增标签\"/>\n	</seg>\n  \n  <seg name=\"循环新增标签\">\n    <var name=\"获取tagId\"  key=\"tagIds\" :index=\"#{index}\"  var=\"tagId\"  />\n    <if name=\"判断tagId是否存在\" js=\"tagId!=\'\'&amp;&amp; tagId!=null \" false=\"跳转到结束\" />\n    <exeSql name=\"插入标签数据\" var=\"insertCnt1\" cols=\"tagId,scId\"\n			sql=\"insert into scj_tag_sc_ref(tagId,scId) values(?,?)\"\n		>\n		</exeSql>\n     <count name=\"数据索引位置+1\"  inc=\"1\" var=\"index\"/>\n    <go name=\"跳转循环新增标签\" to=\"循环新增标签\"/>\n    <go name=\"跳转到结束\" to=\"结束\"/>\n  </seg>\n  <seg name=\"结束\">\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n  </seg>\n	\n</rule>', null, null, '2020-11-11 17:24:46', '2020-12-30 11:59:32');
INSERT INTO `exe_resource` VALUES ('37', '32', 'api', '/scj/sc/mod', '收藏夹修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"搜藏修改\" corn=\"\">\n	<seg name=\"搜藏修改\">\n		<parse name=\"解析参数\" var=\"vo\" type=\"tag\"/>\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\" />\n        <field name=\"名称\" key=\"name\" mock=\"@string(\'lower\', 5)\" reg=\"\"  verify=\"required\"/>\n        <field name=\"私有的\" key=\"private\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"备注\" key=\"remark\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"标签id\" key=\"tagIds\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"链接\" key=\"link\" mock=\"@string(\'lower\', 50)\" reg=\"\"  />\n      </bean>\n      <var name=\"scId\" var=\"scId\" key=\"vo.id\" />\n      <var name=\"设置当前时间\" var=\"upTime\" type=\"date\"/>\n      <user name=\"获取当前用户\" var=\"user\"/>\n      \n      <var name=\"userId\" childKey=\"id\" key=\"user\" var=\"userId\" />\n      <var name=\"userName\" childKey=\"userName\" key=\"user\" var=\"userName\" />\n      \n      <split name=\"拆分标签集合\" var=\"tagIds\" :key=\"#{vo.tagIds}\" split=\",\"/>\n\n      <exeSql name=\"修改数据\" var=\"insertCnt\" cols=\"vo.name,vo.private,vo.remark,vo.link,upTime,userId,userName,scId\"\n              sql=\"update scj_sc set name=?,private=?,remark=?,link=?,upTime=?,uid=?,userName=? where id=?\"\n              >\n\n      </exeSql>\n      <exeSql name=\"删除标签关联\" var=\"insertCnt\" cols=\"scId\"\n			sql=\"delete from scj_tag_sc_ref where scId=?\"\n		>\n		</exeSql>\n      <count name=\"数据索引位置\" init=\"0\"  var=\"index\"/>\n      <go name=\"跳转循环新增标签\" to=\"循环新增标签\"/>\n	</seg>\n	<seg name=\"循环新增标签\">\n        <var name=\"获取tagId\"  key=\"tagIds\" :index=\"#{index}\"  var=\"tagId\"  />\n        <if name=\"判断tagId是否存在\" js=\"tagId!=\'\'&amp;&amp; tagId!=null \" false=\"跳转到结束\" />\n        <exeSql name=\"插入标签数据\" var=\"insertCnt1\" cols=\"tagId,scId\"\n                sql=\"insert into scj_tag_sc_ref(tagId,scId) values(?,?)\"\n            >\n            </exeSql>\n         <count name=\"数据索引位置+1\"  inc=\"1\" var=\"index\"/>\n        <go name=\"跳转循环新增标签\" to=\"循环新增标签\"/>\n        <go name=\"跳转到结束\" to=\"结束\"/>\n    </seg>\n    <seg name=\"结束\">\n        <resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n        <go  name=\"跳转到结束\" to=\"end\"/>\n        <resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n        <empty name=\"end\"/>\n    </seg>\n</rule>', null, null, '2020-11-11 17:27:53', '2020-12-30 10:59:21');
INSERT INTO `exe_resource` VALUES ('38', '32', 'api', '/scj/sc/del', '收藏夹删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"收藏删除\" corn=\"\">\n	<seg name=\"收藏删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"删除收藏\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  scj_sc where id=?\"\n		>\n			\n		</exeSql>\n      <exeSql name=\"删除关联标签\" var=\"cnt1\" cols=\"id\"\n			sql=\"delete from  scj_tag_sc_ref where scId=?\"\n		>\n			\n		</exeSql>\n		\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-11 17:33:56', '2020-11-13 14:02:28');
INSERT INTO `exe_resource` VALUES ('39', '32', 'api', '/scj/sc/page', '收藏夹分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"收藏夹查询\" corn=\"\">\n	<seg name=\"收藏夹查询\">\n      <param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n      <param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n      <param name=\"收藏夹名称\" var=\"name\" key=\"name\" />\n      <param name=\"标签ID\" var=\"tagIds\" key=\"tagIds\" />\n		\n      <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1  \"/>\n      <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n      <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIds\" :value=\" and id in(	select scId from scj_tag_sc_ref where tagId in (#{tagIds}) )\"/>\n      \n		\n		<go name=\"跳转到结束\" to=\"结束\"/>\n	</seg>\n  <seg name=\"循环append标签1\">\n    <split name=\"拆分标签集合\" var=\"tagIdArr\" :key=\"#{tagIds}\" split=\",\"/>\n    <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1  \"/>\n    <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n    <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIdArr\" value=\" and id in(	select scId from scj_tag_sc_ref where tagId in\"/>\n    <code name=\"sql标签id拼接\" hasBody=\"true\">\n      def exe(cmd,cmdHandle){\n        def tagIds=cmdHandle.vars.tagIdArr\n        def oldSql=cmdHandle.vars.sql\n        def sql=\"(\"\n        def first=true\n        \n        for(tagId:tagIds){\n          if(first){\n            sql=sql+tagId\n              first=false\n          }else{\n         	 sql=sql+\",\"+tagId\n          }\n        }\n        sql=oldSql+sql+\")\"\n        print sql\n        cmdHandle.vars.put(\"sql\",sql)\n      }\n    </code>\n    <append name=\"添加右括号\" key=\"sql\" when=\"tagIdArr\" value=\" )\"/>\n    <go name=\"跳转到结束\" to=\"结束\"/>\n  </seg>\n  <seg name=\"结束1\">\n		<empty name=\"end\"/>\n  </seg>\n  <seg name=\"结束\">\n    <page name=\"查询数据\" var=\"list\" cols=\"id,name,private,remark,link,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"name\"\n		>\n		</page>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n  </seg>\n	\n</rule>', null, null, '2020-11-11 17:35:17', '2020-12-30 10:13:33');
INSERT INTO `exe_resource` VALUES ('40', '32', 'api', '/scj/sc/init', '初始化收藏夹', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"收藏夹初始化\" corn=\"\">\n	<seg name=\"收藏夹初始化\">\n      <exeSql name=\"删除表\" var=\"insertCnt1\" cols=\"\" hasBody=\"true\">\n			drop table scj_sc\n		</exeSql>\n		<exeSql name=\"创建表\" var=\"insertCnt\" cols=\"\" hasBody=\"true\">\n        CREATE TABLE `scj_sc` (\n          `id` int(11) NOT NULL AUTO_INCREMENT,\n          `name` varchar(255) COLLATE utf8_bin DEFAULT NULL,\n          `remark` varchar(500) COLLATE utf8_bin DEFAULT NULL,\n          `createTime` datetime DEFAULT NULL,\n          `upTime` datetime DEFAULT NULL,\n          PRIMARY KEY (`id`)\n        ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_bin\n		</exeSql>\n		\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-12 15:03:52', '2020-11-13 09:36:00');
INSERT INTO `exe_resource` VALUES ('41', '32', 'api', '/scj/tag/add', '标签新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"标签新增\" corn=\"\">\n	<seg name=\"标签新增\">\n		<parse name=\"解析参数\" var=\"vo\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"标签名称\" key=\"name\" mock=\"@string(\'lower\', 10)\" reg=\"\"  verify=\"required\"/>\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"vo.name,createTime\"\n			sql=\"insert into scj_tag(name,createTime) values(?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 09:36:48', '2020-11-23 17:04:43');
INSERT INTO `exe_resource` VALUES ('42', '32', 'api', '/scj/tag/mod', '标签修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"标签修改\" corn=\"\">\n	<seg name=\"标签修改\">\n		<parse name=\"解析参数\" var=\"vo\" type=\"tag\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\" />\n        <field name=\"标签名称\" key=\"name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.name,upTime,vo.id\"\n			sql=\"update scj_tag set name=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 09:37:32', '2020-11-23 17:04:57');
INSERT INTO `exe_resource` VALUES ('43', '32', 'api', '/scj/tag/del', '标签删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用删除\" corn=\"\">\n	<seg name=\"应用删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  scj_tag where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 09:38:11', '2020-11-23 17:05:08');
INSERT INTO `exe_resource` VALUES ('44', '32', 'api', '/scj/tag/page', '标签分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"标签查询\" corn=\"\">\n	<seg name=\"标签查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"标签名称\" var=\"name\" key=\"name\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from scj_tag where 1=1 \"/>\n		<append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \" t=\" like concat(\'%\',?,\'%\')\"/>\n		\n		<page name=\"查询数据\" var=\"list\" cols=\"id,name,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"name\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 09:38:52', '2020-11-20 14:08:02');
INSERT INTO `exe_resource` VALUES ('45', '32', 'api', '/scj/sc/get', '获取收藏夹', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,name,private,remark,link,createTime,upTime\" param=\"id\"\n		sql=\"select * from scj_sc where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 14:22:43', '2020-12-30 13:52:00');
INSERT INTO `exe_resource` VALUES ('46', '32', 'api', '/scj/sc/tag', '查询收藏标签', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"ID\" var=\"scId\" key=\"scId\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,tagId,name\" param=\"scId\"\n		sql=\"SELECT * from scj_tag_sc_ref a LEFT JOIN scj_tag b on a.tagId=b.id where a.scId=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-13 14:44:02', '2020-11-13 15:01:17');
INSERT INTO `exe_resource` VALUES ('47', '2', 'api', '/resource/del', '资源删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源删除\" corn=\"\">\n	<seg name=\"资源删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  exe_resource where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-17 13:54:24', '2020-11-23 17:05:52');
INSERT INTO `exe_resource` VALUES ('48', '2', 'api', '/resource/version/page', '资源版本分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源版本查询\" corn=\"\">\n	<seg name=\"资源版本查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"资源名称\" var=\"name\" key=\"name\" />\n      <param name=\"资源ID\" var=\"sourceId\" key=\"sourceId\" />\n      \n		<var name=\"sql\" var=\"sql\" init=\"select id,sourceId,name,createTime from exe_version where 1=1 \"/>\n			<append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n      	 <append name=\"添加资源ID\" key=\"sql\" when=\"sourceId\" value=\" and sourceId like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,sourceId,name,createTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"name,sourceId\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-17 14:21:33', '2020-11-19 17:00:21');
INSERT INTO `exe_resource` VALUES ('49', '2', 'api', '/resource/version/get', '根据ID查询资源版本', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,name,content,createTime\" param=\"id\"\n		sql=\"select id,name,content,createTime from exe_version where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-17 14:34:42', '2020-11-17 14:43:25');
INSERT INTO `exe_resource` VALUES ('50', '35', 'api', '/apimgt/get', 'api定义获取', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,appId,type,path,resourceName,config,createTime,upTime\" param=\"id\"\n		sql=\"select id,appId,type,path,ruleName resourceName,caiConfig config,createTime,upTime from exe_resource where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-18 15:46:22', '2020-11-18 15:48:44');
INSERT INTO `exe_resource` VALUES ('52', '32', 'api', '/scj/tag/get', '获取标签', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,name,createTime,upTime\" param=\"id\"\n		sql=\"select * from scj_tag where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-20 13:56:27', '2020-11-20 13:57:29');
INSERT INTO `exe_resource` VALUES ('53', '2', 'plugin', 'go.java', '跳转', null, 'package com.exe.base.plugins;\n\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class GoCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"go\";\n	}\n\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		String name=param.get(\"to\");\n		cmdHandle.gotoNodeByName(caiAction,name);\n	}\n	\n	\n}\n', null, null, '2020-11-23 17:44:03', '2020-12-19 08:56:28');
INSERT INTO `exe_resource` VALUES ('54', '2', 'plugin', 'empty.java', '空节点', null, 'package com.exe.base.plugins;\n\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\n/**\n * 空节点\n * @author tanbin\n *\n */\npublic class EmptyCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:44:25', '2020-11-24 11:06:01');
INSERT INTO `exe_resource` VALUES ('55', '2', 'plugin', 'var.java', '变量设置与获取', null, 'package com.exe.base.plugins;\n\nimport java.lang.reflect.Method;\nimport java.net.URLDecoder;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.util.DateUtil;\nimport kkd.common.util.StringUtil;\nimport kkd.common.util.UUIDUtil;\n\n/**\n * 变量设置 或者 获取\n * @author tanbin\n *\n */\npublic class VarCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(VarCmd.class);\n	private String decode;\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		String var=param.get(\"var\");//设置变量\n		decode=param.get(\"decode\");//设置变量\n		String init=param.get(\"init\");\n		String type=param.get(\"type\");\n		String key=param.get(\"key\");//数据来源key\n		String childKey=param.get(\"childKey\");//通过子key获取\n		String indexStr=param.get(\"index\");//通过索引获取\n		String size=param.get(\"size\");//获取数组长度\n		Integer index=indexStr==null?null:Integer.parseInt(indexStr);\n        String debug=param.get(\"debug\");\n		\n		if(type!=null){\n			if(\"uuid\".equalsIgnoreCase(type)){\n				cmdHandle.getVars().put(var, UUIDUtil.getUUID());\n			}else if(\"date\".equalsIgnoreCase(type)){\n				String date=DateUtil.format(new Date(), DateUtil.DATETIME_PATTERN);\n				cmdHandle.getVars().put(var, date);\n			}\n			return;\n		}\n		if(init!=null){\n			cmdHandle.getVars().put(var, init);\n			return;\n		}\n        if(!StringUtil.isEmpty(caiAction.getBody())){\n            cmdHandle.getVars().put(var, caiAction.getBody());\n			return;\n        }\n		\n		Object data=getVal(cmdHandle.getVars(),key);\n		if(data==null){\n			cmdHandle.getVars().put(var, null);\n			return;\n		}\n		\n		//获取数组长度\n		if(size!=null){\n			if(data instanceof List){\n				List<?> list=(List<?>) data;\n				cmdHandle.getVars().put(var,list==null?0: list.size());\n			}else if(data.getClass().isArray() ){\n				Object[] list=(Object[]) data;\n				cmdHandle.getVars().put(var,list==null?0: list.length);\n			}\n			return;\n		}\n		\n		if(data instanceof List){\n			List<?> list=(List<?>) data;\n			if(index<list.size()){\n				data=list.get(index);\n			}else{\n				data=null;\n			}\n		}else if(data.getClass().isArray() ){\n			Object[] list=(Object[]) data;\n			if(index<list.length){\n				data=list[index];\n			}else{\n				data=null;\n			}\n		}\n		if(data==null){\n			cmdHandle.getVars().put(var, null);\n		}else if(data instanceof Map){\n			Map<String,Object> map=(Map) data;\n			Object obj=map.get(childKey);\n			cmdHandle.getVars().put(var, obj);\n		}else if(StringUtil.isEmpty(childKey)){\n			cmdHandle.getVars().put(var, data);\n		}else{\n			try {\n				Method m=data.getClass().getMethod(childKey);\n				Object obj=m.invoke(data);\n				cmdHandle.getVars().put(var, obj);\n			} catch (Exception e) {\n				logger.error(\"\", e);\n			}\n		}\n		\n	}\n\n	private Object getVal(Map<String, Object> vars, String string) {\n		if(string.contains(\".\")){\n			String[] arr=string.split(\"\\\\.\");\n			Object obj=null;\n			for (String string2 : arr) {\n				if(obj!=null){\n					if(obj instanceof Map){\n						Map<String,Object> map=(Map) obj;\n						obj=map.get(string2);\n						//是否解码\n						if(\"true\".equalsIgnoreCase(decode)){\n							if(obj instanceof String){\n								try {\n									obj=URLDecoder.decode((String)obj, \"utf-8\");\n								} catch (Exception e) {\n									logger.error(\"\", e);\n								}\n							}\n						}\n						return obj;\n					}\n				}else{\n					obj=vars.get(string2);\n					//是否解码\n					if(\"true\".equalsIgnoreCase(decode)){\n						if(obj instanceof String){\n							try {\n								obj=URLDecoder.decode((String)obj, \"utf-8\");\n							} catch (Exception e) {\n								logger.error(\"\", e);\n							}\n						}\n					}\n				}\n			}\n		}else{\n			return vars.get(string);\n		}\n		return null;\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:44:47', '2021-01-02 10:34:29');
INSERT INTO `exe_resource` VALUES ('56', '2', 'plugin', 'count.java', '计数器', null, 'package com.exe.base.plugins;\n\nimport java.util.Map;\n\nimport kkd.common.util.StringUtil;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class CountCmd extends Cmd {\n	@Override\n	public String op() {\n		return \"count\";\n	}\n	/**\n	 * 计数器\n	 * @param param\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> vars=cmdHandle.getVars();\n		String var=param.get(\"var\");\n		String initStr=param.get(\"init\");\n		String incStr=param.get(\"inc\");\n		String decStr=param.get(\"dec\");\n		Integer data=(Integer) vars.get(var);\n		data=data==null?0:data;\n		\n		\n		Integer init=null;\n		if(!StringUtil.isEmpty(initStr)){\n			init=Integer.parseInt(initStr);\n		}\n		\n		Integer inc=null;\n		if(!StringUtil.isEmpty(incStr)){\n			inc=Integer.parseInt(incStr);\n		}\n		\n		Integer dec=null;\n		if(!StringUtil.isEmpty(decStr)){\n			dec=Integer.parseInt(decStr);\n		}\n		if(init==null){\n			if(inc!=null){\n				vars.put(var, data+inc);\n				return ;\n			}\n			if(dec!=null){\n				vars.put(var, data-dec);\n				return ;\n			}\n		}else{\n			if(inc!=null){\n				vars.put(var, init+inc);\n				return ;\n			}\n			if(dec!=null){\n				vars.put(var, init-dec);\n				return ;\n			}\n		}\n		vars.put(var, init);\n	}\n\n}\n', null, null, '2020-11-23 17:45:06', '2020-11-23 21:15:58');
INSERT INTO `exe_resource` VALUES ('57', '2', 'plugin', 'print.java', '打印数据', null, 'package com.exe.base.plugins;\n\nimport java.util.Map;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class PrintCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(PrintCmd.class);\n\n    @Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		String var=param.get(\"var\");\n        String desc=param.get(\"desc\");\n		Object varData=cmdHandle.getVars().get(var);\n		String sys=param.get(\"sys\");\n		Object sysData=cmdHandle.getVars().get(sys);\n        if(desc==null){\n            desc=\"\";\n        }\n        def id=cmdHandle.getCaiRule().getId()\n        def name=cmdHandle.getCaiRule().getRuleName();\n		logger.info(\"--------debug-------id:\"+id+\",name=\"+name+\"-----\");\n        logger.info(\"--------debug-------\"+desc+\"-----\");\n		logger.info(\"--------输出var:{}\",JSONObject.toJSONString(varData));\n		logger.info(\"--------输出sys:{}\",JSONObject.toJSONString(sysData));\n		logger.info(\"--------debug-------end\");\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:45:28', '2021-01-26 11:33:07');
INSERT INTO `exe_resource` VALUES ('58', '2', 'plugin', 'if.java', '条件判断', null, 'package com.exe.base.plugins;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.script.ScriptEngine;\nimport javax.script.ScriptEngineManager;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.util.GroovyUtil;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.util.StringUtil;\n\n/**\n * 通过js执行判断\n * @author tanbin\n *\n */\npublic class IfCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(IfCmd.class);\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		String js=param.get(\"js\");\n		String trueVal=param.get(\"true\");\n		String falseVal=param.get(\"false\");\n		try {\n			boolean b=(boolean)GroovyUtil.parse(js, cmdHandle.getVars());\n			logger.debug(\"执行js:{},结果：{}\",js,b);\n			if(b){\n				if(!StringUtil.isEmpty(trueVal)){\n					cmdHandle.gotoNodeByName(caiAction,trueVal);\n				}\n			}else{\n				String var=param.get(\"var\");\n				String val=param.get(\"val\");\n				if(!StringUtil.isEmpty(val) && !StringUtil.isEmpty(var)){\n					cmdHandle.getVars().put(var, val);\n				}\n				cmdHandle.gotoNodeByName(caiAction,falseVal);\n			}\n		} catch (Exception e) {\n			logger.error(\"\", e);\n		}\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n	\n	private static ScriptEngine engine;\n	\n	private static ScriptEngine getJs() {\n		if(engine==null){\n			ScriptEngineManager scriptEngineManager = new ScriptEngineManager();\n	        engine = scriptEngineManager.getEngineByName(\"javascript\");\n		}\n        return engine;\n	}\n	\n	public static void main(String[] args) {\n		String s=\"\'ss\'!=\'\'\";\n		s=\"1+2\";\n		Map<String,String> map=new HashMap<>();\n		GroovyUtil.parse(s,null);\n	}\n}\n', null, null, '2020-11-23 17:45:46', '2020-11-23 21:16:07');
INSERT INTO `exe_resource` VALUES ('59', '2', 'plugin', 'split.java', '字符串分割成数组', null, 'package com.exe.base.plugins;\n\nimport java.util.Map;\n\nimport kkd.common.util.StringUtil;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class SplitCmd extends Cmd {\n	@Override\n	public String op() {\n		return \"\";\n	}\n	/**\n	 * 字符串分割成数组\n	 * @param param\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> vars=cmdHandle.getVars();\n		String var=param.get(\"var\");\n		String key=param.get(\"key\");\n        String split=param.get(\"split\");\n        if(!StringUtil.isEmpty(key)){\n            String[] data=StringUtil.split(key, split);\n            vars.put(var, data);\n        }else{\n            vars.put(var, null);\n        }\n	}\n\n}\n', null, null, '2020-11-23 17:46:07', '2020-11-23 21:16:11');
INSERT INTO `exe_resource` VALUES ('60', '2', 'plugin', 'code.java', '代码片段', null, 'package com.exe.web.plugins;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.WeakHashMap;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.util.GroovyUtil;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport groovy.lang.GroovyClassLoader;\nimport groovy.lang.GroovyObject;\nimport kkd.common.util.Md5Util;\nimport kkd.common.util.StringUtil;\n\n/**\n * groovy 执行器\n * @author tanbin\n *\n */\npublic class CodeCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(CodeCmd.class);\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		try{\n            String code=cmd.getBody();\n            if(StringUtil.isEmpty(code)){\n                logger.error(\"{}节点：code 为空\", cmd.getName());\n                return;\n            }\n            Object[] cmdParam = new Object[2];\n            cmdParam[0]=cmd;\n            cmdParam[1]=cmdHandle;\n            GroovyUtil.exe(code, \"exe\", cmdParam);\n        }catch (Exception e){\n            Object id=cmdHandle.getCaiRule().getId()\n            Object name=cmdHandle.getCaiRule().getRuleName();\n            logger.error(\"--------error-------id:\"+id+\",name=\"+name+\"-----\");\n            e.printStackTrace();\n        }\n	}\n\n	public static void main(String[] args) {\n		GroovyClassLoader classLoader = new GroovyClassLoader();\n        Class groovyClass = classLoader.parseClass(\"def exe(cmd){\\n\" +\n                \"    print cmd.param.sql\\n\" +\n                \"}\");\n        try {\n			CmdVo cmd=new CmdVo();\n			Map<String,String> param=new HashMap<>();\n			param.put(\"sql\", \"select * from test\");\n			cmd.setParam(param);\n        	cmd.setName(\"test\");\n            Object[] param1 = { cmd};\n            GroovyObject groovyObject = (GroovyObject) groovyClass.newInstance();\n            groovyObject.invokeMethod(\"exe\",param1);\n        } catch (InstantiationException e) {\n            logger.error(\"\", e);\n        } catch (IllegalAccessException e) {\n            logger.error(\"\", e);\n        }\n	}\n	@Override\n	public String op() {\n		return null;\n	}\n	\n\n}\n', null, null, '2020-11-23 17:47:07', '2021-01-27 18:05:04');
INSERT INTO `exe_resource` VALUES ('61', '2', 'plugin', 'header.java', 'HTTP头header操作', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport kkd.common.util.StringUtil;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\n/**\n * 设置 、获取头信息\n * @author tanbin\n *\n */\npublic class HeaderCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n		\n		String val=param.get(\"val\");\n		String key=param.get(\"key\");\n		String var=param.get(\"var\");\n		if(!StringUtil.isEmpty(var)\n				&&!StringUtil.isEmpty(key)\n				){\n			Map<String, Object> vars=cmdHandle.getVars();\n			String header=req.getHeader(key);\n			vars.put(var, header);\n		}\n		if(!StringUtil.isEmpty(val)){\n			resp.addHeader(key, val);\n		}\n		\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:47:51', '2020-11-23 21:16:20');
INSERT INTO `exe_resource` VALUES ('62', '2', 'plugin', 'param.java', 'HTTP参数操作', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.exception.KKDValidationException;\nimport kkd.common.util.StringUtil;\n\n/**\n * 参数获取\n * @author tanbin\n *\n */\npublic class ParamCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		\n		Map<String, Object> vars=cmdHandle.getVars();\n		\n		String key=param.get(\"key\");\n		String var=param.get(\"var\");\n		String verify=param.get(\"verify\");\n		String reg=param.get(\"reg\");\n		String data=req.getParameter(key);\n		val(data, key, verify, reg);\n		vars.put(var, data);\n	}\n\n\n	public void val(String data,String fieldName,String verify,String reg){\n        if(!StringUtil.isEmpty(verify)){\n            String[] verrifys=StringUtil.split(verify, \"|\");\n            for (String ver : verrifys) {\n                if(\"required\".equalsIgnoreCase(ver)){\n                    if(StringUtil.isEmpty(data)){\n                        throw new KKDValidationException(fieldName+\"：不能为空！\");\n                    }\n                }else if(\"number\".equalsIgnoreCase(ver)){\n                    try{\n						Double.parseDouble(data);\n                    }catch(Exception e){\n                        throw new KKDValidationException(fieldName+\"：不是数字！\");\n                    }\n                }\n            }\n        }\n        if(!StringUtil.isEmpty(reg)){\n            Pattern r = Pattern.compile(reg);\n            Matcher m = r.matcher(data);\n            if(m.find()){\n                throw new KKDValidationException(fieldName+\"：验证失败！\");\n            }\n        }\n    }\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-23 17:48:11', '2020-11-23 21:16:24');
INSERT INTO `exe_resource` VALUES ('63', '2', 'plugin', 'parse.java', 'JSON解析成对象', null, 'package com.exe.web.plugins;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.util.IOUtils;\n\npublic class ParseCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(ParseCmd.class);\n	\n	private JSONObject getVo() throws IOException {\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		InputStream is=req.getInputStream();\n		String str=IOUtils.toString(is, \"utf-8\");\n		logger.debug(\"parse data:{}\",str);\n		JSONObject vo=JSON.parseObject(str);\n		return vo;\n	}\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		Map<String, Object> vars=cmdHandle.getVars();\n		String var=param.get(\"var\");\n		try {\n			JSONObject json=getVo();\n			vars.put(var, json);\n		} catch (IOException e) {\n			logger.error(\"\", e);\n		}\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n}\n', null, null, '2020-11-23 17:48:36', '2020-11-23 21:16:34');
INSERT INTO `exe_resource` VALUES ('64', '2', 'plugin', 'resp.java', 'HTTP响应', null, 'package com.exe.web.plugins;\n\nimport java.io.IOException;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.entity.Msg;\n\n/**\n * 输出内容\n * @author tanbin\n *\n */\npublic class RespCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(RespCmd.class);\n	\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n		\n		Map<String, Object> vars=cmdHandle.getVars();\n		String var=param.get(\"key\");\n		String code=param.get(\"code\");\n		String msg=param.get(\"msg\");\n		String tpl=param.get(\"tpl\");\n		try {\n			resp.setStatus(HttpServletResponse.SC_OK);\n			resp.setContentType(\"text/html; charset=utf-8\");\n			if(tpl==null){\n				Object jo= vars.get(var);\n				Msg<Object> rs=new Msg<Object>();\n				rs.setCode(Integer.parseInt(code));\n				rs.setMsg(msg);\n				rs.setV(jo);\n				resp.getWriter().write(rs.objectToFastJSON());\n			}else{\n				\n				String data=(String) cmdHandle.getVars().get(tpl);\n				resp.getWriter().write(data);\n			}\n		} catch (IOException e) {\n			logger.error(\"\", e);\n		}finally{\n		}\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:49:00', '2020-11-23 21:16:39');
INSERT INTO `exe_resource` VALUES ('65', '2', 'plugin', 'sqlFind.java', 'sql查询', null, 'package com.exe.web.plugins;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.dao.Paginator;\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.JDBC.DbHelper;\nimport kkd.common.dao.dbuitl.JDBC.MyBack;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.StringUtil;\n\n/**\n * 通过sql查询数据\n * @author tanbin\n *\n */\npublic class SqlFindCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(SqlFindCmd.class);\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		Integer page=1;\n		String sql=param.get(\"sql\");\n		String var=param.get(\"var\");\n		String paramStr=param.get(\"param\");\n		\n		String cols=param.get(\"cols\");\n		String[] colsAttr=cols.split(\",\");\n		String[] paramsAttr=paramStr.split(\",\");\n		Paginator p=new Paginator();\n		p.setPage(page);\n		\n		getJDBC(new MyBack() {\n			@SuppressWarnings(\"unchecked\")\n			public Object exe(DbHelper dh) throws Exception {\n				StringBuilder sb = new StringBuilder();\n				sb.append(sql);\n				List<SqlParameter> args=new ArrayList<SqlParameter>();\n				for (String string : paramsAttr) {\n					if(!StringUtil.isEmpty(string)){\n						Object obj=getVal(args, string);\n						args.add(new SqlParameter(Types.VARCHAR, obj));\n					}\n				}\n				logger.debug(\"执行sql:{}\",sql);\n				List<?> data=dh.executeQuery(sql, args, new JDBC.RowSetImpl() {\n					@Override\n					public Object getObjcet(ResultSet rs) {\n						Map<String,String> item=new HashMap<String, String>();\n						for (String string : colsAttr) {\n							try {\n								String value=rs.getString(string);\n								item.put(string, value);\n							} catch (SQLException e) {\n								logger.error(\"\", e);\n							}\n						}\n						return item;\n					}\n					\n				});\n				if(!data.isEmpty()){\n					cmdHandle.getVars().put(var, data);\n				}else{\n					cmdHandle.getVars().put(var, null);\n				}\n				return null;\n			}\n		});\n		\n	}\n\n	private Object getVal(List<SqlParameter> args, String string) {\n		if(string.contains(\".\")){\n			String[] arr=string.split(\"\\\\.\");\n			Object obj=null;\n			for (String string2 : arr) {\n				if(obj!=null){\n					if(obj instanceof Map){\n						Map<String,Object> map=(Map) obj;\n						return obj=map.get(string2);\n					}\n				}else{\n					obj=cmdHandle.getVars().get(string2);\n				}\n			}\n		}else{\n			return cmdHandle.getVars().get(string);\n		}\n		return null;\n	}\n	\n	public static void getJDBC(MyBack myBack){\n		JDBC jdbc=new JDBC();\n		jdbc.execute(myBack);\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-23 17:49:20', '2020-11-23 21:16:44');
INSERT INTO `exe_resource` VALUES ('66', '2', 'plugin', 'exeSql.java', '执行SQL', null, 'package com.exe.web.plugins;\n\nimport java.sql.Types;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.JDBC.DbHelper;\nimport kkd.common.dao.dbuitl.JDBC.MyBack;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.StringUtil;\n\n\n/**\n * 通过sql查询数据\n * @author tanbin\n *\n */\npublic class ExeSqlCmd extends Cmd{\n	\n	private final static Logger logger = LoggerFactory.getLogger(ExeSqlCmd.class);\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		long l=System.currentTimeMillis();\n		String sql=param.get(\"sql\");\n		String rsId=param.get(\"rsId\");\n		String body=caiAction.getBody();\n		\n		String var=param.get(\"var\");\n		String cols=param.get(\"cols\");\n		String[] colsAttr=cols.split(\",\");\n		logger.debug(\"当前节点执行完成，耗时0：{}\",(System.currentTimeMillis()-l));\n		getJDBC(new MyBack() {\n			public Object exe(DbHelper dh) throws Exception {\n				logger.debug(\"当前节点执行完成，耗时1：{}\",(System.currentTimeMillis()-l));\n				List<SqlParameter> args=new ArrayList<SqlParameter>();\n				for (String string : colsAttr) {\n					if(!StringUtil.isEmpty(string)){\n						Object obj=getVal(args, string);\n						args.add(new SqlParameter(Types.VARCHAR, obj));\n					}\n				}\n				String sql1=sql;\n				if(!StringUtil.isEmpty(body)){\n					sql1=body;\n				}\n				logger.debug(\"exe sql:{}\",sql1);\n				logger.debug(\"当前节点执行完成，耗时2：{}\",(System.currentTimeMillis()-l));\n				if(!StringUtil.isEmpty(rsId)){\n					Integer id=dh.executeUpdateWithId(sql, args);\n					cmdHandle.getVars().put(rsId, id);\n				}else{\n					Integer cnt=dh.executeUpdate(sql1, args);\n					cmdHandle.getVars().put(var, cnt);\n				}\n				\n				logger.debug(\"当前节点执行完成，耗时3：{}\",(System.currentTimeMillis()-l));\n				return null;\n			}\n		});\n		logger.debug(\"当前节点执行完成，耗时4：{}\",(System.currentTimeMillis()-l));\n	}\n	\n	private Object getVal(List<SqlParameter> args, String string) {\n		if(string.contains(\".\")){\n			String[] arr=string.split(\"\\\\.\");\n			Object obj=null;\n			for (String string2 : arr) {\n				if(obj!=null){\n					if(obj instanceof Map){\n						Map<String,Object> map=(Map) obj;\n						return obj=map.get(string2);\n					}\n				}else{\n					obj=cmdHandle.getVars().get(string2);\n				}\n			}\n		}else{\n			return cmdHandle.getVars().get(string);\n		}\n		return null;\n	}\n	public static void getJDBC(MyBack myBack){\n		JDBC jdbc=new JDBC();\n		jdbc.execute(myBack);\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-23 17:49:38', '2020-11-23 21:16:47');
INSERT INTO `exe_resource` VALUES ('67', '2', 'plugin', 'tpl.java', 'ftl模板', null, 'package com.exe.web.plugins;\n\nimport java.io.StringWriter;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport com.exe.base.vo.ExeResourceVo;\nimport com.exe.bo.RuleBo;\n\nimport freemarker.cache.StringTemplateLoader;\nimport freemarker.template.Configuration;\nimport freemarker.template.Template;\nimport kkd.common.entity.Msg;\nimport kkd.common.util.StringUtil;\n\npublic class TplCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(TplCmd.class);\n	\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n		\n		String val=param.get(\"val\");\n		String src=param.get(\"src\");\n		String var=param.get(\"var\");\n		String model=param.get(\"model\");\n		if(!StringUtil.isEmpty(src)){\n			Msg<ExeResourceVo> msg=new Msg<>();\n			RuleBo.getByPath(src,msg);\n			if(msg.isSuccess()){\n				ExeResourceVo rule=msg.getV();\n				val=rule.getCaiConfig();\n			}\n		}\n		Object modelData=cmdHandle.getVars().get(model);\n		Map<String,String> dataModel=new HashMap<String, String>();\n		if(modelData!=null){\n			dataModel.put(model, modelData.toString());\n		}\n		String data=tpl(val, cmdHandle.getVars());\n		cmdHandle.getVars().put(var, data);\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n	\n	private String tpl(String tpl,Object model){\n		StringTemplateLoader stringLoader = new StringTemplateLoader();\n		String firstTemplate = \"firstTemplat\";\n		stringLoader.putTemplate(firstTemplate, tpl);\n		\n		Configuration cfg = new Configuration(Configuration.VERSION_2_3_28);\n		cfg.setTemplateLoader(stringLoader);\n		try {\n			Template template = cfg.getTemplate(firstTemplate);\n			StringWriter sw = new StringWriter();\n			template.process(model, sw);\n			logger.debug(\"{}\",sw.getBuffer().toString());\n			return sw.getBuffer().toString();\n		} catch (Exception e) {\n			logger.error(\"\", e);\n		} \n		return null;\n	}\n}\n', null, null, '2020-11-23 17:50:24', '2020-11-23 21:16:53');
INSERT INTO `exe_resource` VALUES ('68', '2', 'plugin', 'page.java', 'SQL分页', null, 'package com.exe.web.plugins;\n\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.dao.PageList;\nimport kkd.common.dao.Paginator;\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.JDBC.DbHelper;\nimport kkd.common.dao.dbuitl.JDBC.MyBack;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.StringUtil;\n\n/**\n * 通过sql查询数据\n * @author tanbin\n *\n */\npublic class PageCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(PageCmd.class);\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		String sql=param.get(\"sql\");\n		String var=param.get(\"var\");\n		String paramStr=param.get(\"param\");\n		String pageIndex=param.get(\"page\");\n		String pageSize=param.get(\"pageSize\");\n		//如果* 查所有\n		String cols=param.get(\"cols\");\n		String[] colsAttr=cols.split(\",\");\n		String[] paramsAttr=paramStr.split(\",\");\n		\n		getJDBC(new MyBack() {\n			@SuppressWarnings(\"unchecked\")\n			public Object exe(DbHelper dh) throws Exception {\n				\n				StringBuilder sb = new StringBuilder();\n				sb.append(sql);\n				List<SqlParameter> args=new ArrayList<SqlParameter>();\n				for (String string : paramsAttr) {\n					if(!StringUtil.isEmpty(string)){\n						Object obj=getVal(args, string);\n						if(!StringUtil.isEmpty(obj)){\n							args.add(new SqlParameter(Types.VARCHAR, obj));\n						}\n					}\n				}\n				logger.debug(\"执行sql:{}\",sql);\n				\n				JDBC.RowSetImpl<Object> rsi=new JDBC.RowSetImpl<Object>() {\n					@Override\n					public Object getObjcet(ResultSet rs) {\n						Map<String,String> item=new HashMap<String, String>();\n						if(\"*\".equalsIgnoreCase(cols)){\n							try{\n								ResultSetMetaData rsMeta=rs.getMetaData();\n								int columnCount=rsMeta.getColumnCount();\n								for (int i=1; i<=columnCount; i++) {\n									item.put(rsMeta.getColumnLabel(i), rs.getString(i));\n								}\n							}catch(Exception e){\n								logger.error(\"\", e);\n							}\n							\n						}else{\n							for (String string : colsAttr) {\n								try {\n									String value=rs.getString(string);\n									item.put(string, value);\n								} catch (SQLException e) {\n									logger.error(\"\", e);\n								}\n							}\n						}\n						return item;\n					}\n					\n				};\n				Paginator p=new Paginator();\n				p.setPage(Integer.parseInt(pageIndex));\n				p.setItemsPerPage(Integer.parseInt(pageSize));\n				PageList<Object> data=dh.query(sql, args, p, rsi);\n				if(data!=null){\n					cmdHandle.getVars().put(var, data);\n				}else{\n					cmdHandle.getVars().put(var, null);\n				}\n				return null;\n			}\n		});\n		\n	}\n\n	private Object getVal(List<SqlParameter> args, String string) {\n		if(string.contains(\".\")){\n			String[] arr=string.split(\"\\\\.\");\n			Object obj=null;\n			for (String string2 : arr) {\n				if(obj!=null){\n					if(obj instanceof Map){\n						Map<String,Object> map=(Map) obj;\n						return obj=map.get(string2);\n					}\n				}else{\n					obj=cmdHandle.getVars().get(string2);\n				}\n			}\n		}else{\n			return cmdHandle.getVars().get(string);\n		}\n		return null;\n	}\n	\n	public static void getJDBC(MyBack myBack){\n		JDBC jdbc=new JDBC();\n		jdbc.setDebug(true);\n		jdbc.execute(myBack);\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-23 17:50:42', '2020-12-30 17:50:10');
INSERT INTO `exe_resource` VALUES ('69', '2', 'plugin', 'append.java', '字符串append', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\n\nimport kkd.common.util.StringUtil;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\n/**\n * 字符串操作\n * @author tanbin\n *\n */\npublic class AppendCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		String key=param.get(\"key\");\n		String when=param.get(\"when\");\n		String value=param.get(\"value\");\n		Object whenVal= cmdHandle.getVars().get(when);\n		if(!StringUtil.isEmpty(whenVal)){\n			String keyVal=(String) cmdHandle.getVars().get(key);\n			cmdHandle.getVars().put(key, keyVal+value);		\n		}\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:51:06', '2020-11-23 21:17:00');
INSERT INTO `exe_resource` VALUES ('70', '2', 'plugin', 'file.java', '文件相关操作', null, 'package com.exe.web.plugins;\n\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.LineNumberReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport java.net.URLDecoder;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport com.exe.web.util.MyConfUtil;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.util.FileUtil;\nimport kkd.common.util.StringUtil;\n\npublic class FileCmd extends Cmd{\n	private final static Logger logger = LoggerFactory.getLogger(FileCmd.class);\n	\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n//		logger.setRuleId(cmdHandle.getCaiRule().getId().toString());\n		String op=param.get(\"op\");\n        String currPath=param.get(\"currPath\");\n		String path=param.get(\"dir\");\n		String var=param.get(\"var\");\n		String key=param.get(\"key\");\n        String root=param.get(\"root\");\n        root=root==null?\"\":root;\n        String oldRootPath=MyConfUtil.getRootPath()+File.separator+\"static\";\n		String rootPath=MyConfUtil.getRootPath()+File.separator+\"static\"+File.separator+root;\n		\n		\n		if(StringUtil.isEmpty(path)){\n			path=rootPath;\n            if(!StringUtil.isEmpty(currPath)){\n                path=rootPath+currPath;\n            }\n		}else{\n			path=rootPath+path;\n		}\n		if(\"rename\".equalsIgnoreCase(op)){\n			String dest=param.get(\"dest\");\n			File f=new File(path);\n			File destFile=new File(dest);\n			boolean r=false;\n			r = f.renameTo(destFile);\n			cmdHandle.getVars().put(var, r);\n		}else if(\"newfile\".equalsIgnoreCase(op)){\n			File f=new File(path);\n			boolean r=false;\n			try {\n				r = f.createNewFile();\n			} catch (IOException e) {\n				logger.error(\"\", e);\n			}\n			cmdHandle.getVars().put(var, r);\n		}else if(\"mkdir\".equalsIgnoreCase(op)){\n			String folder=param.get(\"folder\");\n			boolean r=FileUtil.mkdir(path+\"/\"+folder);\n			cmdHandle.getVars().put(var, r);\n		}else if(\"del\".equalsIgnoreCase(op)){\n			File f=new File(path);\n			boolean r=f.delete();\n			cmdHandle.getVars().put(var, r);\n		}else if(\"read\".equalsIgnoreCase(op)){\n			//开始行\n			String startLineStr=param.get(\"startLine\");\n			Long startLine = null;\n			String limitStr=param.get(\"limit\");\n			Long limit=null;\n			\n			if(startLine==null && !StringUtil.isEmpty(startLineStr) ) {\n				startLine=Long.parseLong(startLineStr);\n			}else {\n				startLine=0l;\n			}\n			\n			if(limit==null && !StringUtil.isEmpty(limitStr)) {\n				limit=Long.parseLong(limitStr);\n			}else {\n				limit=Long.MAX_VALUE;\n			}\n			FileReader file;\n			try {\n				file = new FileReader(path);\n				LineNumberReader lineNumberReader =new LineNumberReader(file);\n				if(startLine==-1){\n					long c=lineNumberReader.skip(Long.MAX_VALUE);\n					cmdHandle.getVars().put(var,c);\n					return;\n				}\n				lineNumberReader.skip(startLine);\n				long hasRead=0;\n				StringBuilder sb=new StringBuilder();\n				String line=null;\n				do{\n					line=lineNumberReader.readLine();\n					if(line!=null){\n						sb.append(line);\n						sb.append(\"\\r\\n\");\n						hasRead++;\n					}\n					\n				}while(line!=null && hasRead<=limit-1);\n				cmdHandle.getVars().put(var,sb);\n			} catch (Exception e) {\n				logger.error(\"\", e);\n			}\n			\n		}else if(\"write\".equalsIgnoreCase(op)){\n			String data=(String) cmdHandle.getVars().get(key);\n			FileUtil.writeMethodB(path, data, false);\n			cmdHandle.getVars().put(var,true);\n		}else if(\"list\".equalsIgnoreCase(op)){\n			File f=new File(path);\n			File[] list=f.listFiles();\n			List<JSONObject> listFile=new ArrayList<JSONObject>(); \n			for (File file : list) {\n				JSONObject obj=new JSONObject();\n				String type=\"\";\n				String fileName=file.getName();\n           \n				if(file.isDirectory()){\n					type=\"directory\";\n				}else{\n					int pos=fileName.lastIndexOf(\".\");\n					if(pos!=-1){\n						String subfix=fileName.substring(pos+1);\n						type=subfix;\n					}\n				}\n				if(\"png\".equalsIgnoreCase(type)\n						||\"gif\".equalsIgnoreCase(type)\n						||\"jpg\".equalsIgnoreCase(type)\n						){\n					String thumb=file.getPath().replace(rootPath, \"\");\n					//obj.put(\"thumb\",\"/html\"+thumb);\n              obj.put(\"thumb\",thumb);\n				}\n				String url=file.getPath().replace(rootPath, \"\");\n				obj.put(\"url\",url);\n				obj.put(\"type\",type);\n				obj.put(\"name\", file.getName());\n				path=StringUtil.replace(file.getPath(), rootPath, \"\");\n				obj.put(\"path\", path);\n				listFile.add(obj);\n			}\n			cmdHandle.getVars().put(var, listFile);\n		}\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n	public static void main(String[] args) {\n		File f=new File(\"E:\\\\workspaceGroup\\\\workspace_my\\\\exeWeb\\\\static\\\\html\\\\test\\\\test.txt\");\n		logger.debug(\"{}\",f.delete());\n	}\n}\n', null, null, '2020-11-23 17:51:22', '2021-03-10 16:12:55');
INSERT INTO `exe_resource` VALUES ('71', '2', 'plugin', 'bean.java', '定义bean方便验证api生成', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.exception.KKDValidationException;\nimport kkd.common.util.StringUtil;\n\n\n/**\n * 定义实体操作\n * @author tanbin\n *\n */\npublic class BeanCmd extends Cmd{\n\n	@Override\n	public void exe(final CmdVo caiAction, final Map<String, String> param) {\n        final String key=param.get(\"key\");\n        final JSONArray fields =caiAction.getJsonBody();\n        JSONObject data=(JSONObject) cmdHandle.getVars().get(key);\n        if(fields!=null){\n            for (final Object object : fields) {\n                final JSONObject field= (JSONObject) object;\n                String fieldName=field.getString(\"key\");\n                String verify=field.getString(\"verify\");\n                String reg=field.getString(\"reg\");//正则表达式\n                val(data, fieldName, verify, reg);\n            }\n        }\n    }\n    \n    public void val(JSONObject data,String fieldName,String verify,String reg){\n        if(!StringUtil.isEmpty(verify)){\n            String[] verrifys=StringUtil.split(verify, \"|\");\n            for (String ver : verrifys) {\n                if(\"required\".equalsIgnoreCase(ver)){\n                    String val=data.getString(fieldName);\n                    if(StringUtil.isEmpty(val)){\n                        throw new KKDValidationException(fieldName+\"：不能为空！\");\n                    }\n                }else if(\"number\".equalsIgnoreCase(ver)){\n                    try{\n                        data.getDouble(fieldName);\n                    }catch(Exception e){\n                        throw new KKDValidationException(fieldName+\"：不是数字！\");\n                    }\n                }\n            }\n        }\n        if(!StringUtil.isEmpty(reg)){\n            Pattern r = Pattern.compile(reg);\n            String val=data.getString(fieldName);\n            Matcher m = r.matcher(val);\n            if(m.find()){\n                throw new KKDValidationException(fieldName+\"：验证失败！\");\n            }\n        }\n    }\n\n	@Override\n	public String op() {\n		return null;\n	}\n\n}\n', null, null, '2020-11-23 17:51:53', '2020-11-23 21:17:07');
INSERT INTO `exe_resource` VALUES ('72', '43', 'api', '/db/sql/exe', '执行SQL', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"sql执行\" corn=\"\">\n	<seg name=\"sql执行\">\n		<param name=\"sql\" var=\"sql\" key=\"sql\" mock=\"@string(\'lower\', 5)\" />\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"\"\n			:sql=\"#{sql}\"\n		>\n		</exeSql>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"cnt\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-23 20:32:32', '2020-11-23 20:42:09');
INSERT INTO `exe_resource` VALUES ('73', '43', 'api', '/db/sql/query', '数据库查询', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用查询\" corn=\"\">\n	<seg name=\"应用查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"sql\" var=\"sql\" key=\"sql\" mock=\"@string(\'lower\', 5)\" />\n		\n		<page name=\"查询数据\" var=\"list\" cols=\"*\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"\"\n		>\n			\n		</page>\n		<print name=\"d\" var=\"list\"/>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-23 20:38:54', '2020-11-25 09:57:13');
INSERT INTO `exe_resource` VALUES ('74', '47', 'api', '/user/reg', '用户注册', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户新增\" corn=\"\">\n	<seg name=\"用户新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"用户名\" key=\"userName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"昵称\" key=\"nickName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"密码\" key=\"pwd\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n      <code name=\"md5\" hasBody=\"true\">\n          def exe(a,cmdHandle){\n          		def pwd=cmdHandle.getVars().get(\"vo\").pwd\n          		def pwd_md5=kkd.common.util.Md5Util.encode(pwd)\n          		cmdHandle.getVars().put(\"pwd\",pwd_md5)\n          }\n      </code>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.userName,vo.nickName,pwd,createTime,vo.upTime\"\n			sql=\"insert into user_info(id,userName,nickName,pwd,createTime,upTime) values(?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-24 21:00:18', '2021-01-17 21:32:38');
INSERT INTO `exe_resource` VALUES ('75', '35', 'api', '/user/login', '用户登录', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户登录\" corn=\"\">\n	<seg name=\"用户登录\">\n		<param name=\"用户名\" var=\"userName\" key=\"userName\" />\n		<param name=\"密码\" var=\"pwd\" key=\"pwd\" />\n		\n		<code name=\"md5\" hasBody=\"true\">\n          def exe(a,cmdHandle){\n          		def pwd=cmdHandle.getVars().get(\"pwd\")\n          		def pwd_md5=kkd.common.util.Md5Util.encode(pwd)\n          		cmdHandle.getVars().put(\"pwd\",pwd_md5)\n          }\n      </code>\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,userName\" param=\"userName,pwd\"\n		sql=\"select id,userName from user_info where 1=1 and userName=? and pwd=?\"  \n		>\n			\n		</sqlFind>\n      <if name=\"用户是否存在\" js=\"list!=null &amp;&amp; list.size>0\" false=\"失败\"/>\n       <code name=\"获取用户\" hasBody=\"true\">\n              def exe(a,cmdHandle){\n                    if(cmdHandle.vars.list!=null){\n                        def user=cmdHandle.vars.list.get(0)\n         			    cmdHandle.vars.put(\"user\",user)\n                    }\n        			\n              }\n          </code>\n      <!-- <var name=\"获取用户\" var=\"user\" key=\"list\" index=\"0\"/> -->\n      <cookie name=\"获取cookie\" op=\"get\" key=\"sessionId\" var=\"sessionId\"/>\n     \n      \n      <if name=\"判断cookie是否存在\" js=\"sessionId==null\" false=\"记录用户会话\" />\n      		<code name=\"uuid\" hasBody=\"true\">\n              def exe(a,cmdHandle){\n                def uuid=kkd.common.util.UUIDUtil.getUUID()\n                cmdHandle.getVars().put(\"sessionId\",uuid)\n              }\n          </code>\n      		<cookie name=\"设置cookie\" op=\"put\" key=\"sessionId\" value=\"sessionId\" uri=\"/\" maxAge=\"999999\"/>\n      <!-- 记录用户会话 -->\n		<session name=\"记录用户会话\" :key=\"#{sessionId}\" op=\"put\" value=\"user\" timeout=\"999999\" />\n      \n      \n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"登录失败\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-24 21:00:56', '2020-12-23 09:54:39');
INSERT INTO `exe_resource` VALUES ('76', '47', 'api', '/user/page', '用户列表', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户查询\" corn=\"\">\n	<seg name=\"用户查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"用户名\" var=\"userName\" key=\"userName\" />\n     <param name=\"昵称\" var=\"nickName\" key=\"nickName\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from user_info where 1=1 \"/>\n		<append name=\"添加userName\" key=\"sql\" when=\"userName\" value=\" and userName like concat(\'%\',?,\'%\') \" />\n		<append name=\"添加nickName\" key=\"sql\" when=\"nickName\" value=\" and nickName like concat(\'%\',?,\'%\') \" />\n		<page name=\"查询数据\" var=\"list\" cols=\"id,userName,nickName,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"userName,nickName\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-24 21:01:40', '2020-11-25 09:26:29');
INSERT INTO `exe_resource` VALUES ('77', '47', 'api', '/user/add', '用户新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户新增\" corn=\"\">\n	<seg name=\"用户新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"用户名\" key=\"userName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"昵称\" key=\"nickName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"密码\" key=\"pwd\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		<code name=\"md5\" hasBody=\"true\">\n          def exe(a,cmdHandle){\n          		def pwd=cmdHandle.getVars().get(\"vo\").pwd\n          		def pwd_md5=kkd.common.util.Md5Util.encode(pwd)\n          		cmdHandle.getVars().put(\"pwd\",pwd_md5)\n          }\n      </code>\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"vo.userName,vo.nickName,pwd,createTime\"\n			sql=\"insert into user_info(userName,nickName,pwd,createTime) values(?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-24 21:27:19', '2021-01-18 13:21:44');
INSERT INTO `exe_resource` VALUES ('78', '47', 'api', '/user/mod', '用户修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户修改\" corn=\"\">\n	<seg name=\"用户修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"用户名\" key=\"userName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"昵称\" key=\"nickName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"密码\" key=\"pwd\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"角色id\" key=\"roleIds\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		<code name=\"md5\" hasBody=\"true\">\n          def exe(a,cmdHandle){\n          		def pwd=cmdHandle.getVars().get(\"vo\").pwd\n          		def pwd_md5=kkd.common.util.Md5Util.encode(pwd)\n          		cmdHandle.getVars().put(\"pwd\",pwd_md5)\n          }\n      </code>\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.userName,vo.nickName,pwd,upTime,vo.id\"\n			sql=\"update user_info set userName=?,nickName=?,pwd=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n        <split name=\"拆分角色集合\" var=\"roleIds\" :key=\"#{vo.roleIds}\" split=\",\"/>\n         <exeSql name=\"删除标签关联\" var=\"insertCnt\" cols=\"vo.id\"\n			sql=\"delete from user_role_ref where userId=?\"\n		>\n		</exeSql>\n        <count name=\"数据索引位置\" init=\"0\"  var=\"index\"/>\n        <go name=\"跳转循环新增角色\" to=\"循环新增角色\"/>\n	</seg>\n    <seg name=\"循环新增角色\">\n        <var name=\"获取roleId\"  key=\"roleIds\" :index=\"#{index}\"  var=\"roleId\"  />\n        <if name=\"判断roleId是否存在\" js=\"roleId!=\'\'&amp;&amp; roleId!=null \" false=\"跳转到结束\" />\n        <exeSql name=\"插入标签数据\" var=\"insertCnt1\" cols=\"roleId,vo.id\"\n                sql=\"insert into user_role_ref(roleId,userId) values(?,?)\"\n            >\n            </exeSql>\n        <count name=\"数据索引位置+1\"  inc=\"1\" var=\"index\"/>\n        \n        \n        <go name=\"跳转循环新增角色\" to=\"循环新增角色\"/>\n        <go name=\"跳转到结束\" to=\"结束\"/>\n    </seg>\n    <seg name=\"结束\">\n        <resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n        <go  name=\"跳转到结束\" to=\"end\"/>\n        <resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n        <empty name=\"end\"/>\n    </seg>\n	\n</rule>', null, null, '2020-11-24 21:27:51', '2020-12-21 11:54:18');
INSERT INTO `exe_resource` VALUES ('79', '47', 'api', '/user/del', '用户删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户删除\" corn=\"\">\n	<seg name=\"用户删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  user_info where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-24 21:28:12', '2020-11-24 21:41:21');
INSERT INTO `exe_resource` VALUES ('80', '47', 'api', '/user/get', '获取用户', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"用户ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,userName,nickName,createTime,upTime\" param=\"id\"\n		sql=\"select * from user_info where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 09:28:35', '2020-11-25 09:30:35');
INSERT INTO `exe_resource` VALUES ('81', '48', 'api', '/role/add', '角色新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"角色新增\" corn=\"\">\n	<seg name=\"角色新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"角色名称\" key=\"roleName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"角色描述\" key=\"remark\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.roleName,vo.remark,createTime,vo.upTime\"\n			sql=\"insert into role_info(id,roleName,remark,createTime,upTime) values(?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 10:11:18', '2020-12-15 12:00:09');
INSERT INTO `exe_resource` VALUES ('82', '48', 'api', '/role/mod', '角色修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"角色修改\" corn=\"\">\n	<seg name=\"角色修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"角色名称\" key=\"roleName\" mock=\"@string(\'lower\', 5)\" reg=\"\"  verify=\"required\" />\n        <field name=\"角色描述\" key=\"remark\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n        \n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.roleName,vo.remark,upTime,vo.id\"\n			sql=\"update role_info set roleName=?,remark=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 10:11:49', '2020-12-15 12:00:59');
INSERT INTO `exe_resource` VALUES ('83', '48', 'api', '/role/get', '查看角色', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"角色ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,roleName,remark,createTime,upTime\" param=\"id\"\n		sql=\"select * from role_info where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 10:12:13', '2020-12-15 12:08:13');
INSERT INTO `exe_resource` VALUES ('84', '48', 'api', '/role/page', '角色分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"角色查询\" corn=\"\">\n	<seg name=\"角色查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"角色名称\" var=\"roleName\" key=\"roleName\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from role_info where 1=1 \"/>\n		<append name=\"添加roleName\" key=\"sql\" when=\"roleName\" value=\" and roleName like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,roleName,remark,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"roleName\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 10:12:33', '2020-12-15 12:07:57');
INSERT INTO `exe_resource` VALUES ('85', '48', 'api', '/role/del', '角色删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用删除\" corn=\"\">\n	<seg name=\"应用删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  role_info where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 10:12:55', '2020-11-25 10:19:20');
INSERT INTO `exe_resource` VALUES ('86', '2', 'plugin', 'session.java', '会话管理', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\n\nimport com.alibaba.fastjson.JSON;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.cache.server.MapServerThread;\nimport kkd.common.util.StringUtil;\n\n\n/**\n * session 操作\n * @author tanbin\n *\n */\npublic class SessionCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		MapServerThread st =MapServerThread.getInstance();\n		String op=param.get(\"op\");\n		if(\"remove\".equalsIgnoreCase(op)){\n			String key=param.get(\"key\");\n			st.remove(key);\n		}else if(\"get\".equalsIgnoreCase(op)){\n			String key=param.get(\"key\");\n			String innerArg=param.get(\"innerArg\");\n			String inner=param.get(\"inner\");\n			String upDate=param.get(\"upDate\");\n			Boolean updateDate=Boolean.valueOf(upDate);\n			String var=param.get(\"var\");\n			String value=null;\n			if(!StringUtil.isEmpty(key)){\n				if(inner!=null&&\"true\".equalsIgnoreCase(inner)){\n					value=st.getInnerData(key,innerArg, updateDate);\n				}else{\n					value=st.get(key,updateDate);\n				}\n			}\n			cmdHandle.getVars().put(var, value);\n		}else if(\"put\".equalsIgnoreCase(op)){\n			String key=param.get(\"key\");\n			String timeoutStr=param.get(\"timeout\");\n			String value=param.get(\"value\");\n			Object o=cmdHandle.getVars().get(value);\n			String data=JSON.toJSONString(o);\n			st.put(key, Long.valueOf(timeoutStr), data);\n		}\n		\n	}\n\n\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-25 11:07:16', '2020-11-25 13:50:41');
INSERT INTO `exe_resource` VALUES ('87', '47', 'api', '/user/current', '当前用户', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"当前用户\" corn=\"\">\n	<seg name=\"当前用户\">\n      <cookie name=\"获取cookie\" key=\"sessionId\" op=\"get\" var=\"sessionId\"/>\n      \n      <!-- 获取用户会话 -->\n		<session name=\"记录用户会话\" :key=\"#{sessionId}\" upDate=\"true\" op=\"get\" var=\"user\"/>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"user\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-25 11:14:02', '2020-12-21 11:07:36');
INSERT INTO `exe_resource` VALUES ('88', '2', 'plugin', 'cookie.java', 'cookie操作', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\n\nimport javax.servlet.http.Cookie;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.util.CookieUtil;\n\n\n/**\n * cookie 操作\n * @author tanbin\n *\n */\npublic class CookieCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n        Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n		String op=param.get(\"op\");\n		if(\"remove\".equalsIgnoreCase(op)){\n            String path=param.get(\"path\");\n            String domain=param.get(\"domain\");\n            String name=param.get(\"key\");\n            CookieUtil.remove(resp, path, domain, name);\n		}else if(\"get\".equalsIgnoreCase(op)){\n            String name=param.get(\"key\");\n            String var=param.get(\"var\");\n            Cookie val=CookieUtil.getCookieByName(req, name);\n            if(val!=null){\n                cmdHandle.getVars().put(var, val.getValue());\n            }else{\n                cmdHandle.getVars().put(var, null);\n            }\n		}else if(\"put\".equalsIgnoreCase(op)){\n            String domain=param.get(\"domain\");\n            String name=param.get(\"key\");\n            String value=param.get(\"value\");\n            String uri=param.get(\"uri\");\n            \n            String valueData=cmdHandle.getVars().get(value).toString();\n            String maxAgeStr=param.get(\"maxAge\");\n            CookieUtil.addCookie(resp, name, valueData, uri, domain, Integer.valueOf(maxAgeStr));\n		}\n		\n	}\n\n\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-25 14:13:31', '2020-12-27 20:26:16');
INSERT INTO `exe_resource` VALUES ('89', '2', 'plugin', 'route.java', '路由操作', null, 'package com.exe.web.plugins;\n\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.Enumeration;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.servlet.ServletInputStream;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\n\n/**\n * 路由 操作\n * @author tanbin\n *\n */\npublic class RouteCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n        HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n        String url=param.get(\"url\");\n        String location=param.get(\"location\");\n        send(req, resp, url, location);\n		\n	}\n\n    private void send(HttpServletRequest req,HttpServletResponse resp,String url,String location) {\n		HttpURLConnection con=null;\n		try {\n			Enumeration<String> head=req.getHeaderNames();\n			String path=req.getServletPath();\n			if(location!=null){\n				int pos=path.indexOf(location);\n				path=path.substring(pos+location.length());\n//				path=path.replace(location, \"\");\n			} \n			url=url+(path==null?\"\":path);\n			url=url+(req.getQueryString()==null?\"\":\"?\"+req.getQueryString());\n			System.out.println(String.format(\"请求URL:%s\", url));\n			System.setProperty(\"sun.net.http.allowRestrictedHeaders\", \"true\");\n			URL u = new URL(url);\n			con = (HttpURLConnection) u.openConnection();\n			con.setConnectTimeout(3000);\n			con.setReadTimeout(3000);\n			con.setRequestMethod(req.getMethod());\n			con.setDoOutput(true);\n			con.setDoInput(true);\n			con.setUseCaches(false);\n			while(head.hasMoreElements()) {\n				String key=head.nextElement();\n				String val=req.getHeaders(key).nextElement();\n//				System.out.println(String.format(\"%s:%s\",key,val));\n				con.setRequestProperty(key, val);\n			}\n			byte[] bytes = new byte[1024*200];\n			int byteread=-1;\n			if(!\"GET\".equals(req.getMethod())){\n				ServletInputStream sis=req.getInputStream();\n				OutputStream os=con.getOutputStream();\n				while ((byteread = sis.read(bytes)) != -1) {\n					os.write(bytes, 0, byteread);\n				}\n				os.flush();\n			}\n			HttpServletResponse hsr=resp;\n			if(con.getResponseCode()==200){\n				InputStream is=con.getInputStream();\n				Map<String, List<String>> mapHead=con.getHeaderFields();\n				for (Map.Entry<String, List<String>> ele : mapHead.entrySet()) {\n					String key=ele.getKey();\n					if(key==null){\n						continue;\n					}\n					\n//					System.out.println(String.format(\"%s:%s\",key, val));\n					if(\"Set-Cookie\".equals(key)){\n						List<String> vals=ele.getValue();\n						for (String val : vals) {\n							val=val.replace(\"Domain=\"+u.getHost(), \"Domain=\"+req.getRemoteAddr());\n							hsr.addHeader(key, val);\n						}\n					}else if(\"Transfer-Encoding\".equals(key)){\n//						chunked\n					}else{\n						List<String> vals=ele.getValue();\n						for (String val : vals) {\n							val=val.replace(\"Domain=\"+u.getHost(), \"Domain=\"+req.getRemoteAddr());\n							hsr.addHeader(key, val);\n						}\n					}\n					\n				}\n				ServletOutputStream sos=resp.getOutputStream();\n				while ((byteread = is.read(bytes)) != -1) {\n					sos.write(bytes, 0, byteread);\n					sos.flush();\n				}\n			}else if(con.getResponseCode()==304){\n				hsr.setStatus(con.getResponseCode());\n			}else{\n				hsr.setStatus(con.getResponseCode());\n				InputStream is=con.getErrorStream();\n				if(is!=null){\n					ServletOutputStream sos=resp.getOutputStream();\n					while ((byteread = is.read(bytes)) != -1) {\n						sos.write(bytes, 0, byteread);\n						sos.flush();\n					}\n				}\n			}\n		} catch (Exception e) {\n			e.printStackTrace();\n		}finally {\n			if(con!=null){\n				con.disconnect();\n			}\n		}\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-25 16:33:44', '2020-11-25 16:34:01');
INSERT INTO `exe_resource` VALUES ('90', '2', 'plugin', 'dbinfo.java', '数据库信息获取', null, 'package com.exe.web.plugins;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport kkd.common.util.StringUtil;\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.JDBC.DbHelper;\nimport kkd.common.dao.dbuitl.JDBC.MyBack;\n\n\n/**\n * 通过sql查询数据\n * @author tanbin\n *\n */\npublic class DbInfoCmd extends Cmd{\n	\n	private final static Logger logger = LoggerFactory.getLogger(DbInfoCmd.class);\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n        String op=param.get(\"op\");\n        String var=param.get(\"var\");\n		getJDBC(new MyBack() {\n			public Object exe(DbHelper dh) throws Exception {\n                String catalog=param.get(\"catalog\");\n                String schemaPattern=param.get(\"schemaPattern\");\n				String tableNamePattern=param.get(\"tableNamePattern\");\n				catalog=\"\".equals(catalog)?null:catalog;\n				schemaPattern=\"\".equals(schemaPattern)?null:schemaPattern;\n				tableNamePattern=\"\".equals(tableNamePattern)?null:tableNamePattern;\n                if(\"table\".equalsIgnoreCase(op)){\n					String[] types=new String[2];\n					types[0]=\"TABLE\";\n					types[1]=\"VIEW\";\n                    List<Map<String,String>> list=dh.listAllTables(catalog, schemaPattern, tableNamePattern, types);\n                    cmdHandle.getVars().put(var, list);\n                }else if(\"field\".equalsIgnoreCase(op)){\n                    String columnNamePattern=param.get(\"columnNamePattern\");\n                    if(StringUtil.isEmpty(columnNamePattern)){\n                        columnNamePattern=\"%\";\n                    }\n                    List<Map<String,String>> list=dh.listAllFields(catalog, schemaPattern, tableNamePattern, columnNamePattern);\n                    //List<Map<String,String>> list=dh.listAllFields(null, \"%\", tableNamePattern, \"%\");\n                    cmdHandle.getVars().put(var, list);\n                }\n				return null;\n			}\n		});\n	}\n	\n	public static void getJDBC(MyBack myBack){\n		JDBC jdbc=new JDBC();\n		jdbc.execute(myBack);\n	}\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-11-26 09:46:30', '2021-01-18 10:16:13');
INSERT INTO `exe_resource` VALUES ('91', '2', 'api', '/db/sql/dbinfo', '数据库信息', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"数据库信息查询\" corn=\"\">\n	<seg name=\"数据库信息查询\">\n      <param name=\"op\" var=\"op\" key=\"op\" mock=\"@string(\'lower\', 5)\" />\n      <param name=\"catalog\" var=\"catalog\" key=\"catalog\" mock=\"@string(\'lower\', 5)\" />\n      <param name=\"schemaPattern\" var=\"schemaPattern\" key=\"schemaPattern\" mock=\"@string(\'lower\', 5)\" />\n      <param name=\"tableNamePattern\" var=\"tableNamePattern\" key=\"tableNamePattern\" mock=\"@string(\'lower\', 5)\" />\n      <param name=\"columnNamePattern\" var=\"columnNamePattern\" key=\"columnNamePattern\" mock=\"@string(\'lower\', 5)\" />\n      \n		<dbinfo name=\"查询数据\" var=\"list\" :op=\"#{op}\"  :catalog=\"#{catalog}\" :schemaPattern=\"#{schemaPattern}\" :tableNamePattern=\"#{tableNamePattern}\" :columnNamePattern=\"#{columnNamePattern}\"\n		>\n		</dbinfo>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-11-26 09:57:14', '2020-11-26 10:52:05');
INSERT INTO `exe_resource` VALUES ('92', '2', 'plugin', 'shell.java', 'linux命令', null, 'package com.exe.web.plugins;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Scanner;\nimport java.util.concurrent.TimeUnit;\n\n\n\n/**\n * linux 命令\n * @author tanbin\n *\n */\npublic class ShellCmd extends Cmd{\n	\n	private final static Logger logger = LoggerFactory.getLogger(ShellCmd.class);\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n        String var=param.get(\"var\");\n        String cmdKey=param.get(\"cmd\");\n        String[] cmds=cmdHandle.getVars().get(cmdKey);\n        String rs=\"\";\n//         for(String cmd:cmds){\n//             rs=rs+run(cmd);\n//         }\n        rs=rs+run(cmds);\n        cmdHandle.getVars().put(var, rs);\n	}\n    \n   public static String run(String command) throws IOException {\n		Scanner input = null;\n		String result = \"\";\n		Process process = null;\n		try {\n			process = Runtime.getRuntime().exec(command);\n			try {\n				//等待命令执行完成\n				process.waitFor(10, TimeUnit.SECONDS);\n			} catch (InterruptedException e) {\n				e.printStackTrace();\n			}\n			InputStream is = process.getInputStream();\n			input = new Scanner(is);\n			while (input.hasNextLine()) {\n				result += input.nextLine() + \"\\n\";\n			}\n			result = command + \"\\n--result:\" + result; //加上命令本身，打印出来\n		} finally {\n			if (input != null) {\n				input.close();\n			}\n			if (process != null) {\n				process.destroy();\n			}\n		}\n		return result;\n	}\n	\n    \n	public static String run(String[] command) throws IOException {\n		Scanner input = null;\n		String result = \"\";\n		Process process = null;\n		try {\n//             command=getOsCmd() command[0];\n        String cmdStr=null;\n        for(String cmd:command){\n            if(cmdStr==null){\n                cmdStr=cmd;\n            }else{\n                cmdStr=cmdStr+\";\"+cmd\n            }\n            \n        }\n        process=Runtime.getRuntime().exec(new String[]{\"/bin/sh\",\"-c\",cmdStr});\n//             String[] cmd = new String[3];\n//             cmd[0]=\"/bin/sh\";\n//             cmd[1]=\"-c\";\n//             cmd[2]=\"cd /app;ls -l\";\n//             cmd={\"/bin/sh\",\"-c\",\"cd /app; ls -l\"}\n//             process=Runtime.getRuntime().exec(cmd);\n// 			process = Runtime.getRuntime().exec(command);\n			try {\n				//等待命令执行完成\n				process.waitFor(10, TimeUnit.SECONDS);\n			} catch (InterruptedException e) {\n				e.printStackTrace();\n			}\n			InputStream is = process.getInputStream();\n			input = new Scanner(is);\n			while (input.hasNextLine()) {\n				result += input.nextLine() + \"\\n\";\n			}\n			result = command + \"\\n--result:\" + result; //加上命令本身，打印出来\n		} finally {\n			if (input != null) {\n				input.close();\n			}\n			if (process != null) {\n				process.destroy();\n			}\n		}\n		return result;\n	}\n    public List<String> run1(String[] commands) {\n        List<String> rspList = new ArrayList<String>();\n        Runtime run = Runtime.getRuntime();\n        try {\n            Process proc = run.exec(\"/bin/bash\", null, null);\n            BufferedReader in = new BufferedReader(new InputStreamReader(proc.getInputStream()));\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(proc.getOutputStream())), true);\n            for (String line : commands) {\n                out.println(line);\n            }\n            // out.println(\"cd /home/test\");\n            // out.println(\"pwd\");\n            // out.println(\"rm -fr /home/proxy.log\");\n            out.println(\"exit\");// 这个命令必须执行，否则in流不结束。\n            String rspLine = \"\";\n            while ((rspLine = in.readLine()) != null) {\n                System.out.println(rspLine);\n                rspList.add(rspLine);\n            }\n            proc.waitFor();\n            in.close();\n            out.close();\n            proc.destroy();\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        return rspList;\n    }\n    \n    public static String getOsCmd(){\n        Properties props=System.getProperties(); //获得系统属性集\n        String osName = props.getProperty(\"os.name\"); //操作系统名称\n        if(osName.toLowerCase().contains(\"linux\")){\n            return \"/bin/sh -c\";\n        }else if(osName.toLowerCase().contains(\"windows\")){\n            return \"cmd /c\";\n        }else{\n            throw new RuntimeException(\"服务器不是linux|windows操作系统\");\n        }\n    }\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-12-14 15:22:40', '2021-02-18 18:05:29');
INSERT INTO `exe_resource` VALUES ('93', '4', 'api', '/file/zip', '文件压缩', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件压缩\" corn=\"\">\n	<seg name=\"文件压缩\">\n		<param name=\"path\" var=\"path\" key=\"path\" mock=\"@string(\'lower\', 5)\"/>\n		<param name=\"folder\" var=\"folder\" key=\"folder\" mock=\"@string(\'lower\', 5)\"/>\n     <code name=\"rootPath\" hasBody=\"true\" >\n         import com.exe.web.util.MyConfUtil;\n          def exe(a,cmdHandle){\n              String rootPath=MyConfUtil.getRootPath()+File.separator+\"static\";\n        		cmdHandle.getVars().put(\"rootPath\",rootPath);\n          }\n      </code>\n        <var name=\"cmd\" var=\"cmd\" :init=\"zip -r  #{rootPath}#{path}.zip   #{rootPath}#{path}\" />\n		<shell name=\"文件压缩\" cmd=\"cmd\" var=\"rs\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-14 15:50:35', '2021-01-22 23:05:16');
INSERT INTO `exe_resource` VALUES ('94', '4', 'api', '/file/unzip', '文件解压', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件解压\" corn=\"\">\n	<seg name=\"文件解压\">\n		<param name=\"file\" var=\"file\" key=\"file\" mock=\"@string(\'lower\', 5)\"/>\n    <param name=\"folder\" var=\"folder\" key=\"folder\" mock=\"@string(\'lower\', 5)\"/>\n     <code name=\"rootPath\" hasBody=\"true\" >\n         import com.exe.web.util.MyConfUtil;\n          def exe(a,cmdHandle){\n              String rootPath=MyConfUtil.getRootPath()+File.separator+\"static\";\n        		cmdHandle.getVars().put(\"rootPath\",rootPath);\n          }\n      </code>\n        <var name=\"cmd\" var=\"cmd\" :init=\"unzip #{rootPath}#{file} -d #{rootPath}#{folder}\" />\n		<shell name=\"文件解压\" cmd=\"cmd\" var=\"rs\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-14 15:51:01', '2021-01-22 23:02:51');
INSERT INTO `exe_resource` VALUES ('95', '4', 'api', '/file/copy', '文件复制', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件复制\" corn=\"\">\n	<seg name=\"文件复制\">\n		<param name=\"file\" var=\"file\" key=\"file\" mock=\"@string(\'lower\', 5)\"/>\n    <param name=\"folder\" var=\"folder\" key=\"folder\" mock=\"@string(\'lower\', 5)\"/>\n     <code name=\"rootPath\" hasBody=\"true\" >\n         import com.exe.web.util.MyConfUtil;\n          def exe(a,cmdHandle){\n              String rootPath=MyConfUtil.getRootPath()+File.separator+\"static\";\n        		cmdHandle.getVars().put(\"rootPath\",rootPath);\n          }\n      </code>\n		<shell name=\"文件复制\" :cmd=\"cp -R #{rootPath}#{file} -d #{rootPath}#{folder}\" var=\"rs\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-15 09:13:53', '2020-12-15 10:18:03');
INSERT INTO `exe_resource` VALUES ('96', '4', 'api', '/file/mv', '文件移动', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"文件移动\" corn=\"\">\n	<seg name=\"文件移动\">\n		<param name=\"file\" var=\"file\" key=\"file\" mock=\"@string(\'lower\', 5)\"/>\n    <param name=\"folder\" var=\"folder\" key=\"folder\" mock=\"@string(\'lower\', 5)\"/>\n     <code name=\"rootPath\" hasBody=\"true\" >\n         import com.exe.web.util.MyConfUtil;\n          def exe(a,cmdHandle){\n              String rootPath=MyConfUtil.getRootPath()+File.separator+\"static\";\n        		cmdHandle.getVars().put(\"rootPath\",rootPath);\n          }\n      </code>\n		<shell name=\"文件移动\" :cmd=\"mv -f #{rootPath}#{file}  #{rootPath}#{folder}\" var=\"rs\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-15 09:14:19', '2020-12-15 10:19:54');
INSERT INTO `exe_resource` VALUES ('97', '2', 'api', '/resource/index/add', '资源索引新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源索引新增\" corn=\"\">\n	<seg name=\"资源索引新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"path\" key=\"path\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"type\" key=\"type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"md5\" key=\"md5\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"state\" key=\"state\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.path,vo.type,vo.md5,vo.state,createTime,vo.upTime\"\n			sql=\"insert into resource_index(id,path,type,md5,state,createTime,upTime) values(?,?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:01:49', '2020-12-16 11:13:00');
INSERT INTO `exe_resource` VALUES ('98', '2', 'api', '/resource/index/mod', '资源索引修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源索引修改\" corn=\"\">\n	<seg name=\"资源索引修改\">\n		 <parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"path\" key=\"path\" mock=\"@string(\'lower\', 5)\" reg=\"\"  verify=\"required\" />\n        <field name=\"type\" key=\"type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"/>\n        <field name=\"md5\" key=\"md5\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"/>\n        <field name=\"state\" key=\"state\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"/>\n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.path,vo.type,vo.md5,vo.state,upTime,vo.id\"\n			sql=\"update resource_index set path=?,type=?,md5=?,state=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:02:51', '2020-12-16 10:16:15');
INSERT INTO `exe_resource` VALUES ('99', '2', 'api', '/resource/index/del', '资源索引删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源索引删除\" corn=\"\">\n	<seg name=\"资源索引删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  resource_index where id=?\"\n		>\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:03:31', '2020-12-16 10:18:06');
INSERT INTO `exe_resource` VALUES ('100', '2', 'api', '/resource/index/page', '资源索引分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源索引查询\" corn=\"\">\n	<seg name=\"资源索引查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"path\" var=\"path\" key=\"path\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from resource_index where 1=1 \"/>\n		<append name=\"添加path\" key=\"sql\" when=\"path\" value=\" and path like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,path,type,md5,state,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"path\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:03:57', '2020-12-16 15:43:15');
INSERT INTO `exe_resource` VALUES ('101', '2', 'api', '/resource/class/add', '资源类信息新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源类信息新增\" corn=\"\">\n	<seg name=\"资源类信息新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"indexId\" key=\"indexId\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\" />\n        <field name=\"package\" key=\"package\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"className\" key=\"className\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.indexId,vo.package,vo.className,createTime,vo.upTime\"\n			sql=\"insert into resource_class_info(id,indexId,package,className,createTime,upTime) values(?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:04:59', '2020-12-16 12:33:37');
INSERT INTO `exe_resource` VALUES ('102', '2', 'api', '/resource/class/del', '资源类信息删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"应用删除\" corn=\"\">\n	<seg name=\"应用删除\">\n		<param name=\"索引id\" var=\"indexId\" key=\"indexId\"/>\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"indexId\"\n			sql=\"delete from  resource_class_info where indexId=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.javaIndex}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-16 10:05:31', '2020-12-16 11:08:21');
INSERT INTO `exe_resource` VALUES ('103', '2', 'api', '/resource/class/page', '资源类信息分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源类信息分页\" corn=\"\">\n	<seg name=\"资源类信息分页\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"package\" var=\"package\" key=\"package\" />\n     <param name=\"className\" var=\"className\" key=\"className\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from resource_class_info where 1=1 \"/>\n		<append name=\"添加package\" key=\"sql\" when=\"package\" value=\" and package like concat(\'%\',?,\'%\') \"/>\n		<append name=\"添加className\" key=\"sql\" when=\"className\" value=\" and className like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,indexId,package,className,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"indexId,package,className\"\n		>\n		</page>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:06:10', '2020-12-16 11:21:28');
INSERT INTO `exe_resource` VALUES ('104', '2', 'api', '/resource/method/add', '资源方法信息新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源方法新增\" corn=\"\">\n	<seg name=\"资源方法新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"packageName\" key=\"packageName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"className\" key=\"className\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"indexId\" key=\"indexId\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\" />\n        <field name=\"methodName\" key=\"methodName\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"param\" key=\"param\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"returnType\" key=\"returnType\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"lineNum\" key=\"lineNum\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.packageName,vo.className,vo.indexId,vo.methodName,vo.returnType,vo.lineNum,vo.param,createTime,vo.upTime\"\n			sql=\"insert into resource_method_info(id,packageName,className,indexId,methodName,returnType,lineNum,param,createTime,upTime) values(?,?,?,?,?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:07:16', '2020-12-16 12:42:20');
INSERT INTO `exe_resource` VALUES ('105', '2', 'api', '/resource/method/del', '资源方法信息删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源方法删除\" corn=\"\">\n	<seg name=\"资源方法删除\">\n		<param name=\"indexId\" var=\"indexId\" key=\"indexId\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"indexId\"\n			sql=\"delete from  resource_method_info where indexId=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:07:16', '2020-12-16 15:57:19');
INSERT INTO `exe_resource` VALUES ('106', '2', 'api', '/resource/method/page', '资源方法信息分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"资源方法查询\" corn=\"\">\n	<seg name=\"资源方法查询\">\n    <param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n    <param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n    <param name=\"packageName\" var=\"packageName\" key=\"packageName\" />\n    <param name=\"className\" var=\"className\" key=\"className\" />\n    <param name=\"absClassName\" var=\"absClassName\" key=\"absClassName\" />\n    <param name=\"methodName\" var=\"methodName\" key=\"methodName\" />\n		\n    <var name=\"sql\" var=\"sql\" init=\"select * from resource_method_info where 1=1 \"/>\n    <append name=\"添加packageName\" key=\"sql\" when=\"packageName\" value=\" and packageName like concat(\'%\',?,\'%\') \"/>\n    <append name=\"添加className\" key=\"sql\" when=\"className\" value=\" and className like concat(\'%\',?,\'%\') \"/>\n    <append name=\"添加absClassName\" key=\"sql\" when=\"absClassName\" value=\" and className =? \"/>\n    <append name=\"添加methodName\" key=\"sql\" when=\"methodName\" value=\" and methodName like concat(\'%\',?,\'%\') \"/>\n        \n		<page name=\"查询数据\" var=\"list\" cols=\"id,packageName,className,methodName,param,lineNum,returnType,indexId,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"packageName,className,methodName\"\n		>\n			\n		</page>\n		\n    <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n    <go  name=\"跳转到结束\" to=\"end\"/>\n    <resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n    <empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-16 10:08:05', '2021-01-02 10:31:44');
INSERT INTO `exe_resource` VALUES ('107', '1', 'filter', '/api/user/*', '用户登录过滤器', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"登录过滤\" corn=\"\">\n	<seg name=\"登录过滤\">\n        <cookie name=\"获取cookie\" key=\"sessionId\" op=\"get\" var=\"sessionId\"/>\n        <if name=\"cookie是否存在\"  js=\"sessionId!=null\"   false=\"end\" />\n        <!-- 获取用户会话 -->\n		<session name=\"获取用户会话\" :key=\"#{sessionId}\" upDate=\"true\" op=\"get\" var=\"user\"/>\n        <if name=\"用户是否存在\"  js=\"user!=null\"   false=\"end\" />\n		<filter name=\"过滤器1\" return=\"false\" />\n		<go name=\"跳转到结束\" to=\"success\"/>\n        <empty name=\"end\"/>\n        <resp name=\"未登录\" code=\"1\" msg=\"未登录\" data=\"\"/>\n        <filter name=\"过滤器2\" return=\"true\" />\n        <empty name=\"success\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-22 09:13:16', '2021-01-18 13:34:59');
INSERT INTO `exe_resource` VALUES ('108', '1', 'plugin', 'filter.java', '过滤器', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.exception.KKDValidationException;\nimport kkd.common.util.StringUtil;\n\n/**\n * 过滤器\n * @author tanbin\n *\n */\npublic class FilterCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n//         HttpServletResponse resp=(HttpServletResponse) sys.get(\"resp\");\n        \n//         String redirect=param.get(\"redirect\");\n        String return1=param.get(\"return\");\n//         try {\n//             resp.sendRedirect(redirect);\n//         }catch (Exception e){\n// 		    e.printStackTrace();\n//         }\n		sys.put(\"return\",return1);\n	}\n\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-12-22 09:19:48', '2020-12-22 12:05:29');
INSERT INTO `exe_resource` VALUES ('109', '47', 'api', '/user/logout', '用户登出', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"用户登出\" corn=\"\">\n	<seg name=\"用户登出\">\n        <cookie name=\"获取cookie\" op=\"get\" key=\"sessionId\" var=\"sessionId\"/>\n        \n        <if name=\"判断cookie是否存在\" js=\"sessionId!=null\" false=\"end\" />\n        \n        <cookie name=\"删除cookie\" op=\"remove\" key=\"sessionId\" path=\"/\" />\n		<session name=\"记录用户会话\" :key=\"#{sessionId}\" op=\"remove\"  />\n      \n      \n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"登出失败\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-27 10:01:15', '2020-12-27 20:24:25');
INSERT INTO `exe_resource` VALUES ('110', '47', 'plugin', 'user.java', '获取当前用户', null, 'package com.exe.web.plugins;\n\nimport java.util.Map;\n\nimport com.alibaba.fastjson.JSON;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport kkd.common.cache.server.MapServerThread;\nimport kkd.common.util.StringUtil;\nimport kkd.common.util.CookieUtil;\n\nimport javax.servlet.http.Cookie;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n/**\n * user 操作\n * @author tanbin\n *\n */\npublic class UserCmd extends Cmd{\n\n	@Override\n	public void exe(CmdVo cmd, Map<String, String> param) {\n        Map<String, Object> sys=cmdHandle.getSys();\n		HttpServletRequest req=(HttpServletRequest) sys.get(\"req\");\n		MapServerThread st =MapServerThread.getInstance();\n        Cookie val=CookieUtil.getCookieByName(req, \"sessionId\");\n        String var=param.get(\"var\");\n        if(val!=null){\n            String sessionId=val.getValue();\n            String value=st.get(sessionId,false);\n            if(value!=null){\n                //{id:\"1\",userName:\"zhangsan\"}\n                com.alibaba.fastjson.JSONObject jo=com.alibaba.fastjson.JSONObject.parseObject(value);\n                cmdHandle.getVars().put(var, jo);\n            }else{\n                cmdHandle.getVars().put(var, null);\n            }\n        }else{\n            cmdHandle.getVars().put(var, null);\n        }\n	}\n\n\n	\n	@Override\n	public String op() {\n		return null;\n	}\n	\n}\n', null, null, '2020-12-27 20:38:55', '2021-01-02 21:19:51');
INSERT INTO `exe_resource` VALUES ('111', '32', 'api', '/scj/sc/public', '公开收藏', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"公开收藏查询\" corn=\"\">\n	<seg name=\"公开收藏查询\">\n      <param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n      <param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n      <param name=\"收藏夹名称\" var=\"name\" key=\"name\" />\n      <param name=\"标签ID\" var=\"tagIds\" key=\"tagIds\" />\n		\n      <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1 and (private=\'\' or private is null )  \"/>\n      <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n      <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIds\" :value=\" and id in(	select scId from scj_tag_sc_ref where tagId in (#{tagIds}) )\"/>\n      \n		\n		<go name=\"跳转到结束\" to=\"结束\"/>\n	</seg>\n  <seg name=\"循环append标签1\">\n    <split name=\"拆分标签集合\" var=\"tagIdArr\" :key=\"#{tagIds}\" split=\",\"/>\n    <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1  \"/>\n    <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n    <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIdArr\" value=\" and id in(	select scId from scj_tag_sc_ref where tagId in\"/>\n    <code name=\"sql标签id拼接\" hasBody=\"true\">\n      def exe(cmd,cmdHandle){\n        def tagIds=cmdHandle.vars.tagIdArr\n        def oldSql=cmdHandle.vars.sql\n        def sql=\"(\"\n        def first=true\n        \n        for(tagId:tagIds){\n          if(first){\n            sql=sql+tagId\n              first=false\n          }else{\n         	 sql=sql+\",\"+tagId\n          }\n        }\n        sql=oldSql+sql+\")\"\n        print sql\n        cmdHandle.vars.put(\"sql\",sql)\n      }\n    </code>\n    <append name=\"添加右括号\" key=\"sql\" when=\"tagIdArr\" value=\" )\"/>\n    <go name=\"跳转到结束\" to=\"结束\"/>\n  </seg>\n  <seg name=\"结束1\">\n		<empty name=\"end\"/>\n  </seg>\n  <seg name=\"结束\">\n    <page name=\"查询数据\" var=\"list\" cols=\"id,name,private,remark,link,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"name\"\n		>\n		</page>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n  </seg>\n	\n</rule>', null, null, '2020-12-30 15:23:08', '2020-12-30 15:24:41');
INSERT INTO `exe_resource` VALUES ('112', '49', 'api', '/menu/add', '新增菜单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单新增\" corn=\"\">\n	<seg name=\"菜单新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"菜单名称\" key=\"name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"上级菜单ID\" key=\"parentId\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\" />\n        <field name=\"链接地址\" key=\"url\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"备注\" key=\"remark\" mock=\"@string(\'lower\', 10)\" reg=\"\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.parentId,vo.name,vo.remark,vo.url,createTime,vo.upTime\"\n			sql=\"insert into menu(id,parentId,name,remark,url,createTime,upTime) values(?,?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-30 17:16:56', '2020-12-30 17:27:01');
INSERT INTO `exe_resource` VALUES ('113', '49', 'api', '/menu/mod', '菜单修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单修改\" corn=\"\">\n	<seg name=\"菜单修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"菜单名称\" key=\"name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"上级菜单ID\" key=\"parentId\" mock=\"@integer(1, 10)\" reg=\"\" verify=\"required\" />\n        <field name=\"链接地址\" key=\"url\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"备注\" key=\"remark\" mock=\"@string(\'lower\', 10)\" reg=\"\" />\n      </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.parentId,vo.name,vo.remark,vo.url,upTime,vo.id\"\n			sql=\"update menu set parentId=?,name=?,remark=?,url=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2020-12-30 17:18:43', '2020-12-30 17:29:16');
INSERT INTO `exe_resource` VALUES ('114', '49', 'api', '/menu/page', '菜单分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单查询\" corn=\"\">\n	<seg name=\"菜单查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"菜单名称\" var=\"name\" key=\"name\" />\n        <param name=\"上级菜单ID\" var=\"parentId\" key=\"parentId\" mock=\"0\"/>\n		<param name=\"菜单路径\" var=\"paths\" key=\"paths\" mock=\",0\"/>\n		<var name=\"sql\" var=\"sql\"   hasBody=\"true\">\n        <![CDATA[\n              SELECT * from (\n\nSELECT * FROM (\n     SELECT id,name,remark,url,parentId,\n     @le:= IF (parentId = 0 ,0,  \n         IF( LOCATE( CONCAT(\'|\',parentId,\':\'),@pathlevel)   > 0  ,      \n                  SUBSTRING_INDEX( SUBSTRING_INDEX(@pathlevel,CONCAT(\'|\',parentId,\':\'),-1),\'|\',1) +1\n        ,@le+1) ) levels\n     , @pathlevel:= CONCAT(@pathlevel,\'|\',id,\':\', @le ,\'|\') pathlevel\n      , @pathnodes:= IF( parentId =0,\',0\', \n           CONCAT_WS(\',\',\n           IF( LOCATE( CONCAT(\'|\',parentId,\':\'),@pathall) > 0  , \n               SUBSTRING_INDEX( SUBSTRING_INDEX(@pathall,CONCAT(\'|\',parentId,\':\'),-1),\'|\',1)\n              ,@pathnodes ) ,parentId  ) )paths\n    ,@pathall:=CONCAT(@pathall,\'|\',id,\':\', @pathnodes ,\'|\') pathall \n        FROM  menu, \n    (SELECT @le:=0,@pathlevel:=\'\', @pathall:=\'\',@pathnodes:=\'\') vv\n    ORDER BY  parentId,id\n    ) src   \n	\n)t where 1=1\n            ]]>\n        </var>\n        \n		<append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加parentId\" key=\"sql\" when=\"parentId\" value=\" and parentId=? \"/>\n        <append name=\"添加路径\" key=\"sql\" when=\"paths\" value=\" and paths like concat(?,\'%\') \"/>\n        <print name=\"test\" var=\"sql\" />\n		<page name=\"查询数据\" var=\"list\" cols=\"id,parentId,name,remark,url,levels,paths,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"name,parentId,paths\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-30 17:19:17', '2021-01-02 11:11:23');
INSERT INTO `exe_resource` VALUES ('115', '49', 'api', '/menu/get', '根据ID查询应用菜单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,parentId,name,remark,url,createTime,upTime\" param=\"id\"\n		sql=\"select * from menu where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-30 17:19:58', '2020-12-30 17:32:07');
INSERT INTO `exe_resource` VALUES ('116', '49', 'api', '/menu/del', '删除菜单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单删除\" corn=\"\">\n	<seg name=\"菜单删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  menu where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2020-12-30 17:20:26', '2020-12-30 17:32:51');
INSERT INTO `exe_resource` VALUES ('117', '49', 'api', '/menu/role/menus', '根据角色查询菜单列表', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"角色ID\" var=\"roleId\" key=\"roleId\" />\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,roleId,menuId\" param=\"roleId\"\n		sql=\"select * from role_menu_ref where 1=1 and roleId=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-01 19:30:06', '2021-01-01 19:33:44');
INSERT INTO `exe_resource` VALUES ('118', '49', 'api', '/menu/bind/role', '角色分配菜单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单分配菜单\" corn=\"\">\n	<seg name=\"菜单分配菜单\">\n		<parse name=\"解析参数\" var=\"vo\" />\n        <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n            <field name=\"roleId\" key=\"roleId\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n            <field name=\"menuIds\" key=\"menuIds\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        </bean>\n		\n        <split name=\"拆分菜单集合\" var=\"menuIdList\" :key=\"#{vo.menuIds}\" split=\",\"/>\n        <exeSql name=\"删除关联角色菜单\" var=\"insertCnt\" cols=\"vo.roleId\"\n			sql=\"delete from role_menu_ref where roleId=?\"\n		>\n		</exeSql>\n        <count name=\"数据索引位置\" init=\"0\"  var=\"index\"/>\n        <go name=\"跳转循环新增菜单\" to=\"循环新增菜单\"/>\n	</seg>\n    <seg name=\"循环新增菜单\">\n        <var name=\"获取menuIdList\"  key=\"menuIdList\" :index=\"#{index}\"  var=\"menuId\"  />\n        <if name=\"判断menuId是否存在\" js=\"menuId!=\'\'&amp;&amp; menuId!=null \" false=\"跳转到结束\" />\n        <exeSql name=\"插入标签数据\" var=\"insertCnt1\" cols=\"menuId,vo.roleId\"\n                sql=\"insert into role_menu_ref(menuId,roleId) values(?,?)\"\n            >\n            </exeSql>\n        <count name=\"数据索引位置+1\"  inc=\"1\" var=\"index\"/>\n        \n        <go name=\"跳转循环新增菜单\" to=\"循环新增菜单\"/>\n        <go name=\"跳转到结束\" to=\"结束\"/>\n    </seg>\n    <seg name=\"结束\">\n        <resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n        <go  name=\"跳转到结束\" to=\"end\"/>\n        <resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n        <empty name=\"end\"/>\n    </seg>\n	\n</rule>', null, null, '2021-01-02 11:54:35', '2021-01-02 12:06:33');
INSERT INTO `exe_resource` VALUES ('119', '49', 'api', '/menu/my', '我的菜单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"菜单查询\" corn=\"\">\n	<seg name=\"菜单查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<user name=\"当前用户\" var=\"user\" />\n        <var name=\"userId\" key=\"user\" childKey=\"id\" var=\"userId\" />\n		<var name=\"sql\" var=\"sql\"   hasBody=\"true\">\n        <![CDATA[\n             SELECT * FROM menu where 1=1 and id in(\n		SELECT menuId FROM role_menu_ref WHERE roleId in(\n		SELECT roleId from user_role_ref WHERE userId=?\n	)\n)\n            ]]>\n        </var>\n        \n        \n		<page name=\"查询数据\" var=\"list\" cols=\"id,parentId,name,remark,url,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"userId\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-02 20:58:50', '2021-01-02 21:23:03');
INSERT INTO `exe_resource` VALUES ('120', '2', 'api', '/cmd/exe', '执行命令', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"执行命令\" corn=\"\">\n	<seg name=\"执行命令\">\n		<param name=\"cmd\" var=\"cmd\" key=\"cmd\" mock=\"@string(\'lower\', 5)\"/>\n        <split name=\"拆分命令集合\" var=\"cmds\" :key=\"#{cmd}\" split=\",\"/>\n        \n		<shell name=\"执行命令\" cmd=\"cmds\" var=\"rs\" />\n		<resp name=\"创建成功\" code=\"200\" :msg=\"查询成功\" key=\"rs\"/>\n        <print name=\"test1\" var=\"rs\" />\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-13 10:17:50', '2021-01-13 12:07:16');
INSERT INTO `exe_resource` VALUES ('121', '3', 'plugin', 'changeTabCmd.java', '切换选项卡', null, 'package com.exe.web.driver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport kkd.common.util.StringUtil;\nimport org.openqa.selenium.WebDriver;\n\nimport java.util.Map;\nimport java.util.Set;\n\npublic class ChangeTabCmd extends Cmd{\n	\n	@Override\n	public String op() {\n		return \"changeTab\";\n	}\n\n	/**\n	 * 切换选项卡\n	 * @param param\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		Map<String, String> tabIdMap= (Map<String, String>) sys.get(\"tabIdMap\");\n		String target=param.get(\"target\");\n		Set<String> windowHandles = driver.getWindowHandles();\n		for(String handle:windowHandles) {\n			String tmpTarget=tabIdMap.get(handle);\n			if(StringUtil.equalsIgnoreCase(target, tmpTarget)){\n				System.out.println(\"找到tab 并切换成功:\"+target);\n				driver.switchTo().window(handle);\n				return;\n			}\n		}\n		System.out.println(\"没有找到tab:\"+target);\n		//新打开页面的定位方法\n//		String parentHandle=driver.getWindowHandle();\n//		System.out.println(\"parent的句柄：\"+parentHandle);\n//		//获取所有的Handle\n//		Set<String> windowHandles = driver.getWindowHandles();\n//		System.out.println(\"所有句柄：\"+windowHandles);\n//		//判断是否打开了新窗口\n//		for(String handle:windowHandles) {\n//			System.out.println(\"页面的句柄：\"+handle);\n//			if (!parentHandle.equals(handle)) {\n//				driver.switchTo().window(handle);\n//			}\n//		}		\n	}\n\n	\n}\n', null, null, '2021-01-15 19:32:13', '2021-01-15 19:32:37');
INSERT INTO `exe_resource` VALUES ('122', '3', 'plugin', 'checkCmd.java', '元素检查', null, 'package com.exe.web.driver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\nimport java.util.Map;\n\npublic class CheckCmd extends Cmd {\n	@Override\n	public String op() {\n		return \"check\";\n	}\n	\n	/**\n	 * 根据元素是否存在 跳转\n	 * @param param\n	 * @return\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		String byType = param.get(\"byType\");\n		String byVal = param.get(\"byVal\");\n		String trueVal = param.get(\"true\");\n		String falseVal = param.get(\"false\");\n		WebElement web = DriverUtil.getWebElement(driver, byType, byVal);\n		if (web != null) {\n			cmdHandle.gotoNodeByName(caiAction,trueVal);\n		} else {\n			cmdHandle.gotoNodeByName(caiAction,falseVal);\n		}\n	}\n\n	\n\n}\n', null, null, '2021-01-15 19:33:15', '2021-01-15 19:33:28');
INSERT INTO `exe_resource` VALUES ('123', '3', 'plugin', 'checklenCmd.java', '元素内容长度检查', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport kkd.common.util.StringUtil;\n\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class ChecklenCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"checklen\";\n	}\n	/**\n	 * attr 取值 属性取值  默认 text\n	 * @param param\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		String byType=param.get(\"byType\");\n		String byVal=param.get(\"byVal\");\n		String attr=param.get(\"attr\");\n		Integer minLen=Integer.valueOf(param.get(\"minLen\"));\n		String trueVal=param.get(\"true\");\n		String falseVal=param.get(\"false\");\n		WebElement web=DriverUtil.getWebElement(driver,byType, byVal);\n		if(web!=null){\n			String data=web.getText();\n			if(!StringUtil.isEmpty(attr)){\n				data=web.getAttribute(attr);\n			}\n			if(data.length()>=minLen){\n				cmdHandle.gotoNodeByName(caiAction,trueVal);\n			}else{\n				cmdHandle.gotoNodeByName(caiAction,falseVal);\n			}\n		}else{\n			cmdHandle.gotoNodeByName(caiAction,falseVal);\n		}\n	}\n	\n	\n}\n', null, null, '2021-01-15 19:34:06', '2021-01-15 20:37:03');
INSERT INTO `exe_resource` VALUES ('124', '3', 'plugin', 'checkvalueCmd.java', '元素值检查', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport kkd.common.util.StringUtil;\n\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class CheckvalueCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"checkvalue\";\n	}\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		String byType=param.get(\"byType\");\n		String byVal=param.get(\"byVal\");\n		String attr=param.get(\"attr\");\n		String c=param.get(\"c\");\n		String value=param.get(\"value\");\n		\n		String trueVal=param.get(\"true\");\n		String falseVal=param.get(\"false\");\n		WebElement web=DriverUtil.getWebElement(driver,byType, byVal);\n		if(web!=null){\n			String data=web.getText();\n			if(!StringUtil.isEmpty(attr)){\n				data=web.getAttribute(attr);\n			}\n			if(\"eq\".equalsIgnoreCase(c)){\n				if(StringUtil.equalsIgnoreCase(data, value)){\n					cmdHandle.gotoNodeByName(caiAction,trueVal);\n				}else{\n					cmdHandle.gotoNodeByName(caiAction,falseVal);\n				}\n			}else if(\"like\".equalsIgnoreCase(c)){\n				if(data.indexOf(value)!=-1){\n					cmdHandle.gotoNodeByName(caiAction,trueVal);\n				}else{\n					cmdHandle.gotoNodeByName(caiAction,falseVal);\n				}\n			}\n		}else{\n			cmdHandle.gotoNodeByName(caiAction,falseVal);\n		}		\n	}\n\n}\n', null, null, '2021-01-15 19:34:47', '2021-01-15 19:35:02');
INSERT INTO `exe_resource` VALUES ('125', '3', 'plugin', 'clickCmd.java', '元素点击', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class ClickCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"click\";\n	}\n\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		String byType=param.get(\"byType\");\n		String byVal=param.get(\"byVal\");\n		WebElement web=DriverUtil.getWebElement(driver,byType, byVal);\n//		String code=getElementByJs(byType,byVal);\n//		if(code!=null){\n//			code=code+\"tmp1111.scrollIntoView(true)\";\n//			js.executeScript(code);\n//		}\n		if(web==null){\n			throw new RuntimeException(\"未找到点击元素：\"+byVal);\n		}\n		web.click();\n	}\n}\n', null, null, '2021-01-15 19:35:36', '2021-01-15 19:36:21');
INSERT INTO `exe_resource` VALUES ('126', '3', 'plugin', 'closeTabCmd.java', '关闭选项卡', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.openqa.selenium.WebDriver;\n\nimport kkd.common.util.StringUtil;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class CloseTabCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"closeTab\";\n	}\n	\n	/**\n	 * 关闭 target选项卡\n	 * @param param\n	 */\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		Map<String, String> tabIdMap= (Map<String, String>) sys.get(\"tabIdMap\");\n		Map<String, String> tabMap= (Map<String, String>) sys.get(\"tabMap\");\n		\n		String target=param.get(\"target\");\n		if(!StringUtil.isEmpty(target)){\n			Set<String> windowHandles = driver.getWindowHandles();\n			for(String handle:windowHandles) {\n				String tmpTarget=tabIdMap.get(handle);\n				if(StringUtil.equalsIgnoreCase(target, tmpTarget)){\n					driver.switchTo().window(handle);\n				}\n			}\n		}\n		\n		\n		String tabid=driver.getWindowHandle();\n//		String target=tabIdMap.get(tabid);\n		//移除tab管理数据\n		tabIdMap.remove(tabid);\n		tabMap.remove(target);\n		driver.close();		\n	}\n	\n}\n', null, null, '2021-01-15 19:36:55', '2021-01-15 19:38:47');
INSERT INTO `exe_resource` VALUES ('127', '3', 'plugin', 'inputCmd.java', '文本输入', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class InputCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"input\";\n	}\n\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		String byType=param.get(\"byType\");\n		String byVal=param.get(\"byVal\");\n		String data=param.get(\"value\");\n		\n		WebElement web = DriverUtil.getWebElement(driver,byType, byVal);\n		web.sendKeys(data);		\n		\n	}\n	\n	\n\n}\n', null, null, '2021-01-15 19:37:48', '2021-01-15 19:39:10');
INSERT INTO `exe_resource` VALUES ('128', '3', 'plugin', 'loadCookieLocalCmd.java', 'cookie加载', null, 'package com.exe.web.driver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport org.openqa.selenium.WebDriver;\n\nimport java.util.Map;\n\npublic class LoadCookieLocalCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"loadCookieLocal\";\n	}\n\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		CookieUtil.loadCookieLocal(driver);			\n	}\n\n}\n', null, null, '2021-01-15 19:38:25', '2021-01-15 19:39:37');
INSERT INTO `exe_resource` VALUES ('129', '3', 'plugin', 'openCmd.java', '打开网页', null, 'package com.exe.web.driver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport kkd.common.util.StringUtil;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.chrome.ChromeOptions;\n\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class OpenCmd extends Cmd{\n	\n	@Override\n	public String op() {\n		return \"open\";\n	}\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		if(driver==null){\n			System.setProperty(\"webdriver.chrome.driver\",\n					\"/usr/bin/chromedriver\");\n\n\n			ChromeOptions opt = new ChromeOptions();\n			opt.addArguments(\"disable-infobars\");\n			opt.addArguments(\"--no-sandbox\");\n			opt.addArguments(\"--headless\");\n			opt.addArguments(\"--disable-gpu\");\n			opt.addArguments(\"--disable-dev-shm-usage\");\n			opt.setExperimentalOption(\"excludeSwitches\",\n					Arrays.asList(\"enable-automation\"));\n			driver = new ChromeDriver(opt);\n			JavascriptExecutor js = (JavascriptExecutor) driver;\n			sys.put(\"driver\",driver);\n			sys.put(\"js\",js);\n		}\n\n		Map<String, Object> vars=cmdHandle.getVars();\n		JavascriptExecutor js= (JavascriptExecutor) sys.get(\"js\");\n		Map<String, String> tabIdMap= (Map<String, String>) sys.get(\"tabIdMap\");\n		Map<String, String> tabMap= (Map<String, String>) sys.get(\"tabMap\");\n		String url=param.get(\"url\");\n		String target=param.get(\"target\");\n		String var=param.get(\"var\");\n		//设置环境变量\n		if(!StringUtil.isEmpty(var)&&!StringUtil.isEmpty(url)){\n			vars.put(var, url);\n		}\n		if(StringUtil.isEmpty(url)){\n			url=param.get(\"defaultUrl\");\n		}\n		if(tabMap==null||tabMap.size()==0){\n			tabMap=new HashMap<String, String>();\n			tabIdMap=new HashMap<String, String>();\n			sys.put(\"tabIdMap\",tabIdMap);\n			sys.put(\"tabMap\",tabMap);\n			String tabId=driver.getWindowHandle();\n			if(StringUtil.isEmpty(target)){\n				target=tabId;\n			}\n			tabMap.put(target, tabId);\n			tabIdMap.put(tabId, target);\n		}\n		\n		if(StringUtil.isEmpty(target)){\n			js.executeScript(\"window.open(\\\"\"+url+\"\\\");\");\n			Set<String> allTabs=driver.getWindowHandles();\n			for (String tmpTabId : allTabs) {\n				//查找 没有被管理的tab \n				if(tabIdMap.get(tmpTabId)==null){\n					target=tmpTabId;\n					tabIdMap.put(tmpTabId, target);\n					tabMap.put(target, tmpTabId);\n					//切换到改选项卡\n					driver.switchTo().window(tmpTabId);\n					driver.get(url);\n					return ;\n					//driver.get(url);\n				}\n			}\n			\n		}else{\n			String tabId=tabMap.get(target);\n			if(tabId==null){\n//				Actions newTab = new Actions(driver);\n				//浏览器打开标签页的快捷键是ctrl+t，那把ctrl+t的按键事件传入即可\n				//newTab.keyDown(Keys.CONTROL).sendKeys(\"t\").keyUp(Keys.CONTROL).perform();\n				//driver.findElement(By.cssSelector(\"body\")).sendKeys(Keys.CONTROL +\"t\");\n//				js.executeScript(\"window.open(\\\"chrome://version\\\");\");\n				js.executeScript(\"window.open(\\\"\"+url+\"\\\");\");\n				Set<String> allTabs=driver.getWindowHandles();\n				for (String tmpTabId : allTabs) {\n					//查找 没有被管理的tab \n					if(tabIdMap.get(tmpTabId)==null){\n						tabIdMap.put(tmpTabId, target);\n						tabMap.put(target, tmpTabId);\n						//切换到改选项卡\n						driver.switchTo().window(tmpTabId);\n						return ;\n						//driver.get(url);\n					}\n				}\n				throw new RuntimeException(\"打开选项卡失败\");\n			}else{\n				if(StringUtil.isEmpty(target)){\n					target=tabId;\n				}\n				driver.switchTo().window(tabId);\n				driver.get(url);\n			}\n		}		\n	}\n	\n}\n', null, null, '2021-01-15 19:40:16', '2021-01-15 20:58:42');
INSERT INTO `exe_resource` VALUES ('130', '3', 'plugin', 'quitCmd.java', '退出网页', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.WebDriver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class QuitCmd extends Cmd{\n	\n	@Override\n	public String op() {\n		return \"quit\";\n	}\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		Map<String, Object> vars=cmdHandle.getVars();\n		driver.quit();\n	}\n\n}\n', null, null, '2021-01-15 19:40:40', '2021-01-15 19:41:53');
INSERT INTO `exe_resource` VALUES ('131', '3', 'plugin', 'returnCmd.java', '网页返回', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class ReturnCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"return\";\n	}\n	\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		cmdHandle.returnCmd();\n	}\n\n}\n', null, null, '2021-01-15 19:41:11', '2021-01-15 19:42:06');
INSERT INTO `exe_resource` VALUES ('132', '3', 'plugin', 'saveCookieCmd.java', '保存cookie', null, 'package com.exe.web.driver;\n\nimport java.util.Map;\n\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.WebDriver;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\npublic class SaveCookieCmd extends Cmd{\n	@Override\n	public String op() {\n		return \"saveCookie\";\n	}\n	@Override\n	public void exe(CmdVo caiAction, Map<String, String> param) {\n		Map<String, Object> sys=cmdHandle.getSys();\n		WebDriver driver= (WebDriver) sys.get(\"driver\");\n		CookieUtil.saveCookie(driver);\n	}\n\n}\n', null, null, '2021-01-15 19:41:34', '2021-01-15 19:42:17');
INSERT INTO `exe_resource` VALUES ('133', '50', 'api', '/task/add', '任务新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务新增\" corn=\"\">\n	<seg name=\"任务新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"任务名称\" key=\"job_name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"任务描述\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n        <field name=\"CRON表达式\" key=\"cron_expression\" mock=\"@string(\'lower\', 5)\" reg=\"\"  verify=\"required\" />\n        <field name=\"类名\" key=\"bean_class\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"  />\n        <field name=\"参数\" key=\"params\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n        <field name=\"任务状态\" key=\"job_status\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"任务分组\" key=\"job_group\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"createTime\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.job_name,vo.description,vo.cron_expression,vo.bean_class,vo.params,vo.job_status,vo.job_group,createTime,vo.upTime\"\n			sql=\"insert into sys_task(id,job_name,description,cron_expression,bean_class,params,job_status,job_group,createTime,upTime) values(?,?,?,?,?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-17 11:12:50', '2021-01-17 23:29:09');
INSERT INTO `exe_resource` VALUES ('134', '50', 'api', '/task/mod', '任务修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务修改\" corn=\"\">\n	<seg name=\"任务修改\">\n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n        <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n            <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n            <field name=\"任务名称\" key=\"job_name\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n            <field name=\"任务描述\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n            <field name=\"CRON表达式\" key=\"cron_expression\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"  />\n            <field name=\"类名\" key=\"bean_class\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\"  />\n            <field name=\"参数\" key=\"params\" mock=\"@string(\'lower\', 5)\" reg=\"\"  />\n            <field name=\"任务状态\" key=\"job_status\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n            <field name=\"任务分组\" key=\"job_group\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        </bean>\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.job_name,vo.description,vo.cron_expression,vo.bean_class,vo.params,vo.job_status,vo.job_group,upTime,vo.id\"\n			sql=\"update sys_task set job_name=?,description=?,cron_expression=?,bean_class=?,params=?,job_status=?,job_group=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-17 11:13:19', '2021-01-17 23:29:00');
INSERT INTO `exe_resource` VALUES ('135', '50', 'api', '/task/page', '任务分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务查询\" corn=\"\">\n	<seg name=\"任务查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"任务名称\" var=\"job_name\" key=\"job_name\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from sys_task where 1=1 \"/>\n		<append name=\"添加job_name\" key=\"sql\" when=\"job_name\" value=\" and job_name like concat(\'%\',?,\'%\') \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,job_name,description,cron_expression,bean_class,params,job_status,job_group,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"job_name\"\n		>\n			\n		</page>\n		<code name=\"获取任务状态\" hasBody=\"true\">\n            <![CDATA[\n                def exe(a,cmdHandle){\n                    def list=cmdHandle.vars.list\n                    if(list==null|| list.collection==null){\n                        return;\n                    }\n                    def dataList=list.collection\n                    for(int i=0;i<dataList.size();i++){\n                        def item=dataList.get(i)\n                        item.job_status=item.job_status+\"-\"+getState(item)\n                    }\n                }\n                def getState(item){\n                    try{\n                        def qm = com.exe.web.task.QuartzManager.get();\n                        def task = new com.exe.web.task.TaskDO();\n                        //task.setBeanClass(\"com.exe.web.task.TestJob\");\n                        \n                        task.setJobGroup(item.job_group);\n                        task.setJobName(item.job_name);\n                        String state=qm.getState(task);\n                        return state;\n                    }catch (Exception e){\n                        e.printStackTrace();\n                    }\n                    return null;\n                }\n            ]]>\n        </code>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-17 11:13:36', '2021-01-19 21:39:40');
INSERT INTO `exe_resource` VALUES ('136', '50', 'api', '/task/get', '根据ID查询任务', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"ID\" var=\"id\" key=\"id\" />\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,job_name,description,cron_expression,bean_class,params,job_status,job_group,createTime,upTime\" param=\"id\"\n		sql=\"select * from sys_task where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-17 20:37:22', '2021-01-17 23:29:40');
INSERT INTO `exe_resource` VALUES ('137', '50', 'api', '/task/del', '任务删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务删除\" corn=\"\">\n	<seg name=\"任务删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  sys_task where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-17 20:37:51', '2021-01-17 20:51:47');
INSERT INTO `exe_resource` VALUES ('138', '50', 'api', '/task/start', '启动任务', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务启动\" corn=\"\">\n	<seg name=\"任务查询\">\n		<param name=\"ID\" var=\"id\" key=\"id\" />\n        <sqlFind name=\"查询数据\" var=\"list\" cols=\"id,job_name,description,cron_expression,bean_class,params,job_status,job_group,createTime,upTime\" param=\"id\"\n		sql=\"select * from sys_task where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		<code name=\"addJob\" hasBody=\"true\">\n        <![CDATA[\n          def exe(a,cmdHandle){\n                def list=cmdHandle.getVars().get(\"list\");\n                def rs=\"\";\n                if(list== null ||list.size==0){\n                    rs=\"list is null\"\n                }\n                def taskMap=list.get(0)\n          		def qm=com.exe.web.task.QuartzManager.get()\n                def task=new com.exe.web.task.TaskDO();\n                task.setBeanClass(taskMap.get(\"bean_class\"));\n                task.setCronExpression(taskMap.get(\"cron_expression\"));\n                task.setJobGroup(taskMap.get(\"job_group\"));\n                task.setJobName(taskMap.get(\"job_name\"));\n                task.setId(taskMap.get(\"id\"));\n                task.setParams(taskMap.get(\"params\"));\n                rs=qm.addJob(task);\n                \n          		cmdHandle.getVars().put(\"rs\",rs)\n          }\n        ]]>\n        </code>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"启动成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-17 21:25:42', '2021-01-19 21:33:44');
INSERT INTO `exe_resource` VALUES ('139', '50', 'api', '/task/stop', '停止任务', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"任务启动\" corn=\"\">\n	<seg name=\"任务查询\">\n		<param name=\"ID\" var=\"id\" key=\"id\" />\n        <sqlFind name=\"查询数据\" var=\"list\" cols=\"id,job_name,description,cron_expression,bean_class,job_status,job_group,createTime,upTime\" param=\"id\"\n		sql=\"select * from sys_task where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		<code name=\"deleteJob\" hasBody=\"true\">\n        <![CDATA[\n          def exe(a,cmdHandle){\n                def list=cmdHandle.getVars().get(\"list\");\n                def rs=\"\";\n                if(list== null ||list.size==0){\n                    rs=\"list is null\"\n                }\n                def taskMap=list.get(0)\n          		def qm=com.exe.web.task.QuartzManager.get()\n                def task=new com.exe.web.task.TaskDO();\n                task.setBeanClass(taskMap.get(\"bean_class\"));\n                task.setCronExpression(taskMap.get(\"cron_expression\"));\n                task.setJobGroup(taskMap.get(\"job_group\"));\n                task.setJobName(taskMap.get(\"job_name\"));\n                rs=qm.deleteJob(task);\n          		cmdHandle.getVars().put(\"rs\",rs)\n          }\n        ]]>\n        </code>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"停止成功\" key=\"rs\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-17 21:26:09', '2021-01-19 15:32:13');
INSERT INTO `exe_resource` VALUES ('140', '51', 'task', '/task/iptv/order', '跑单任务', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <iptv.order name=\"订购任务\" />\n	</seg>\n	\n</rule>', null, null, '2021-01-17 22:46:59', '2021-01-26 09:58:06');
INSERT INTO `exe_resource` VALUES ('141', '30', 'api', '/test/demo1', '测试', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        \n        <code name=\"解析数据\" hasBody=\"true\">\n        <![CDATA[\n            def exe(a,cmdHandle){\n               def lines=getLine();\n               def map=parseData(line);\n               def userId=map.get(\"userId\")\n               def token=map.get(\"token\")\n               def user_type=map.get(\"user_type\")\n               def product_id=map.get(\"product_id\")\n               def description=map.get(\"description\")\n               if(inBlack(userId)){\n                   println \"$userId 黑名单中\"\n                   return ;\n               }\n               if(overLimit(userId)){\n                   println \"$userId 超过限制\"\n                   return ;\n               }\n                cmdHandle.vars.put(\"map\",map)\n                println \"start 跑单任务 $map\"\n          }\n          def getLine(){\n                def root=com.exe.web.util.MyConfUtil.getRootPath()\n                def path=root+\"/static/logs/info/\"\n                def dateStr=kkd.common.util.DateUtil.format(\"yyyy-MM-dd\")\n                path=path+dateStr+\"/order-log.log\"\n                java.util.List<String> list=new java.util.ArrayList<>();\n                kkd.common.util.FileUtil.readFileByLines(\"\", new kkd.common.util.FileUtil.FileUtilReader() {\n                    @Override\n                    public void read(Object o) {\n                        println \"read line:$o\"\n                        list.add(o.toString());\n                    }\n                });\n              return list\n          }\n            private  java.util.Map<String,String> parseData(String line){\n                java.util.Map<String,String> map=null;\n                String start=\"----start-----\";\n                int startLen=start.length();\n                int startPos=line.indexOf(start);\n                if(startPos!=-1){\n                    String end=\"----start---end--\";\n                    int endPos=line.indexOf(end,startPos+1);\n                    String dataStr=line.substring(startPos+startLen,endPos);\n                    map=kkd.common.util.StringUtil.getParaCollection(dataStr,\"&\",\"=\");\n                }\n                return map;\n            }\n          \n          /**\n          是否在黑名单\n          */\n          def inBlack(userId){\n                def dh=kkd.common.dao.dbuitl.JDBC.getDefaultNoTransactionDbHelper();\n                java.util.List<kkd.common.dao.dbuitl.SqlParameter> parameters=null;\n                try{\n                    def uid=dh.executeQueryOne(\"select user_id from iptv_order_user where user_id=\'$userId\' and user_type=\'12\'\",parameters,String.class);\n                    if(uid!=null){\n                        return true;\n                    }\n                }catch (Exception e){\n                    e.printStackTrace();\n                }\n              return false\n          }\n           /**\n          是否超过限制\n          */\n          def overLimit(userId){\n              return true\n          }\n         ]]>\n        </code>\n        <open name=\"open\" url=\"http://www.baidu.com\" target=\"test\"/>\n        <code name=\"跑单\" hasBody=\"true\">\n        <![CDATA[\n            def exe(a,cmdHandle){\n                Map<String, Object> sys=cmdHandle.getSys();\n		        def driver= sys.get(\"driver\");\n                def title=driver.title;\n                println \"---------title---$title\"\n                def map=cmdHandle.vars.map\n                \n            }\n            /**\n          发送请求\n          */\n            def send(){\n                String url=\"\";\n                def params=new java.util.HashMap<>();\n                params.put(\"userId\",userId);\n                params.put(\"token\",token);\n                def rs=HttpUtil.get(url,params,15,false);\n                if(rs.indexOf(\"\")!=-1){\n                    //放入黑名单\n                    putBlack(userId);\n                }\n            \n            }\n            /**\n          放入黑名单\n          */\n          def putBlack(userId,user_type,product_id,description){\n                def create_date=new java.util.Date()\n               \n                def dh=kkd.common.dao.dbuitl.JDBC.getDefaultNoTransactionDbHelper();\n                java.util.List<kkd.common.dao.dbuitl.SqlParameter> parameters=null;\n                try{\n                    String sql=\"insert into iptv_order_user(user_id,user_type,product_id,create_date,description)values\";\n                    sql=sql+\"(\'$user_id\',\'$user_type\',\'$product_id\',\'$create_date\',\'$description\')\";\n                    boolean success=dh.executeSql(sql);\n                    if(success){\n                        return true;\n                    }\n                }catch (Exception e){\n                    e.printStackTrace();\n                }\n                return false\n          }\n         ]]>\n        </code>\n        <shell name=\"执行命令\" var=\"rs\" cmd=\"echo hello\" />\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>', null, null, '2021-01-18 10:57:22', '2021-01-18 13:05:17');
INSERT INTO `exe_resource` VALUES ('142', '2', 'filter', '/api/menu/*', '用户登录过滤器', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"登录过滤\" corn=\"\">\n	<seg name=\"登录过滤\">\n        <cookie name=\"获取cookie\" key=\"sessionId\" op=\"get\" var=\"sessionId\"/>\n        <if name=\"cookie是否存在\"  js=\"sessionId!=null\"   false=\"end\" />\n        <!-- 获取用户会话 -->\n		<session name=\"获取用户会话\" :key=\"#{sessionId}\" upDate=\"true\" op=\"get\" var=\"user\"/>\n        <if name=\"用户是否存在\"  js=\"user!=null\"   false=\"end\" />\n		<filter name=\"过滤器1\" return=\"false\" />\n		<go name=\"跳转到结束\" to=\"success\"/>\n        <empty name=\"end\"/>\n        <resp name=\"未登录\" code=\"1\" msg=\"未登录\" data=\"\"/>\n        <filter name=\"过滤器2\" return=\"true\" />\n        <empty name=\"success\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-18 13:35:51', '2021-01-18 13:36:01');
INSERT INTO `exe_resource` VALUES ('143', '51', 'api', '/iptv/order', '四川跑单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <iptv.order name=\"订购任务\" />\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>', null, null, '2021-01-18 13:40:24', '2021-03-04 11:10:17');
INSERT INTO `exe_resource` VALUES ('144', '51', 'api', '/iptv/rev', '四川接收数据', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <param name=\"userId\" var=\"userId\" key=\"userId\" />\n        <param name=\"token\" var=\"token\" key=\"token\" />\n        <param name=\"user_type\" var=\"user_type\" key=\"user_type\" />\n        <param name=\"product_id\" var=\"product_id\" key=\"product_id\" />\n        <code name=\"解析数据\" hasBody=\"true\">\n        <![CDATA[\n             import javax.servlet.http.HttpServletRequest;\n             import kkd.common.util.DateUtil;\n            def exe(a,cmdHandle){\n                def vars=cmdHandle.vars\n                HttpServletRequest req= (HttpServletRequest) cmdHandle.getSys().get(\"req\");\n                String StbID=req.getHeader(\"StbID\");\n                String STBType=req.getHeader(\"STBType\");\n                String mac=req.getHeader(\"mac\");\n                String userId=req.getHeader(\"userId\");\n                String token=req.getHeader(\"token\");\n                String jjsp_userID=req.getHeader(\"jjsp_userID\");\n                String jjsp_userToken=req.getHeader(\"jjsp_userToken\");\n                String jjsp_key=req.getHeader(\"jjsp_key\");\n                String jjsp_platform=req.getHeader(\"jjsp_platform\");\n                String jjsp_enCodeUserID=req.getHeader(\"jjsp_enCodeUserID\");\n                String userAgent=req.getHeader(\"userAgent\");\n                String data=\"StbID=$StbID&STBType=$STBType&mac=$mac&userId=$userId&token=$token&jjsp_userID=$jjsp_userID&jjsp_userToken=$jjsp_userToken&jjsp_key=$jjsp_key&jjsp_platform=$jjsp_platform&jjsp_enCodeUserID=$jjsp_enCodeUserID&userAgent=$userAgent\";\n                //\n                //org.slf4j.Logger LOGGER= org.slf4j.LoggerFactory.getLogger(\"order\");\n                //LOGGER.info(\"----start-----userId=$vars.userId&token=$vars.token&user_type=$vars.user_type&product_id=$vars.product_id----start---end--\");\n                putLog(vars.userId,vars.user_type,vars.token,vars.product_id,data,\"未处理\");\n            }\n            \n             /**\n          放入黑名单\n          */\n          def putLog(user_id,user_type,token,product_id,description,data){\n                def create_date=new java.util.Date()\n                def create_dateStr=DateUtil.format(create_date,\"yyyy-MM-dd HH:mm:ss\")\n                def dh=kkd.common.dao.dbuitl.JDBC.getDefaultNoTransactionDbHelper();\n                java.util.List<kkd.common.dao.dbuitl.SqlParameter> parameters=null;\n                try{\n                    String sql=\"insert into iptv_order_user(user_id,user_type,product_id,create_date,description,data)values\";\n                    sql=sql+\"(\'$user_id\',\'$user_type\',\'$product_id\',\'$create_dateStr\',\'$description\',\'$data\')\";\n                    boolean success=dh.executeSql(sql);\n                    if(success){\n                        return true;\n                    }\n                }catch (Exception e){\n                    e.printStackTrace();\n                }\n                return false\n          }\n         ]]>\n        </code>\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>', null, null, '2021-01-18 13:41:02', '2021-03-04 18:39:31');
INSERT INTO `exe_resource` VALUES ('145', '32', 'api', '/scj/sc/my', '我的收藏', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"公开收藏查询\" corn=\"\">\n	<seg name=\"公开收藏查询\">\n      <param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n      <param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n      <param name=\"收藏夹名称\" var=\"name\" key=\"name\" />\n      <param name=\"标签ID\" var=\"tagIds\" key=\"tagIds\" />\n	  <user name=\"当前用户\" var=\"user\" />\n      <var name=\"userId\" key=\"user\" childKey=\"id\" var=\"userId\" />\n      <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1 and (private=\'on\' ) and uid=? \"/>\n      <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n      <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIds\" :value=\" and id in(	select scId from scj_tag_sc_ref where tagId in (#{tagIds}) )\"/>\n      \n		\n		<go name=\"跳转到结束\" to=\"结束\"/>\n	</seg>\n  <seg name=\"循环append标签1\">\n    <split name=\"拆分标签集合\" var=\"tagIdArr\" :key=\"#{tagIds}\" split=\",\"/>\n    <var name=\"sql\" var=\"sql\" init=\"select * from scj_sc where 1=1  \"/>\n    <append name=\"添加name\" key=\"sql\" when=\"name\" value=\" and name like concat(\'%\',?,\'%\') \"/>\n    <append name=\"添加tagIds1\" key=\"sql\" when=\"tagIdArr\" value=\" and id in(	select scId from scj_tag_sc_ref where tagId in\"/>\n    <code name=\"sql标签id拼接\" hasBody=\"true\">\n      def exe(cmd,cmdHandle){\n        def tagIds=cmdHandle.vars.tagIdArr\n        def oldSql=cmdHandle.vars.sql\n        def sql=\"(\"\n        def first=true\n        \n        for(tagId:tagIds){\n          if(first){\n            sql=sql+tagId\n              first=false\n          }else{\n         	 sql=sql+\",\"+tagId\n          }\n        }\n        sql=oldSql+sql+\")\"\n        print sql\n        cmdHandle.vars.put(\"sql\",sql)\n      }\n    </code>\n    <append name=\"添加右括号\" key=\"sql\" when=\"tagIdArr\" value=\" )\"/>\n    <go name=\"跳转到结束\" to=\"结束\"/>\n  </seg>\n  <seg name=\"结束1\">\n		<empty name=\"end\"/>\n  </seg>\n  <seg name=\"结束\">\n    <page name=\"查询数据\" var=\"list\" cols=\"id,name,private,remark,link,createTime,upTime\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"userId,name\"\n		>\n		</page>\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n  </seg>\n	\n</rule>', null, null, '2021-01-18 14:07:42', '2021-01-18 14:13:31');
INSERT INTO `exe_resource` VALUES ('146', '47', 'api', '/user/mod/pwd', '修改密码', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"修改密码\" corn=\"\">\n	<seg name=\"修改密码\">\n		<parse name=\"解析参数\" var=\"vo\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"密码\" key=\"pwd\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n      </bean>\n        <user name=\"当前用户\" var=\"user\" />\n        <var name=\"userId\" key=\"user\" childKey=\"id\" var=\"userId\" />\n		<var name=\"设置修改时间\" var=\"upTime\" type=\"date\"/>\n		<code name=\"md5\" hasBody=\"true\">\n          def exe(a,cmdHandle){\n          		def pwd=cmdHandle.getVars().get(\"vo\").pwd\n          		def pwd_md5=kkd.common.util.Md5Util.encode(pwd)\n          		cmdHandle.getVars().put(\"pwd\",pwd_md5)\n          }\n      </code>\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"pwd,upTime,userId\"\n			sql=\"update user_info set pwd=?,upTime=? where id=?\"\n		>\n			\n		</exeSql>\n        <go name=\"结束1\" to=\"结束\"/>\n	</seg>\n   \n    <seg name=\"结束\">\n        <resp name=\"插入成功\" code=\"200\" msg=\"修改成功\" data=\"\"/>\n        <go  name=\"跳转到结束\" to=\"end\"/>\n        <resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n        <empty name=\"end\"/>\n    </seg>\n	\n</rule>', null, null, '2021-01-18 14:20:22', '2021-01-18 14:39:11');
INSERT INTO `exe_resource` VALUES ('147', '51', 'plugin', 'iptv.order.java', '跑单', null, 'package com.exe.web.plugins;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport com.exe.web.util.MyConfUtil;\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.DateUtil;\nimport kkd.common.util.FileUtil;\nimport kkd.common.util.StringUtil;\nimport org.openqa.selenium.*;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.chrome.ChromeOptions;\nimport org.openqa.selenium.logging.LogEntries;\nimport org.openqa.selenium.logging.LogEntry;\nimport org.openqa.selenium.logging.LogType;\nimport org.openqa.selenium.logging.LoggingPreferences;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\nimport java.util.logging.Level;\n\npublic class OrderCmd  extends Cmd{\n\n    private final static Logger logger = LoggerFactory.getLogger(OrderCmd.class);\n    //限制条数\n    private int limit=10;\n    //更新状态\n    private boolean updateData=true;\n    //截图\n    private boolean cutImg=true;\n    //调试\n    private boolean test=false;\n\n    public void exe(CmdVo caiAction, Map<String, String> param) {\n        try{\n            logger.info(\"执行-----------------start\");\n            Map<String, Object> sys=cmdHandle.getSys();\n            String op=param.get(\"op\");\n            WebDriver driver= getWebDriver(sys);\n            if(test){\n                String r=test(null,param,null,driver);\n                logger.info(\"执行结果：\"+r);\n                return;\n            }\n            Date zuoTian=DateUtil.addDays(new Date(),-30);\n            String date=DateUtil.format(zuoTian);\n            logger.info(\"find data create_date> $date \");\n            List<Map<String,String>> list=getNotHandle(date);\n            if(list==null || list.isEmpty()){\n                logger.info(\"list is null\");\n                return;\n            }\n            if(overLimit(date)){\n                return;\n            }else{\n                logger.debug(\"date:$date,未超过限制\");\n            }\n\n            logger.debug(\"get web driver:$driver\");\n            for (Map map:list) {\n                logger.debug(\"handle data:$map\");\n                Map<String,String> dataMap=StringUtil.getParaCollection(map.get(\"data\").toString(),\"&\",\"=\");\n                logger.debug(\"handle dataMap:$dataMap\");\n                String userId=map.get(\"user_id\").toString();\n                if(inBlack(userId)){\n                    logger.debug(\"userId:$userId,黑名单中\");\n                    map.put(\"description\",\"订购失败-黑名单用户\");\n                    update(map);\n                    continue;\n                }else{\n                    logger.debug(\"userId:$userId,不在黑名单中\");\n                }\n\n                logger.debug(\"userId:$userId,start runOrder\");\n                String r=test(map.get(\"id\").toString(),param,dataMap,driver);\n                if(r.indexOf(\"success\")==0){\n                    map.put(\"description\",\"订购成功-\"+r);\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购成功-\"+r);\n                    update(map);\n                }else if(r.indexOf(\"exp\")==0){\n                    map.put(\"description\",\"订购异常-\"+r);\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购异常-\"+r);\n                    update(map);\n                }else{\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购失败-\"+r);\n                    map.put(\"description\",\"订购失败-\"+r);\n                    update(map);\n                    putBlackUser(map);\n                }\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }finally {\n            if(driver!=null){\n                driver.quit();\n            }\n            driver=null;\n            js=null;\n        }\n\n    }\n    public void getCode(){\n\n    }\n\n    public String test(String id,Map<String, String> param,Map<String,String> map,WebDriver driver){\n        try{\n            String userInfo=param.get(\"user\");\n            if(test){\n//                userInfo=\"StbID=&STBType=TY1608&mac=c0%3A1b%3A23%3A32%3A71%3A94&userId=TVGB36.57212%2FPA4&token=4%3B%2F45%3B.8%2FGa61gMLV6XXmlXNAISmbh3%5B&jjsp_userID=NC2103093045@ITV&jjsp_userToken=f5YdkUGCLZjoVZ4XJOe34cE160972196&jjsp_key=3%3A2&jjsp_platform=1&jjsp_enCodeUserID=TVGB36.57212/PA4&jjsp_enCodeUserToken=4%3B/45%3B.8/Ga61gMLV6XXmlXNAISmbh3%5B&userAgent=webkit;Resolution(PAL,720P,1080P)&X-Requested-With=com.android.smart.terminal.iptv\";\n//                str=\"StbID=&STBType=B860AV2.1&mac=D4%3AC1%3AC8%3AAE%3A5F%3AB5&userId=TVGB36.6180RXJ%3F43&token=SlsliGOdd5kI4lhZmfukw5Nfsp%3FpsfNC&jjsp_userID=PZHA252634045@ITV&jjsp_userToken=AnudPAnudP3yiwdoXjj6Gm3fbQEkjujU&jjsp_key=6%3A2&jjsp_platform=2&jjsp_enCodeUserID=TVGB36.6180RXJ%3F43&jjsp_enCodeUserToken=SlsliGOdd5kI4lhZmfukw5Nfsp%3FpsfNC&userAgent=B700-V2A|Mozilla|5.0|ztebw(Chrome)|1.2.0;Resolution(PAL,720p,1080i) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.63 Safari/535.7&X-Requested-With=null\";\n//                userInfo=\"\";\n                map= StringUtil.getParaCollection(userInfo,\"&\",\"=\");\n            }\n            String op=param.get(\"op\");\n            if(op==\"code\"){\n                map= StringUtil.getParaCollection(userInfo,\"&\",\"=\");\n                logger.info(\"code3---\"+map);\n            }else if(op==\"ok\"){\n                map= StringUtil.getParaCollection(userInfo,\"&\",\"=\");\n            }\n            putParam(map,driver);\n            getConsoleLog();\n\n\n            driver.get(\"http://182.131.0.215:8086/CQCA/page/specialfive1.html?seriesCode=17b0f56e57b04265a54f62b9d5d01784\");\n            logger.info(\"---------------step2. visit url\");\n//            getCutImg(driver,\"testA\");\n            logger.info(\"---------------step2. exejs\");\n            JavascriptExecutor js= (JavascriptExecutor) driver;\n            exejs(js,\"\",map.get(\"STBType\"),map.get(\"mac\"));\n            getConsoleLog();\n            logger.info(\"---------------step2. exejs end\");\n//            WebElement bodyEle=getEle(driver,\"body\");\n//            logger.info(\"---------------step2. bodyEle：\"+bodyEle);\n            sleep(1000l);\n            logger.info(\"---------------step2:\"+driver.getCurrentUrl());\n\n            String jscmd=\"if(typeof(ok)!=\'undefined\'){ok();return \'true\';}else{return \'false\';}\";\n            logger.info(\"---------------step2. js:\"+jscmd);\n            Object ok=js.executeScript(jscmd);\n            logger.info(\"---------------step3. exe ok:\"+ok);\n            if(\"false\".equalsIgnoreCase(ok.toString())){\n                return \"ok 不存在\";\n            }\n            sleep(2000l);\n            //http://110.190.90.140:8296/main/sichuan/ordernew/order_overall.action 订单选择页\n//            if(true){\n//                getCutImg(driver,\"ok\");\n//                logger.info(\"---------------step4. ok\");\n//                logger.info(\"---------------4 url:\"+driver.getCurrentUrl());\n//                return \"\";\n//            }\n//            getCutImg(driver,\"testB\");\n            //套餐选择页面\n            //http://110.190.90.140:8296/main/sichuan/ordercheck/order_overall.action\n//            logger.info(\"---------------8 url:\"+driver.getCurrentUrl());\n//            logger.info(\"---------------8 title:\"+driver.getTitle());\n//            System.out.println(\"---------------8 url:\"+driver.getPageSource());\n\n            if(has(driver.getCurrentUrl(),\"/main/sichuan/ordernew/thirdPayOrder.action\")){\n                logger.info(\"-----------三方支付用户----url1. \"+driver.getCurrentUrl());\n                return \"三方支付用户\";\n            }\n            if(!has(driver.getCurrentUrl(),\"/main/sichuan/ordercheck/order_overall.action\")&&\n            !has(driver.getCurrentUrl(),\"/main/sichuan/ordernew/order_overall.action\")&&\n                    !has(driver.getCurrentUrl(),\"/main/sichuan/ordercheck/order_first.action\")\n            ){\n                logger.info(\"---------------url1. \"+driver.getCurrentUrl());\n//                getCutImg(driver,\"order_overall\");\n//                getCutImg(driver,\"not_target-\");\n                return \"非目标用户-\"+driver.getTitle();\n            }\n//            logger.info(\"---------------选择套餐页:\"+driver.getPageSource());\n            Object ok4=js.executeScript(\"mac=\'\"+map.get(\"mac\")+\"\';\");\n            if(\"false\".equalsIgnoreCase(ok4.toString())){\n                return \"mac set error :\";\n            }\n\n            Object ok0=js.executeScript(\"if(typeof(order)!=\'undefined\'){order();return \'true\';}else{return \'false\';}\");\n            //订购全套餐\n//            Object ok0=js.executeScript(\"if(typeof(orderOverall)!=\'undefined\'){orderOverall();return \'true\';}else{return \'false\';}\");\n            logger.debug(\"---------------8 ok:\"+ok0);\n            if(\"false\".equalsIgnoreCase(ok0.toString())){\n                return \"order 不存在\";\n            }\n\n            sleep(1000l);\n            //非影视全能包页面\n            //http://110.190.90.140:8296/main/sichuan/ordernew/order_intial.action\n            if(true){\n                if(has(driver.getCurrentUrl(),\"/main/sichuan/ordercheck/sms_Verify.action\")){\n                    logger.info(\"-----------短信认证----url. \"+driver.getCurrentUrl());\n                    return \"非目标用户-短信认证\";\n                }\n                if(has(driver.getCurrentUrl(),\"/main/sichuan/ordercheck/chooseCheckMethod.action\")){\n                    logger.info(\"-----------选择认证方式----url2. \"+driver.getCurrentUrl());\n                    return \"非目标用户-选择认证方式\";\n                }\n                if(!has(driver.getCurrentUrl(),\"/main/sichuan/ordercheck/order_intial.action\")&&\n                !has(driver.getCurrentUrl(),\"/main/sichuan/ordernew/order_intial.action\")\n                ){\n                    logger.info(\"---------------url3. \"+driver.getCurrentUrl());\n//                    getCutImg(driver,\"not_target1-\");\n                    return \"非目标用户1-\"+driver.getTitle();\n                }\n//                getCutImg(driver,\"order_intial-\"+id);\n//                getCutImg(driver,\"orderA-\");\n                logger.info(\"---------------order:\"+driver.getCurrentUrl());\n//                System.out.println(\"--------------- order:\"+driver.getPageSource());\n                //确认订单\n                js.executeScript(\"if(typeof(order)!=\'undefined\'){order();return \'true\';}else{return \'false\';}\");\n                sleep(1000l);\n\n                logger.info(\"---------------getTitle:\"+driver.getTitle());\n                if(has(driver.getTitle(),\"超出限额提醒\")){\n                    return \"exp-\"+driver.getTitle();\n                }\n                if(!has(driver.getTitle(),\"订购成功\")){\n                    return \"fail-\"+driver.getTitle();\n                }\n                getCutImg(driver,\"order-\");\n                return \"success\";\n            }\n\n\n\n\n\n\n\n\n\n\n\n//            logger.info(\"---------------9 ok:\"+ok0);\n            //支付方式选择 密码支付\n            //http://110.190.90.140:8296/main/sichuan/ordercheck/chooseCheckMethod.action\n            //短信验证\n            //http://110.190.90.140:8296/main/sichuan/ordercheck/sms_Verify.action\n            logger.info(\"---------------9 url:\"+driver.getCurrentUrl());\n            logger.info(\"---------------9 title:\"+driver.getTitle());\n//            System.out.println(\"---------------9 url:\"+driver.getPageSource());\n            if(op==\"code\"){\n                boolean pwdV=driver.getCurrentUrl().indexOf(\"/main/sichuan/ordercheck/sms_Verify.action\")!=-1;\n                logger.info(\"---------------9 pwdV:\"+pwdV);\n                if(pwdV){\n                    WebElement phoneNo=getEle(driver,\"#phoneNo\");\n                    String tel=param.get(\"tel\");\n                    phoneNo.sendKeys(tel);\n                    WebElement code=getEle(driver,\"#code\");\n                    js.executeScript(\"getSMS()\");\n                    sleep(1000l);\n                    getCutImg(driver,\"code\");\n                    return \"\";\n                }\n            }else if(op==\"ok\"){\n                //确认\n                boolean pwdV=driver.getCurrentUrl().indexOf(\"/main/sichuan/ordercheck/sms_Verify.action\")!=-1;\n                logger.info(\"---------------9 pwdV:\"+pwdV);\n                if(pwdV){\n                    WebElement phoneNo=getEle(driver,\"#phoneNo\");\n                    String tel=param.get(\"tel\");\n                    phoneNo.sendKeys(tel);\n                    WebElement codeEle=getEle(driver,\"#code\");\n                    String code=param.get(\"code\");\n                    codeEle.sendKeys(code);\n                    js.executeScript(\"validatePassword()\");\n                    logger.info(\"---------------9 3\");\n                    sleep(1000l);\n                    getCutImg(driver,\"ok\");\n                    return \"\";\n                }\n            }\n\n            js.executeScript(\"logUserInfo.mac=\'\"+map.get(\"mac\")+\"\';\");\n            Object ok5=js.executeScript(\"mac=\'\"+map.get(\"mac\")+\"\';\");\n            if(\"false\".equalsIgnoreCase(ok5.toString())){\n                return \"mac set error :\";\n            }\n            Object ok1=js.executeScript(\"if(typeof(passwordVerify)!=\'undefined\'){passwordVerify();return \'true\';}else{return \'false\';}\");\n            if(\"false\".equalsIgnoreCase(ok1.toString())){\n                return \"passwordVerify 不存在\";\n            }\n            List<String> pwds=new ArrayList<>();\n            pwds.add(\"666666\");\n            pwds.add(\"123456\");\n            pwds.add(\"111111\");\n            pwds.add(\"1234\");\n            pwds.add(\"000000\");\n            pwds.add(\"1111\");\n            for(String pwd:pwds){\n                logger.info(\"---------------9 test pwd:\"+pwd);\n                Object ok6=js.executeScript(\"mac=\'\"+map.get(\"mac\")+\"\';\");\n                if(\"false\".equalsIgnoreCase(ok6.toString())){\n                    return \"mac set error :\";\n                }\n                WebElement password=getEle(driver,\"#password\");\n                password.sendKeys(pwd);\n                WebElement pwdErr=getEle(driver,\"#phone_error_div\");\n                logger.info(\"---------------10 display1:\"+pwdErr.getCssValue(\"display\"));\n//                if(true){\n//                    return \"success\";\n//                }\n\n                Object ok2=js.executeScript(\"if(typeof(validatePassword)!=\'undefined\'){validatePassword();return \'true\';}else{return \'false\';}\");\n                if(\"false\".equalsIgnoreCase(ok2.toString())){\n                    return \"validatePassword 不存在\";\n                }\n                sleep(1000l);\n                logger.info(\"---------------10 ok:\"+ok2);\n                //支付页面 密码支付\n                //http://110.190.90.140:8296/main/sichuan/ordercheck/password_Verify.action?mac=undefined\n                logger.info(\"---------------10 url:\"+driver.getCurrentUrl());\n                logger.info(\"---------------10 title:\"+driver.getTitle());\n//            System.out.println(\"---------------10 url:\"+driver.getPageSource());\n                pwdErr=getEle(driver,\"#phone_error_div\");\n                String display=pwdErr.getCssValue(\"display\");\n                logger.info(\"---------------10 display2:\"+display);\n                if(\"block\".equalsIgnoreCase(display)){\n//                closePasswordErrorDiv()\n//                    getCutImg(driver,\"testD\");\n                    //关闭错误提示\n                    Object ok3=js.executeScript(\"if(typeof(closePasswordErrorDiv)!=\'undefined\'){closePasswordErrorDiv();return \'true\';}else{return \'false\';}\");\n//                    System.out.println(\"---------------10 url:\"+driver.getPageSource());\n                    continue;\n                }else if(\"none\".equalsIgnoreCase(display)){\n                    logger.info(\"---------------10 订购成功:\"+pwd);\n                    if(op==\"code\"){\n\n                        WebElement phoneNo=getEle(driver,\"#phoneNo\");\n                        String tel=param.get(\"tel\");\n                        phoneNo.sendKeys(tel);\n                        WebElement code=getEle(driver,\"#code\");\n                        js.executeScript(\"getSMS()\");\n                        sleep(1000l);\n                        getCutImg(driver,\"code\");\n                        return \"\";\n                    }else if(op==\"ok\"){\n                        //确认\n                        WebElement phoneNo=getEle(driver,\"#phoneNo\");\n                        String tel=param.get(\"tel\");\n                        phoneNo.sendKeys(tel);\n                        WebElement codeEle=getEle(driver,\"#code\");\n                        String code=param.get(\"code\");\n                        codeEle.sendKeys(code);\n                        js.executeScript(\"validatePassword()\");\n                        sleep(1000l);\n                        getCutImg(driver,\"ok\");\n\n\n                        js.executeScript(\"thinkAgain()\");\n                        sleep(1000l);\n                        getCutImg(driver,\"thinkAgain\");\n\n                        js.executeScript(\"order()\");\n                        sleep(1000l);\n                        getCutImg(driver,\"order\");\n\n//                            System.out.println(\"---------------10 url:\"+driver.getPageSource());\n//                            js.executeScript(\"agree()\");\n//                            sleep(1000l);\n//                            getCutImg(driver,\"agree\");\n                        return \"\";\n                    }\n//                    getCutImg(driver,\"testF\");\n//                    logger.info(\"---------------10 订购成功title:\"+driver.getTitle());\n//                    WebElement phoneNo=getEle(driver,\"#phoneNo\");\n//                    phoneNo.sendKeys(\"18723385113\");\n//                    WebElement code=getEle(driver,\"#code\");\n//                    code.sendKeys(\"1308\");\n////                    WebElement code=getEle(driver,\"#phone_set_ok_a\");\n////                    code.click();\n////                    js.executeScript(\"getSMS()\");\n//                    js.executeScript(\"validatePassword()\");\n//                    sleep(1000l);\n//                    js.executeScript(\"agree()\");\n//                    sleep(1000l);\n//                    getCutImg(driver,\"testE\");\n////                    printCookie(driver);\n//                    System.out.println(\"---------------10 url:\"+driver.getPageSource());\n                    return \"success\"+\"-\"+pwd;\n                }\n//                getCutImg(driver,\"testE\");\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n            e.printStackTrace();\n            return \"exp-\"+e.getMessage();\n        }\n        getConsoleLog();\n        return \"pwd Error\";\n    }\n\n    private String getJsCode(WebDriver driver) {\n        if(false){\n            String url=\"http://110.190.90.140:8296/js/staryea.js\";\n            driver.get(url);\n            logger.info(\"---------------step1.\"+ driver.getPageSource());\n            url=\"http://110.190.90.140:8296/js/common/filelog/common.js\";\n            driver.get(url);\n            logger.info(\"---------------step2.\"+ driver.getPageSource());\n            url=\"http://110.190.90.140:8296/js/common/filelog/sc_order.js\";\n            driver.get(url);\n            logger.info(\"---------------step3.\"+ driver.getPageSource());\n            url=\"http://110.190.90.140:8296/resource/js/common_village.js\";\n            driver.get(url);\n            logger.info(\"---------------step4.\"+ driver.getPageSource());\n            return \"\";\n        }\n        return null;\n    }\n\n    public boolean has(String A,String B){\n        if(A.indexOf(B)!=-1){\n            return true;\n        }\n        return false;\n    }\n    public void printCookie(WebDriver driver){\n        Set<Cookie> sets= driver.manage().getCookies();\n        Iterator it = sets.iterator();\n        while (it.hasNext()) {\n            Cookie cookie1 = (Cookie) it.next();\n            logger.info(\"---------------1.cookie,\"+cookie1.getName()+\",val:\"+cookie1.getValue());\n        }\n    }\n    public void exejs(JavascriptExecutor js,String StbID,String STBType,String mac){\n//        function init1234(){\n//            var head = document.head || document.getElementsByTagName(\'head\')[0];\n//            var script = document.createElement(\'script\');\n//            script.innerHTML = \'Authentication = new Object();Authentication.CTCGetConfig = function(cvalue){ if(cvalue==\'StbID\'){return \'\"+StbID+\"\'};if(cvalue==\'STBType\'){return \'\"+STBType+\"\'};if(cvalue==\'mac\'){return \'\"+mac+\"\'};}\';\n//            head.appendChild(script);\n//        }\n//        init1234();\n        String jsStr=\"function init1234(){\\n\";\n        jsStr=jsStr+\"var head = document.head || document.getElementsByTagName(\'head\')[0];\\r\\n\";\n        jsStr=jsStr+\"var script = document.createElement(\'script\');\\r\\n\";\n        jsStr=jsStr+\"script.innerHTML = \\\"Authentication = new Object();Authentication.CTCGetConfig = function(cvalue){ if(cvalue==\'StbID\'){return \'\"+StbID+\"\'};if(cvalue==\'STBType\'){return \'\"+STBType+\"\'};if(cvalue==\'mac\'){return \'\"+mac+\"\'};}\\\";\\r\\n\";\n        jsStr=jsStr+\"head.appendChild(script);\\r\\n\";\n        jsStr=jsStr+\"}\\r\\n\";\n        jsStr=jsStr+\"init1234();\\r\\n\";\n        logger.info(\"---------------js-content\"+jsStr);\n        js.executeScript(jsStr);\n    }\n\n    public void sleep(Long l){\n        try {\n            Thread.sleep(l);\n        }catch (Exception e){\n\n        }\n    }\n    private static int c=0;\n    public void getCutImg(WebDriver driver,String name){\n        try {\n            if(!cutImg){\n                return ;\n            }\n            if(c%50==0){\n                c=0;\n            }\n            File srcFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n            String root=MyConfUtil.getRootPath();\n            File targetFile=new File(root+\"/static/logs/\"+name+c+\".png\");\n            FileUtil.copy(srcFile,targetFile);\n            c++;\n        } catch (Exception e) {\n            logger.error(\"\",e);\n        }\n    }\n    public void getCutImg1(WebDriver driver,String name){\n        try {\n            File srcFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n            String root=MyConfUtil.getRootPath();\n            File targetFile=new File(root+\"/static/logs/\"+name+c+\".png\");\n            WebElement element=getEle(driver,\"body\");\n            BufferedImage img = ImageIO.read(srcFile);\n            int width = element.getSize().getWidth();\n            int height = element.getSize().getHeight();\n            //获取指定元素的坐标\n            Point point = element.getLocation();\n            //从元素左上角坐标开始，按照元素的高宽对img进行裁剪为符合需要的图片\n            BufferedImage dest = img.getSubimage(point.getX(), point.getY(), width, height);\n            ImageIO.write(dest, \"png\", targetFile);\n            c++;\n//          FileUtil.copy(srcFile,targetFile);\n        } catch (IOException e) {\n            logger.error(\"\",e);\n        }\n    }\n    private  WebDriver driver=null;\n    private  JavascriptExecutor js=null;\n    private WebDriver getWebDriver(Map<String, Object> sys){\n        if(driver!=null){\n            try{\n                js.executeScript(\"console.log(\'test\')\");\n            }catch (Exception e){\n                logger.error(\"\",e);\n                driver=null;\n            }\n        }\n        if(driver==null){\n            System.setProperty(\"webdriver.chrome.driver\",\n                    \"/usr/bin/chromedriver\");\n\n            ChromeOptions opt = new ChromeOptions();\n            opt.addArguments(\"disable-debugbars\");\n            opt.addArguments(\"--no-sandbox\");\n            opt.addArguments(\"--headless\");\n            opt.addArguments(\"--disable-gpu\");\n            opt.addArguments(\"--disable-dev-shm-usage\");\n            opt.addArguments(\"X-Requested-With:com.android.smart.terminal.iptv\");\n            opt.addArguments(\"User-Agent:webkit;Resolution(PAL,720P,1080P)\");\n            String root=MyConfUtil.getRootPath()+\"/conf\";\n            //添加插件\n//            opt.addExtensions(new File(root+\"/test.crx\"));\n//            TODO\n            opt.setExperimentalOption(\"excludeSwitches\",\n                    Arrays.asList(\"enable-automation\"));\n\n            //为了获取console的日志输出\n            DesiredCapabilities caps = DesiredCapabilities.chrome();\n            LoggingPreferences logPrefs = new LoggingPreferences();\n            logPrefs.enable(LogType.BROWSER, Level.INFO);//输入为debug的日志\n            caps.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);\n            caps.setCapability(ChromeOptions.CAPABILITY, opt);\n\n\n            driver = new ChromeDriver(caps);\n            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n            js = (JavascriptExecutor) driver;\n            sys.put(\"driver\",driver);\n            sys.put(\"js\",js);\n        }\n        return driver;\n    }\n\n    public void getConsoleLog() {\n        LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);\n        for (LogEntry entry : logEntries) {\n            //依次打印出console信息\n            System.out.println(\"chrome.console====\"+entry.getLevel() + \"：\" + entry.getMessage());\n        }\n    }\n\n\n\n    private void putParam(Map map, WebDriver driver) {\n        String jjsp_userID= map.get(\"jjsp_userID\").toString();\n        String jjsp_userToken= map.get(\"jjsp_userToken\").toString();\n        String jjsp_key= map.get(\"jjsp_key\").toString();\n        String jjsp_platform= map.get(\"jjsp_platform\").toString();\n        String jjsp_enCodeUserID= map.get(\"jjsp_enCodeUserID\").toString();\n        String jjsp_enCodeUserToken= map.get(\"jjsp_enCodeUserToken\").toString();\n        String STBType= map.get(\"STBType\").toString();\n        String mac= map.get(\"STBType\").toString();\n\n        Date d=DateUtil.addDays(new Date(),999);\n        logger.debug(\"---------------0\");\n        driver.manage().window().setSize(new Dimension(1280,720));\n        driver.get(\"http://182.131.0.215:8086/CQCA/page/specialfive1.html?seriesCode=17b0f56e57b04265a54f62b9d5d01784\");\n        driver.manage().deleteAllCookies();\n        System.out.println(\"---------------1\");\n        Cookie cookie=new Cookie(\"jjsp_userID\",jjsp_userID,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_userToken\",jjsp_userToken,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_key\",jjsp_key,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_platform\",jjsp_platform,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_enCodeUserID\",jjsp_enCodeUserID,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_enCodeUserToken\",jjsp_enCodeUserToken,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_index_jsp_url\",\"http%3A//182.131.0.215%3A8086/CQCA/index.jsp\",\"/\",d);\n        driver.manage().addCookie(cookie);\n\n        Set<Cookie> sets= driver.manage().getCookies();\n        Iterator it = sets.iterator();\n        while (it.hasNext()) {\n            Cookie cookie1 = (Cookie) it.next();\n            logger.debug(\"---------------1.cookie,\"+cookie1.getName()+\",val:\"+cookie1.getValue());\n        }\n    }\n\n    public WebElement getEle(WebDriver driver,String cssSelector){\n        try {\n            return  driver.findElement(By.cssSelector(cssSelector));\n        }catch (Exception e){\n            return null;\n        }\n    }\n    public String op() {\n        return null;\n    }\n\n\n    /**\n     * 获取未处理数据\n     *\n     * @return\n     */\n    public List<Map<String, String>> getNotHandle(String date) {\n        JDBC.DbHelper dh = JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try {\n            String sql=\"select * from iptv_order_user where description=\'未处理\' and create_date>\'$date\' and id=\'1002\' limit 1\";\n            sql=\"select * from iptv_order_user where description like \'未处理\' and create_date>\'$date\' order by id asc limit \"+limit;\n//            sql=\"select * from iptv_order_user where description like \'订购成功%\' and create_date>\'$date\' order by id desc limit \"+limit;\n            return dh.executeQuery(sql, parameters,\n                    new JDBC.RowSetImpl<Map<String,String>>() {\n                        @Override\n                        public Map<String, String> getObjcet(ResultSet resultSet) {\n                            Map<String,String> map=new HashMap<>();\n                            try {\n                                map.put(\"id\",resultSet.getString(\"id\"));\n                                map.put(\"user_id\",resultSet.getString(\"user_id\"));\n                                map.put(\"user_type\",resultSet.getString(\"user_type\"));\n                                map.put(\"product_id\",resultSet.getString(\"product_id\"));\n                                map.put(\"create_date\",resultSet.getString(\"create_date\"));\n                                map.put(\"description\",resultSet.getString(\"description\"));\n                                map.put(\"data\",resultSet.getString(\"data\"));\n                            } catch (SQLException throwables) {\n                                logger.error(\"\",throwables);\n                            }\n                            return map;\n                        }\n                    });\n        } catch (Exception e) {\n            logger.error(\"\",e);\n        }\n        return null;\n    }\n\n    /**\n     是否在黑名单\n     */\n    public boolean inBlack(String userId){\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            String uid=dh.executeQueryOne(\"select user_id from iptv_black_user where user_id=\'$userId\' \",parameters,String.class);\n\n            if(uid!=null){\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    /**\n     是否超过限制\n     */\n    public boolean overLimit(String date){\n        boolean flag=false;\n        if(flag){\n            logger.debug(\"date:$date,超过限制\");\n        }\n        return false;\n    }\n\n    /**\n     * 更新数据\n     * @return\n     */\n    public boolean update(Map<String,String> map){\n        if(!updateData){\n            return true;\n        }\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_type\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"product_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"create_date\")));\n            String desc=map.get(\"description\");\n            if(desc!=null&&desc.length()>50){\n                desc=desc.substring(0,40);\n            }\n            parameters.add(new SqlParameter(Types.VARCHAR,desc));\n\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"id\")));\n            String sql=\"update iptv_order_user set user_id=?,user_type=?,product_id=?,create_date=?,description=? where id=?\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"更新用户：$map.user_id 成功\");\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    /**\n     * 删除数据\n     * @return\n     */\n    public boolean delLog(Map<String,String> map){\n        Date create_date=new java.util.Date();\n\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"id\")));\n            String sql=\"delete from  iptv_order_user where id=?\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"删除用户：$user_id 历史\");\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    public boolean putBlackUser(Map<String,String> map){\n        if(!updateData){\n            return true;\n        }\n        Date create_date=new java.util.Date();\n\n        JDBC.DbHelper dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_type\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"product_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"create_date\")));\n            String desc=map.get(\"description\");\n            if(desc!=null&& desc.length()>50){\n                desc=desc.substring(0,40);\n            }\n            parameters.add(new SqlParameter(Types.VARCHAR,desc));\n            String sql=\"insert into iptv_black_user(user_id,user_type,product_id,create_date,description)values\";\n            sql=sql+\"(?,?,?,?,?)\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"插入黑名单用户：$map.user_id \");\n                return true;\n            }\n        }catch (Exception e){\n//            e.printStackTrace();\n        }\n        return false;\n    }\n\n}', null, null, '2021-01-19 09:48:17', '2021-03-04 10:41:11');
INSERT INTO `exe_resource` VALUES ('148', '51', 'api', '/iptv/blackuser/add', '黑名单用户新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"黑名单用户新增\" corn=\"\">\n	<seg name=\"黑名单用户新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"user_id\" key=\"user_id\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"user_type\" key=\"user_type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"product_Id\" key=\"product_Id\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"description\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        \n      </bean>\n		<var name=\"设置当前时间\" var=\"create_date\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.user_id,vo.user_type,vo.product_Id,vo.description,create_date\"\n			sql=\"insert into iptv_black_user(id,user_id,user_type,product_Id,description,create_date) values(?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:22:16', '2021-01-23 21:31:06');
INSERT INTO `exe_resource` VALUES ('149', '51', 'api', '/iptv/blackuser/mod', '黑名单用户修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"黑名单用户修改\" corn=\"\">\n	<seg name=\"黑名单用户修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"user_id\" key=\"user_id\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"user_type\" key=\"user_type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"product_Id\" key=\"product_Id\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"description\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n      </bean>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.user_id,vo.user_type,vo.product_Id,vo.description,vo.id\"\n			sql=\"update iptv_black_user set user_id=?,user_type=?,product_Id=?,description=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-23 21:22:42', '2021-01-23 21:38:45');
INSERT INTO `exe_resource` VALUES ('150', '51', 'api', '/iptv/blackuser/page', '黑名单用户分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"黑名单用户查询\" corn=\"\">\n	<seg name=\"黑名单用户查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"user_id\" var=\"user_id\" key=\"user_id\" />\n		<param name=\"description\" var=\"description\" key=\"description\" />\n        <param name=\"startTime\" var=\"startTime\" key=\"startTime\" />\n        <param name=\"endTime\" var=\"endTime\" key=\"endTime\" />\n		<var name=\"sql\" var=\"sql\" init=\"select * from iptv_black_user where 1=1 \"/>\n		<append name=\"添加user_id\" key=\"sql\" when=\"user_id\" value=\" and user_id like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加description\" key=\"sql\" when=\"description\" value=\" and description like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加startTime\" key=\"sql\" when=\"startTime\" value=\" and create_date &gt;=? \"/>\n        <append name=\"添加endTime\" key=\"sql\" when=\"endTime\" value=\" and create_date &lt;? \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,user_id,user_type,product_Id,description,create_date\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"user_id,description,startTime,endTime\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-23 21:23:32', '2021-01-26 09:43:57');
INSERT INTO `exe_resource` VALUES ('151', '51', 'api', '/iptv/blackuser/get', '根据ID查询黑名单用户', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,user_id,user_type,product_Id,description,create_date\" param=\"id\"\n		sql=\"select * from iptv_black_user where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:24:24', '2021-01-23 21:40:08');
INSERT INTO `exe_resource` VALUES ('152', '51', 'api', '/iptv/blackuser/del', '黑名单用户删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"黑名单用户删除\" corn=\"\">\n	<seg name=\"黑名单用户删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  iptv_black_user where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:25:50', '2021-01-23 21:41:10');
INSERT INTO `exe_resource` VALUES ('153', '51', 'api', '/iptv/orderuser/add', '订购用户新增', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"订购用户新增\" corn=\"\">\n	<seg name=\"订购用户新增\">\n		<parse name=\"解析参数\" var=\"vo\"/>\n      <bean name=\"bean\" key=\"vo\" parseBody=\"true\">\n        <field name=\"user_id\" key=\"user_id\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"user_type\" key=\"user_type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"product_Id\" key=\"product_Id\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"description\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"data\" key=\"data\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n      </bean>\n		<var name=\"设置当前时间\" var=\"create_date\" type=\"date\"/>\n		\n		<exeSql name=\"插入数据\" var=\"insertCnt\" cols=\"id,vo.user_id,vo.user_type,vo.product_Id,vo.description,vo.data,create_date\"\n			sql=\"insert into iptv_order_user(id,user_id,user_type,product_Id,description,data,create_date) values(?,?,?,?,?,?,?)\"\n		>\n			\n		</exeSql>\n		<if name=\"判断插入行数\" js=\"insertCnt>0\" true=\"插入成功\"  false=\"失败\"/>\n		<resp name=\"插入成功\" code=\"200\" msg=\"插入成功\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:42:44', '2021-01-25 09:24:57');
INSERT INTO `exe_resource` VALUES ('154', '51', 'api', '/iptv/orderuser/mod', '订购用户修改', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"订购用户用户修改\" corn=\"\">\n	<seg name=\"订购用户用户修改\">\n      \n		<parse name=\"解析参数\" var=\"vo\" type=\"app\" />\n      <bean name=\"bean\"  key=\"vo\" parseBody=\"true\">\n        <field name=\"id\" key=\"id\" mock=\"@integer(1, 10)\" reg=\"\"   verify=\"required\"/>\n        <field name=\"user_id\" key=\"user_id\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"user_type\" key=\"user_type\" mock=\"@string(\'lower\', 5)\" reg=\"\" verify=\"required\" />\n        <field name=\"product_Id\" key=\"product_Id\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"description\" key=\"description\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n        <field name=\"data\" key=\"data\" mock=\"@string(\'lower\', 5)\" reg=\"\" />\n      </bean>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"vo.user_id,vo.user_type,vo.product_Id,vo.description,vo.data,vo.id\"\n			sql=\"update iptv_order_user set user_id=?,user_type=?,product_Id=?,description=?,data=? where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"更新成功\"  false=\"失败\"/>\n		<resp name=\"更新成功\" code=\"200\" :msg=\"更新成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-23 21:43:05', '2021-01-25 09:27:21');
INSERT INTO `exe_resource` VALUES ('155', '51', 'api', '/iptv/orderuser/page', '订购用户分页', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"订购用户查询\" corn=\"\">\n	<seg name=\"订购用户查询\">\n		<param name=\"当前页码\" var=\"page\" key=\"page\" mock=\"@integer(1, 1)\" />\n		<param name=\"每页条数\" var=\"pageSize\" key=\"limit\" mock=\"@integer(10, 10)\" />\n		<param name=\"user_id\" var=\"user_id\" key=\"user_id\" />\n		<param name=\"description\" var=\"description\" key=\"description\" />\n        <param name=\"startTime\" var=\"startTime\" key=\"startTime\" />\n        <param name=\"endTime\" var=\"endTime\" key=\"endTime\" />\n		\n		<var name=\"sql\" var=\"sql\" init=\"select * from iptv_order_user where 1=1 \"/>\n		<append name=\"添加user_id\" key=\"sql\" when=\"user_id\" value=\" and user_id like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加description\" key=\"sql\" when=\"description\" value=\" and description like concat(\'%\',?,\'%\') \"/>\n        <append name=\"添加startTime\" key=\"sql\" when=\"startTime\" value=\" and create_date &gt;=? \"/>\n        <append name=\"添加endTime\" key=\"sql\" when=\"endTime\" value=\" and create_date &lt;? \"/>\n		<page name=\"查询数据\" var=\"list\" cols=\"id,user_id,user_type,product_Id,description,data,create_date\" :page=\"#{page}\" :pageSize=\"#{pageSize}\" \n			:sql=\"#{sql}\" param=\"user_id,description,startTime,endTime\"\n		>\n			\n		</page>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-01-23 21:43:40', '2021-01-26 09:43:43');
INSERT INTO `exe_resource` VALUES ('156', '51', 'api', '/iptv/orderuser/get', '根据ID查询订购用户', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"查询\" corn=\"\">\n	<seg name=\"查询\">\n		<param name=\"资源ID\" var=\"id\" key=\"id\" />\n		\n		\n		\n		<sqlFind name=\"查询数据\" var=\"list\" cols=\"id,user_id,user_type,product_Id,description,data,create_date\" param=\"id\"\n		sql=\"select * from iptv_order_user where 1=1 and id=?\" \n		>\n			\n		</sqlFind>\n		\n		<resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"list\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:44:06', '2021-01-25 09:25:02');
INSERT INTO `exe_resource` VALUES ('157', '51', 'api', '/iptv/orderuser/del', '订购用户删除', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"订购用户删除\" corn=\"\">\n	<seg name=\"订购用户删除\">\n		<param name=\"id\" var=\"id\" key=\"id\"/>\n		\n		<exeSql name=\"更新数据\" var=\"cnt\" cols=\"id\"\n			sql=\"delete from  iptv_order_user where id=?\"\n		>\n			\n		</exeSql>\n		<if name=\"判断更新行数\" js=\"cnt>0\" true=\"删除成功\"  false=\"失败\"/>\n		<resp name=\"删除成功\" code=\"200\" :msg=\"删除成功，id:#{vo.id}\" data=\"\"/>\n		<go  name=\"跳转到结束\" to=\"end\"/>\n		<resp name=\"失败\" code=\"100\" msg=\"#{errMsg}\" data=\"\"/>\n		<empty name=\"end\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-23 21:45:12', '2021-01-25 09:29:16');
INSERT INTO `exe_resource` VALUES ('158', '51', 'task', '/task/iptv/del/orderuser', '删除过期数据', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"删除历史数据\" corn=\"1\">\n	<seg name=\"删除历史数据\">\n        <exeSql name=\"删除30天前历史数据\" var=\"cnt\" cols=\"\"\n			sql=\"DELETE from iptv_order_user where   create_date &lt; date_sub(now(), INTERVAL 30 DAY);\"\n		>\n			\n		</exeSql>\n		<print name=\"打印\" desc=\"定时任务-删除30天前历史数据\" var=\"cnt\"/>\n	</seg>\n	\n</rule>', null, null, '2021-01-26 09:59:00', '2021-01-26 10:36:44');
INSERT INTO `exe_resource` VALUES ('159', '52', 'plugin', 'debug.java', '调试命令', null, 'package com.exe.web.debug;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.CmdHandle;\nimport com.exe.base.vo.CmdVo;\nimport com.sun.jdi.*;\nimport com.sun.jdi.connect.AttachingConnector;\nimport com.sun.jdi.connect.Connector;\nimport com.sun.jdi.event.*;\nimport com.sun.jdi.request.BreakpointRequest;\nimport com.sun.jdi.request.EventRequest;\nimport com.sun.jdi.request.EventRequestManager;\nimport com.sun.tools.jdi.LocationImpl;\nimport com.sun.tools.jdi.SocketAttachingConnector;\nimport kkd.common.util.StringUtil;\nimport sun.java2d.loops.GraphicsPrimitive;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class DebuggerCmd extends Cmd implements  Runnable{\n\n    public static final String HOST = \"hostname\";\n\n    public static final String PORT = \"port\";\n\n    private VirtualMachine vm;\n\n    private EventQueue eventQueue;\n\n    private EventRequestManager eventRequestManager;\n\n    private Process process;\n\n    private EventSet eventSet;\n\n    private Event event;\n\n    private boolean vmExit = false;\n    private boolean cancelData = false;\n\n    /**\n     * 连接调试服务\n     * @param ip\n     * @param port\n     */\n    public void init(String ip,int port){\n        // 一、取得连接器\n        VirtualMachineManager vmm = Bootstrap.virtualMachineManager();\n        List<AttachingConnector> connectors = vmm.attachingConnectors();\n        SocketAttachingConnector sac = null;\n        for (AttachingConnector ac : connectors) {\n            if (ac instanceof SocketAttachingConnector) {\n                sac = (SocketAttachingConnector) ac;\n                break;\n            }\n        }\n        if (sac == null) {\n            System.out.println(\"JDI error\");\n            return;\n        }\n\n        // 二、连接到远程虚拟器\n        Map<String, Connector.Argument> arguments = sac.defaultArguments();\n        Connector.Argument hostArg = (Connector.Argument) arguments.get(HOST);\n        Connector.Argument portArg = (Connector.Argument) arguments.get(PORT);\n\n        hostArg.setValue(ip);\n        portArg.setValue(String.valueOf(port));\n        try {\n            vm = sac.attach(arguments);\n            process = vm.process();\n            eventRequestManager = vm.eventRequestManager();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n\n    }\n    /**\n     * 取消断点\n     */\n    public void cancelBreakPoint(String key,int lineNum){\n        // 三、取得要关注的类和方法\n        Class<?> cls=CmdHandle.getCmd(key);\n        List<ReferenceType> classesByName = vm.classesByName(cls.getName());\n        if (classesByName == null || classesByName.size() == 0) {\n            System.out.println(\"No class found\");\n            return;\n        }\n        // 四、注册监听\n        vm.setDebugTraceMode(VirtualMachine.TRACE_EVENTS);\n        vm.resume();\n        try {\n            List<Location> locations = classesByName.get(0).locationsOfLine(lineNum);\n            BreakpointRequest breakpointRequest = eventRequestManager.createBreakpointRequest(locations.get(0));\n            breakpointRequest.disable();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * 设置断点\n     */\n    public void setBreakPoint(String key,int lineNum){\n        // 三、取得要关注的类和方法\n        Class<?> cls=CmdHandle.getCmd(key);\n        List<ReferenceType> classesByName = vm.classesByName(cls.getName());\n        if (classesByName == null || classesByName.size() == 0) {\n            System.out.println(\"No class found\");\n            return;\n        }\n        // 四、注册监听\n        vm.setDebugTraceMode(VirtualMachine.TRACE_EVENTS);\n        vm.resume();\n        try {\n            List<Location> locations = classesByName.get(0).locationsOfLine(lineNum);\n            BreakpointRequest breakpointRequest = eventRequestManager.createBreakpointRequest(locations.get(0));\n            breakpointRequest.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);\n            breakpointRequest.enable();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * 取消获取数据\n     */\n    public void cancelData(){\n        cancelData=true;\n    }\n\n\n    /**\n     * 停止\n     */\n    public void stop(){\n        vmExit=true;\n        vm.dispose();\n    }\n\n\n    public static void main(String[] args) throws Exception {\n        DebuggerCmd debugger=new DebuggerCmd();\n        debugger.init(\"127.0.0.1\",8800);\n\n        debugger.setBreakPoint(\"com.exe.bo.debug.Test\",34);\n\n        Value s=debugger.getData(\"com.exe.bo.debug.Test\",34,\"i\");\n        debugger.cancelData();\n        System.out.println(\"sssssssss:\"+s);\n        debugger.cancelBreakPoint(\"com.exe.bo.debug.Test\",34);\n        debugger.stop();\n\n    }\n\n    private  void test() throws Exception {\n        // 三、取得要关注的类和方法\n        List<ReferenceType> classesByName = vm.classesByName(\"com.exe.bo.debug.Test\");\n        if (classesByName == null || classesByName.size() == 0) {\n            System.out.println(\"No class found\");\n            return;\n        }\n        ReferenceType rt = classesByName.get(0);\n        List<Method> methodsByName = rt.methodsByName(\"printHello\");\n        if (methodsByName == null || methodsByName.size() == 0) {\n            System.out.println(\"No method found\");\n            return;\n        }\n        Method method = methodsByName.get(0);\n\n        // 四、注册监听\n        vm.setDebugTraceMode(VirtualMachine.TRACE_EVENTS);\n        vm.resume();\n        List<Location> locations = classesByName.get(0).locationsOfLine(34);\n        BreakpointRequest breakpointRequest = eventRequestManager.createBreakpointRequest(locations.get(0));\n        breakpointRequest.enable();\n\n//        MethodEntryRequest methodEntryRequest = eventRequestManager.createMethodEntryRequest();\n//        methodEntryRequest.addClassFilter(rt);\n//        methodEntryRequest.setSuspendPolicy(EventRequest.SUSPEND_NONE);\n//        // methodEntryRequest.setSuspendPolicy(EventRequest.SUSPEND_ALL);\n//\n//        methodEntryRequest.enable();\n//\n//        BreakpointRequest breakpointRequest = eventRequestManager.createBreakpointRequest(method.location());\n//        breakpointRequest.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);\n//        // breakpointRequest.setSuspendPolicy(EventRequest.SUSPEND_ALL);\n//        breakpointRequest.enable();\n\n        // ClassPrepareRequest classPrepareRequest = eventRequestManager.createClassPrepareRequest();\n        // classPrepareRequest.addClassFilter(\"test.Test\");\n        // classPrepareRequest.addCountFilter(1);\n        // classPrepareRequest.setSuspendPolicy(EventRequest.SUSPEND_ALL);\n        // classPrepareRequest.enable();\n\n    }\n\n\n\n    public void resume(){\n        eventSet.resume();\n    }\n\n    private  void eventLoop() throws Exception {\n        eventQueue = vm.eventQueue();\n        while (true) {\n            if (vmExit == true) {\n                break;\n            }\n            eventSet = eventQueue.remove();\n            EventIterator eventIterator = eventSet.eventIterator();\n            while (eventIterator.hasNext()) {\n                Event event = (Event) eventIterator.next();\n                execute(event);\n            }\n        }\n    }\n\n    public Value getData(String className,int lineNum,String var){\n        try{\n            cancelData=false;\n            eventQueue = vm.eventQueue();\n            while (true) {\n                if (vmExit == true||cancelData) {\n                    break;\n                }\n                System.out.println(\"----------111111\");\n                eventSet = eventQueue.remove();\n                EventIterator eventIterator = eventSet.eventIterator();\n                while (eventIterator.hasNext()) {\n                    System.out.println(\"----------2222222222\");\n                    Event event = (Event) eventIterator.next();\n                    if(event instanceof BreakpointEvent){\n                        LocationImpl loc= (LocationImpl) ((BreakpointEvent) event).location();\n                        int lineNum1=loc.lineNumber();\n                        String className1=loc.declaringType().name();\n                        System.out.println(\"----------3333333\"+className1+\":\"+lineNum1);\n//                        if(className.equalsIgnoreCase(className1)  && lineNum==lineNum1){\n                            System.out.println(\"----------44444444444444\");\n                            BreakpointEvent breakpointEvent = (BreakpointEvent) event;\n                            System.out.println(\"----------\"+breakpointEvent);\n                            ThreadReference threadReference = breakpointEvent.thread();\n                            StackFrame stackFrame = threadReference.frame(0);\n                            stackFrame.visibleVariables();\n                            LocalVariable localVariable = stackFrame.visibleVariableByName(var);\n                            Value value = stackFrame.getValue(localVariable);\n//                        String date = ((StringReference) value).value();\n                            eventSet.resume();\n                            return value;\n//                        }\n\n                    }\n                    eventSet.resume();\n                }\n                Thread.sleep(1000);\n            }\n\n\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    private  void execute(Event event) throws Exception {\n        this.event=event;\n        if (event instanceof VMStartEvent) {\n            System.out.println(\"VM started\");\n            eventSet.resume();\n        } else if (event instanceof BreakpointEvent) {\n            System.out.println(\"Reach Method printHello of test.Test\");\n//\n//            BreakpointEvent breakpointEvent = (BreakpointEvent) event;\n//            ThreadReference threadReference = breakpointEvent.thread();\n//            StackFrame stackFrame = threadReference.frame(0);\n//\n//            stackFrame.visibleVariables();\n//\n//            // 获取date变量\n//            LocalVariable localVariable = stackFrame.visibleVariableByName(\"date\");\n//            Value value = stackFrame.getValue(localVariable);\n//            String date = ((StringReference) value).value();\n//\n//            LocalVariable localVariable1 = stackFrame.visibleVariableByName(\"i\");\n//            Value value1 = stackFrame.getValue(localVariable1);\n//            int i = ((IntegerValue) value1).intValue();\n//\n//            System.out.println(\"Debugger print[\" + date + \" : \" + i + \"]\");\n//            eventSet.resume();\n        } else if (event instanceof MethodEntryEvent) {\n            MethodEntryEvent mee = (MethodEntryEvent) event;\n            Method method = mee.method();\n            System.out.println(method.name() + \" was Entered!\");\n            eventSet.resume();\n        } else if (event instanceof VMDisconnectEvent) {\n            vmExit = true;\n        } else if (event instanceof ClassPrepareEvent) {\n            ClassPrepareEvent classPrepareEvent = (ClassPrepareEvent) event;\n            String mainClassName = classPrepareEvent.referenceType().name();\n            if (mainClassName.equals(\"test.Test\")) {\n                System.out.println(\"Class \" + mainClassName + \" is already prepared\");\n            }\n            if (true) {\n                // Get location\n                ReferenceType referenceType = classPrepareEvent.referenceType();\n                List locations = referenceType.locationsOfLine(34);\n                Location location = (Location) locations.get(0);\n\n                // Create BreakpointEvent\n                BreakpointRequest breakpointRequest = eventRequestManager.createBreakpointRequest(location);\n                breakpointRequest.setSuspendPolicy(EventRequest.SUSPEND_ALL);\n                breakpointRequest.enable();\n            }\n            eventSet.resume();\n        } else {\n            eventSet.resume();\n        }\n    }\n\n    private  static Map<String,DebuggerCmd> map=new HashMap<>();\n\n    @Override\n    public void exe(CmdVo cmd, Map<String, String> param) {\n        String op=param.get(\"op\");\n        String var=param.get(\"var\");\n        String debuggerName=param.get(\"debugger\");\n        if(StringUtil.isEmpty(debuggerName)){\n            debuggerName=\"default\";\n        }\n        DebuggerCmd debugger=map.get(debuggerName);\n        if(\"init\".equalsIgnoreCase(op)){\n            String ip=param.get(\"ip\");\n            String port=param.get(\"port\");\n            if(debugger!=null){\n                debugger.stop();\n            }\n            debugger=new DebuggerCmd();\n            debugger.init(ip,Integer.parseInt(port));\n            Thread t=new Thread(debugger);\n            t.start();\n            map.put(debuggerName,debugger);\n            cmdHandle.getVars().put(var,\"success\");\n        }else if(\"setBreakPoint\".equalsIgnoreCase(op)){\n            String className=param.get(\"className\");\n            String lineNum=param.get(\"lineNum\");\n            debugger.setBreakPoint(className,Integer.parseInt(lineNum));\n            cmdHandle.getVars().put(var,\"success\");\n        }else if(\"cancelBreakPoint\".equalsIgnoreCase(op)){\n            String className=param.get(\"className\");\n            String lineNum=param.get(\"lineNum\");\n            debugger.cancelBreakPoint(className,Integer.parseInt(lineNum));\n            cmdHandle.getVars().put(var,\"success\");\n        }else if(\"getData\".equalsIgnoreCase(op)){\n            String className=param.get(\"className\");\n            String lineNum=param.get(\"lineNum\");\n            String key=param.get(\"key\");\n            Value v=debugger.getData(className,Integer.parseInt(lineNum),key);\n            cmdHandle.getVars().put(var,v.toString());\n        }else if(\"cancelData\".equalsIgnoreCase(op)){\n            debugger.cancelData();\n            cmdHandle.getVars().put(var,\"success\");\n        }else if(\"stop\".equalsIgnoreCase(op)){\n            debugger.stop();\n            cmdHandle.getVars().put(var,\"success\");\n        }\n\n    }\n\n    @Override\n    public String op() {\n        return null;\n    }\n\n    @Override\n    public void run() {\n        while (!vmExit){\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n', null, null, '2021-02-02 13:22:21', '2021-02-05 22:00:28');
INSERT INTO `exe_resource` VALUES ('160', '52', 'api', '/debug/start', '启动debug', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"启动调试\" corn=\"\">\n	<seg name=\"启动调试\">\n		<debug name=\"启动调试\" op=\"init\" ip=\"127.0.0.1\" port=\"8800\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>', null, null, '2021-02-02 13:25:36', '2021-02-02 13:32:58');
INSERT INTO `exe_resource` VALUES ('161', '52', 'api', '/debug/stop', '停止debug', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"停止调试\" corn=\"\">\n	<seg name=\"停止调试\">\n		<debug name=\"停止调试\" op=\"stop\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>', null, null, '2021-02-02 13:26:02', '2021-02-02 13:33:58');
INSERT INTO `exe_resource` VALUES ('162', '52', 'api', '/debug/setBreakPoint', '设置断点', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"设置断点调试\" corn=\"\">\n	<seg name=\"设置断点调试\">\n		<debug name=\"设置断点调试\" op=\"setBreakPoint\" className=\"test\" lineNum=\"24\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>', null, null, '2021-02-02 13:26:27', '2021-02-05 21:03:10');
INSERT INTO `exe_resource` VALUES ('163', '52', 'api', '/debug/cancelBreakPoint', '取消debug', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"取消断点调试\" corn=\"\">\n	<seg name=\"取消断点调试\">\n		<debug name=\"取消断点调试\" op=\"cancelBreakPoint\" className=\"com.exe.web.debug.Test\" lineNum=\"24\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-02-02 13:26:55', '2021-02-02 14:03:55');
INSERT INTO `exe_resource` VALUES ('164', '52', 'api', '/debug/getData', '获取数据', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"获取数据调试\" corn=\"\">\n	<seg name=\"获取数据调试\">\n		<debug name=\"获取数据调试\" op=\"getData\" className=\"test\" lineNum=\"24\" key=\"date\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-02-02 13:27:15', '2021-02-05 21:56:19');
INSERT INTO `exe_resource` VALUES ('165', '52', 'api', '/debug/cancelData', '取消获取数据', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"取消获取数据调试\" corn=\"\">\n	<seg name=\"取消获取数据调试\">\n		<debug name=\"取消获取数据调试\" op=\"cancelData\" var=\"data\"></debug>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-02-02 13:27:39', '2021-02-02 13:39:33');
INSERT INTO `exe_resource` VALUES ('166', '52', 'plugin', 'test.java', '测试', null, 'package com.exe.web.debug;\n\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Map;\nimport java.util.Random;\n\npublic class TestCmd extends Cmd {\n\n    public static void main(String[] args) {\n\n    }\n\n    protected static void printHello() {\n        Random r = new Random();\n        int i = r.nextInt();\n\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String date = sdf.format(new Date());\n\n        System.out.println(date + \" : \" + i);\n    }\n\n    @Override\n    public void exe(CmdVo cmd, Map<String, String> param) {\n        new Thread() {\n\n            @Override\n            public void run() {\n                TestCmd test = new TestCmd();\n                while (true) {\n                    try {\n                        sleep(5000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    printHello();\n                }\n            }\n        }.start();\n    }\n\n    @Override\n    public String op() {\n        return null;\n    }\n}			', null, null, '2021-02-02 13:42:57', '2021-02-02 13:45:57');
INSERT INTO `exe_resource` VALUES ('167', '52', 'api', '/debug/test', '调试测试', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"调试测试\" corn=\"\">\n	<seg name=\"调试测试\">\n		<test name=\"调试测试\"></test>\n        <resp name=\"查询成功\" code=\"200\" :msg=\"查询成功\" key=\"data\"/>\n	</seg>\n	\n</rule>			', null, null, '2021-02-02 13:45:37', '2021-02-02 13:46:56');
INSERT INTO `exe_resource` VALUES ('168', '51', 'plugin', 'iptv.order.cq.java', '重庆跑单', null, 'package com.exe.web.plugins;\n\nimport com.alibaba.fastjson.JSON;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport com.exe.web.util.MyConfUtil;\nimport kkd.common.dao.dbuitl.JDBC;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.DateUtil;\nimport kkd.common.util.FileUtil;\nimport kkd.common.util.StringUtil;\nimport org.openqa.selenium.*;\nimport org.openqa.selenium.firefox.FirefoxDriver;\nimport org.openqa.selenium.firefox.FirefoxOptions;\nimport org.openqa.selenium.logging.LogEntries;\nimport org.openqa.selenium.logging.LogEntry;\nimport org.openqa.selenium.logging.LogType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.io.File;\nimport java.io.LineNumberReader;\nimport java.net.URLEncoder;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\npublic class OrderCqCmd  extends Cmd{\n\n    private final static Logger logger = LoggerFactory.getLogger(OrderCqCmd.class);\n    //限制条数\n    private int limit=10;\n    //更新状态\n    private boolean updateData=true;\n    //截图\n    private boolean cutImg=false;\n    //调试\n    private boolean test=false;\n    //是否显示界面\n    private boolean hasGui=false;\n    //成功数量\n    private static Map<String,Integer> successCnt=new HashMap<>();\n    //每日最多成功\n    private static int DAY_Max_successCnt=100;\n\n    public void exe(CmdVo caiAction, Map<String, String> param) {\n        try{\n            logger.info(\"执行-----------------start\");\n            Map<String, Object> sys=cmdHandle.getSys();\n            HttpServletRequest req= (HttpServletRequest) cmdHandle.getSys().get(\"req\");\n            String run=param.get(\"run\");\n            String date=DateUtil.format(new Date());\n            if(StringUtil.equalsIgnoreCase(run,\"false\")){\n                logger.info(\"api is-----------------stop\");\n                return;\n            }\n\n            Date zuoTian=DateUtil.addDays(new Date(),-30);\n            String zuoTianStr=DateUtil.format(zuoTian);\n            logger.info(\"find data create_date> $zuoTianStr \");\n            List<Map<String,String>> list=getNotHandle(zuoTianStr);\n            if(list==null || list.isEmpty()){\n                logger.info(\"list is null\");\n                return;\n            }\n\n            if(test){\n//                logger.info(\"handle data:$map\");\n//                WebDriver driver= getWebDriver(sys,map);\n//                String r=test(date,param,map,driver);\n//                logger.info(\"执行结果：\"+r);\n                return;\n            }\n//            logger.info(\"find data create_date> $date \");\n            if(overLimit(date)){\n                logger.info(\"date:$date,超过限制:$DAY_Max_successCnt\");\n                return;\n            }else{\n                logger.debug(\"date:$date,未超过限制\");\n            }\n\n            for (Map<String,String> map:list) {\n                logger.info(\"handle data:$map\");\n                String userId=map.get(\"user_id\").toString();\n                if(inBlack(userId)){\n                    logger.info(\"userId:$userId,黑名单中\");\n                    map.put(\"description\",\"订购失败-黑名单用户\");\n                    update(map);\n                    return;\n                }else{\n                    logger.info(\"userId:$userId,不在黑名单中\");\n                }\n                //访问刷单页面两次的用户 TODO\n                String product_id=map.get(\"product_id\");\n                Integer cnt=vistCnt(userId,product_id);\n                cnt=3;\n                logger.info(\"userId:$userId,vistCnt:$cnt\");\n                if(cnt<2){\n                    return;\n                }\n                logger.info(\"userId:$userId,start runOrder\");\n                WebDriver driver= getWebDriver(sys,map);\n                logger.debug(\"get web driver:$driver\");\n                String r=test(date,param,map,driver);\n                if(r.indexOf(\"success\")==0){\n                    map.put(\"description\",\"订购成功-\"+r);\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购成功-\"+r);\n                    putBlackUser(map);\n                    update(map);\n                }else if(r.indexOf(\"exp\")==0){\n                    map.put(\"description\",\"订购异常-\"+r);\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购异常-\"+r);\n                    update(map);\n                }else{\n                    logger.info(\"userId:\"+map.get(\"user_id\")+\",订购失败-\"+r);\n                    map.put(\"description\",\"订购失败-\"+r);\n                    update(map);\n                    putBlackUser(map);\n                }\n            }\n        }catch (Exception e){\n            System.out.println(\"-----err----$e\");\n            StackTraceElement[] eles=e.getStackTrace();\n            for(StackTraceElement ele:eles){\n                System.out.println(\"line:\"+ele.getLineNumber());\n            }\n            logger.error(\"\",e);\n        }finally {\n            if(driver!=null){\n                if(!hasGui){\n                    driver.quit();\n                }\n            }\n            driver=null;\n            js=null;\n        }\n\n    }\n\n    private Map<String, String> getData(HttpServletRequest req) {\n        Map<String,String> map=new HashMap<>();\n        String url=req.getParameter(\"url\");\n        map.put(\"url\",url);\n        map.put(\"stbID\",req.getParameter(\"stbID\"));\n        map.put(\"STBType\",req.getParameter(\"STBType\"));\n        map.put(\"mac\",req.getParameter(\"mac\"));\n        map.put(\"userAgent\",req.getHeader(\"User-Agent\"));\n\n        map.put(\"userID\",req.getParameter(\"userId\"));\n        map.put(\"user_id\",req.getParameter(\"userId\"));\n\n        map.put(\"token\",req.getParameter(\"token\"));\n        map.put(\"product_id\",req.getParameter(\"product_id\"));\n        map.put(\"platform\",req.getParameter(\"platform\"));\n\n//        if(!StringUtil.isEmpty(url)){\n//            int pos=url.indexOf(\"?\");\n//            if(pos!=-1){\n//                String queryString=url.substring(pos+1);\n//                Map<String,String> data=StringUtil.getParaCollection(queryString,\"&\",\"=\");\n//                String userId=data.get(\"userID\");\n//                map.put(\"userID\",userId);\n//                map.put(\"user_id\",userId);\n//                String productID=data.get(\"productID\");\n//                map.put(\"product_id\",productID);\n//            }\n//        }\n\n\n\n        return map;\n    }\n\n    public void getCode(){\n\n    }\n\n    public String test(String date,Map<String, String> param,Map<String,String> map,WebDriver driver){\n        try{\n            System.out.println(\"in test\");\n//            driver.get(\"http://127.0.0.1:8080\");\n//            System.out.println(driver.getTitle());\n//            if(true){\n//                return \"\";\n//            }\n//            HttpServletRequest req=null;\n//            Enumeration<String> names=req.getHeaderNames();\n//            while (names.hasMoreElements()){\n//                String key=names.nextElement();\n//                System.out.println(\"headers:\"+key+\":\"+req.getHeader(key));\n//            }\n\n            String url=\"http://172.0.10.52:8080/GameEpg/page/index.html\";\n            driver.manage().window().setSize(new Dimension(1280,720));\n            System.out.println(\"in test 0.-1 \"+driver.getCurrentUrl());\n            driver.get(url);\n            System.out.println(\"in test 0.0 \"+driver.getCurrentUrl());\n            driver.manage().deleteAllCookies();\n            System.out.println(\"in test 0.1 del cookie\");\n            url=url+\"?userID=\"+map.get(\"user_id\");\n            url=url+\"&platform=\"+map.get(\"platform\");\n            url=url+\"&userToken=\"+map.get(\"token\");\n\n            driver.get(url);\n            System.out.println(\"in test 0.2 \"+driver.getCurrentUrl());\n            sleep(1000l);\n            String url1=map.get(\"url\");\n            driver.get(url1);\n            System.out.println(\"in test 1\"+driver.getTitle());\n//            System.out.println(\"in test 1\"+driver.getPageSource());\n            sleep(2000l);\n//            if(true){\n//                return \"\";\n//            }\n            //订购产品\n            JavascriptExecutor js= (JavascriptExecutor) driver;\n            js.executeScript(\"gotoOrder(1,1)\");\n            sleep(1000l);\n            System.out.println(\"in test 2：\"+driver.getCurrentUrl());\n            //订购失败\n            if(has(driver.getCurrentUrl(),\"order_lancheck.action\")){\n                return \"order_lancheck\";\n            }\n            //订购失败\n            if(has(driver.getCurrentUrl(),\"getConfig.jsp\")){\n                sleep(1000l);\n            }\n\n            //订购确认页\n            if(has(driver.getCurrentUrl(),\"order_first.action\")){\n                sleep(1000l);\n                System.out.println(\"in test 3\"+driver.getTitle());\n                //切换到话费订购\n                js.executeScript(\"payfocus()\");\n                //选择话费支付\n                js.executeScript(\"payorder()\");\n//                return \"order_second\";\n            }\n            sleep(1000l);\n            //输入密码页面\n            if(has(driver.getCurrentUrl(),\"order_intial.action\")){\n                List<String> pwds=new ArrayList<>();\n                pwds.add(\"666666\");\n                pwds.add(\"123456\");\n                pwds.add(\"111111\");\n                pwds.add(\"1234\");\n                pwds.add(\"000000\");\n                pwds.add(\"1111\");\n                for(String pwd:pwds){\n                    sleep(1000l);\n                    //输入密码\n//                    String jsStr=\" document.getElementById(\\\"password\\\").value=\'\" + pwd + \"\';\";\n//                    js.executeScript(jsStr);\n                    WebElement passwordEle=getEle(driver,\"#password\");\n                    passwordEle.sendKeys(pwd);\n                    //设置内置变量\n                    exejs(js, map.get(\"StbID\"), map.get(\"STBType\"), map.get(\"mac\"));\n                    //验证密码\n                    js.executeScript(\"validatePassword()\");\n                    sleep(1000l);\n                    System.out.println(\"in test 4：\"+driver.getTitle()+\":\"+driver.getCurrentUrl()+\"，try pwd:$pwd\");\n                    //订购成功\n                    if(has(driver.getCurrentUrl(),\"order_second.action\")){\n                        System.out.println(\"in test 6\");\n                        int cnt=successCnt.get(date)+1;\n                        successCnt.put(date,cnt);\n                        return \"success_order_second\";\n                    }\n                    //消费密码错误页面\n                    if(has(driver.getCurrentUrl(),\"order_accountlock.action\")){\n                        js.executeScript(\"goback()\");\n                        sleep(1000l);\n                        System.out.println(\"in test 4.1：\"+driver.getCurrentUrl());\n//                       return \"order_accountlock\";\n                    }\n\n                }\n                return \"pwdErr\";\n            }\n            //订购失败\n            if(has(driver.getCurrentUrl(),\"order_lancheck.action\")){\n                return \"order_lancheck\";\n            }\n            return \"other_\"+driver.getTitle()+\":\"+driver.getCurrentUrl();\n        }catch (Exception e){\n            logger.error(\"\",e);\n            e.printStackTrace();\n            return \"exp-\"+e.getMessage();\n        }\n//        getConsoleLog();\n    }\n\n\n    public void exejs(JavascriptExecutor js,String StbID,String STBType,String mac){\n//        function init1234(){\n//            var head = document.head || document.getElementsByTagName(\'head\')[0];\n//            var script = document.createElement(\'script\');\n//            script.innerHTML = \'Authentication = new Object();Authentication.CTCGetConfig = function(cvalue){ if(cvalue==\'StbID\'){return \'\"+StbID+\"\'};if(cvalue==\'STBType\'){return \'\"+STBType+\"\'};if(cvalue==\'mac\'){return \'\"+mac+\"\'};}\';\n//            head.appendChild(script);\n//        }\n//        init1234();\n        String jsStr=\"function init1234(){\\n\";\n        jsStr=jsStr+\"var head = document.head || document.getElementsByTagName(\'head\')[0];\\r\\n\";\n        jsStr=jsStr+\"var script = document.createElement(\'script\');\\r\\n\";\n        jsStr=jsStr+\"script.innerHTML = \\\"Authentication = new Object();Authentication.CTCGetConfig = function(cvalue){ if(cvalue==\'StbID\'){return \'\"+StbID+\"\'};if(cvalue==\'STBType\'){return \'\"+STBType+\"\'};if(cvalue==\'mac\'){return \'\"+mac+\"\'};}\\\";\\r\\n\";\n        jsStr=jsStr+\"head.appendChild(script);\\r\\n\";\n        jsStr=jsStr+\"}\\r\\n\";\n        jsStr=jsStr+\"init1234();\\r\\n\";\n        logger.info(\"---------------js-content\"+jsStr);\n        js.executeScript(jsStr);\n    }\n    public boolean has(String A,String B){\n        if(A.indexOf(B)!=-1){\n            return true;\n        }\n        return false;\n    }\n    public void printCookie(WebDriver driver){\n        Set<Cookie> sets= driver.manage().getCookies();\n        Iterator it = sets.iterator();\n        while (it.hasNext()) {\n            Cookie cookie1 = (Cookie) it.next();\n            logger.info(\"---------------1.cookie,\"+cookie1.getName()+\",val:\"+cookie1.getValue());\n        }\n    }\n\n\n    public void sleep(Long l){\n        try {\n            Thread.sleep(l);\n        }catch (Exception e){\n\n        }\n    }\n    private static int c=0;\n    public void getCutImg(WebDriver driver,String name){\n        try {\n            if(!cutImg){\n                return ;\n            }\n            if(c%50==0){\n                c=0;\n            }\n            File srcFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n            String root=MyConfUtil.getRootPath();\n            File targetFile=new File(root+\"/static/logs/\"+name+c+\".png\");\n            FileUtil.copy(srcFile,targetFile);\n            c++;\n        } catch (Exception e) {\n            logger.error(\"\",e);\n        }\n    }\n\n    private  WebDriver driver=null;\n    private  JavascriptExecutor js=null;\n    private static int dataIndex=0;\n    private WebDriver getWebDriver(Map<String, Object> sys,Map<String,String> data){\n        if(driver!=null){\n            try{\n                js.executeScript(\"console.log(\'test\')\");\n            }catch (Exception e){\n                logger.error(\"\",e);\n                driver=null;\n            }\n        }\n        if(driver==null){\n            System.setProperty(\"webdriver.gecko.driver\",\n                    \"G:\\\\autoorderv2\\\\driver\\\\geckodriver.exe\");\n            FirefoxOptions opt = new FirefoxOptions();\n\n//            opt.addArguments(\"user-data-dir=G:\\\\autoorderv2\\\\driver\\\\data\\\\\"+dataIndex++);\n//            opt.addArguments(\"disable-debugbars\");\n//            opt.addArguments(\"--no-sandbox\");\n            if(!hasGui){\n                opt.addArguments(\"--headless\");\n            }\n\n            //非图形化运行\n//            opt.addArguments(\"---disable-gpu\");\n//            opt.addArguments(\"-disable-dev-shm-usage\");\n//            opt.addArguments(\"X-Requested-With:com.android.smart.terminal.iptv\");\n            String userAgent=data.get(\"User-Agent\");\n//            userAgent=\"User-Agent=111\";\n//            if(StringUtil.isEmpty(userAgent)){\n//                userAgent=\"user-agent:\\\"webkit;Resolution(PAL,720P,1080P)\\\"\";\n//            }\n            if(StringUtil.isEmpty(userAgent)) {\n                try {\n                    String s = URLEncoder.encode(\"Mozilla/5.0 (X11; Linux x86_64; Fhbw2.0) AppleWebKit/534.24 (KHTML, like Gecko) Safari/534.24 android/chromium/webkit\", \"utf-8\");\n                    s=\"Mozilla/5.0 (X11; Linux x86_64; Fhbw2.0) AppleWebKit/534.24 (KHTML, like Gecko) Safari/534.24 android/chromium/webkit\";\n//                    userAgent = \"user-agent=\\\"\" + s + \"\\\"\";\n                    userAgent = s;\n                } catch (Exception e) {\n                }\n            }else{\n                try {\n                    String s = URLEncoder.encode(userAgent, \"utf-8\");\n//                    userAgent = \"user-agent=\\\"\" + userAgent + \"\\\"\";\n                    userAgent = userAgent;\n                } catch (Exception e) {\n\n                }\n            }\n\n//            opt.addArguments(userAgent);\n            opt.addPreference(\"general.useragent.override\",userAgent);\n            String root=MyConfUtil.getRootPath()+\"/conf\";\n            //添加插件\n//            opt.addExtensions(new File(root+\"/test.crx\"));\n//            TODO\n//            opt.setExperimentalOption(\"excludeSwitches\",\n//                    Arrays.asList(\"enable-automation\"));\n\n            //为了获取console的日志输出\n//            DesiredCapabilities caps = DesiredCapabilities.firefox();\n//            LoggingPreferences logPrefs = new LoggingPreferences();\n//            logPrefs.enable(LogType.BROWSER, Level.INFO);//输入为debug的日志\n//            caps.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);\n//            caps.setCapability(FirefoxOptions.FIREFOX_OPTIONS, opt);\n\n            driver=new FirefoxDriver(opt);\n//            driver = new ChromeDriver(caps);\n//            driver = new ChromeDriver(opt);\n            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n            js = (JavascriptExecutor) driver;\n            sys.put(\"driver\",driver);\n            sys.put(\"js\",js);\n        }\n        return driver;\n    }\n\n    public void getConsoleLog() {\n        LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);\n        for (LogEntry entry : logEntries) {\n            //依次打印出console信息\n            System.out.println(\"chrome.console====\"+entry.getLevel() + \"：\" + entry.getMessage());\n        }\n    }\n\n\n\n    private void putParam(Map map, WebDriver driver) {\n        String jjsp_userID= map.get(\"jjsp_userID\").toString();\n        String jjsp_userToken= map.get(\"jjsp_userToken\").toString();\n        String jjsp_key= map.get(\"jjsp_key\").toString();\n        String jjsp_platform= map.get(\"jjsp_platform\").toString();\n        String jjsp_enCodeUserID= map.get(\"jjsp_enCodeUserID\").toString();\n        String jjsp_enCodeUserToken= map.get(\"jjsp_enCodeUserToken\").toString();\n        String STBType= map.get(\"STBType\").toString();\n        String mac= map.get(\"STBType\").toString();\n\n        Date d=DateUtil.addDays(new Date(),999);\n        logger.debug(\"---------------0\");\n        driver.manage().window().setSize(new Dimension(1280,720));\n        driver.get(\"http://182.131.0.215:8086/CQCA/page/specialfive1.html?seriesCode=17b0f56e57b04265a54f62b9d5d01784\");\n        driver.manage().deleteAllCookies();\n        System.out.println(\"---------------1\");\n        Cookie cookie=new Cookie(\"jjsp_userID\",jjsp_userID,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_userToken\",jjsp_userToken,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_key\",jjsp_key,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_platform\",jjsp_platform,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_enCodeUserID\",jjsp_enCodeUserID,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_enCodeUserToken\",jjsp_enCodeUserToken,\"/\",d);\n        driver.manage().addCookie(cookie);\n        cookie=new Cookie(\"jjsp_index_jsp_url\",\"http%3A//182.131.0.215%3A8086/CQCA/index.jsp\",\"/\",d);\n        driver.manage().addCookie(cookie);\n\n        Set<Cookie> sets= driver.manage().getCookies();\n        Iterator it = sets.iterator();\n        while (it.hasNext()) {\n            Cookie cookie1 = (Cookie) it.next();\n            logger.debug(\"---------------1.cookie,\"+cookie1.getName()+\",val:\"+cookie1.getValue());\n        }\n    }\n\n    public WebElement getEle(WebDriver driver,String cssSelector){\n        try {\n            return  driver.findElement(By.cssSelector(cssSelector));\n        }catch (Exception e){\n            return null;\n        }\n    }\n    public String op() {\n        return null;\n    }\n\n\n    /**\n     * 获取未处理数据\n     *\n     * @return\n     */\n    public List<Map<String, String>> getNotHandle(String date) {\n        JDBC.DbHelper dh = JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try {\n            String sql=\"select * from iptv_order_user where description=\'未处理\' and create_date>\'$date\' and id=\'1002\' limit 1\";\n            sql=\"select * from iptv_order_user where description like \'未处理\' and create_date>\'$date\' order by id asc limit \"+limit;\n//            sql=\"select * from iptv_order_user where description like \'订购成功%\' and create_date>\'$date\' order by id desc limit \"+limit;\n            return dh.executeQuery(sql, parameters,\n                    new JDBC.RowSetImpl<Map<String,String>>() {\n                        @Override\n                        public Map<String, String> getObjcet(ResultSet resultSet) {\n                            Map<String,String> map=new HashMap<>();\n                            try {\n                                String data=resultSet.getString(\"data\");\n                                map= (Map<String, String>) JSON.parse(data);\n\n                                map.put(\"id\",resultSet.getString(\"id\"));\n                                map.put(\"user_id\",resultSet.getString(\"user_id\"));\n                                map.put(\"userId\",resultSet.getString(\"user_id\"));\n                                map.put(\"user_type\",resultSet.getString(\"user_type\"));\n                                map.put(\"product_id\",resultSet.getString(\"product_id\"));\n                                map.put(\"create_date\",resultSet.getString(\"create_date\"));\n                                map.put(\"description\",resultSet.getString(\"description\"));\n                            } catch (SQLException throwables) {\n                                logger.error(\"\",throwables);\n                            }\n                            return map;\n                        }\n                    });\n        } catch (Exception e) {\n            logger.error(\"\",e);\n        }\n        return null;\n    }\n\n    /**\n     是否在黑名单\n     */\n    public boolean inBlack(String userId){\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            String uid=dh.executeQueryOne(\"select user_id from iptv_black_user where user_id=\'$userId\' \",parameters,String.class);\n\n            if(uid!=null){\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n    /**\n     访问次数\n     */\n    public int vistCnt(String userId,String product_code){\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            Integer cnt=dh.executeQueryOne(\"select count(1) from xgame_center_test2.t_user_order_req where vas_result=\'9314\' and user_code=\'$userId\' and product_code=\'$product_code\' \",parameters,Integer.class);\n            return cnt;\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return 0;\n    }\n    /**\n     是否超过限制\n     */\n    public boolean overLimit(String date){\n        Integer cnt=successCnt.get(date);\n        if(cnt==null){\n            successCnt.clear();\n            successCnt.put(date,0);\n        }\n        if(cnt>DAY_Max_successCnt){\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 更新数据\n     * @return\n     */\n    public boolean update(Map<String,String> map){\n        if(!updateData){\n            return true;\n        }\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_type\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"product_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"create_date\")));\n            String desc=map.get(\"description\");\n            if(desc!=null&&desc.length()>50){\n                desc=desc.substring(0,40);\n            }\n            parameters.add(new SqlParameter(Types.VARCHAR,desc));\n\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"id\")));\n            String sql=\"update iptv_order_user set user_id=?,user_type=?,product_id=?,create_date=?,description=? where id=?\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"更新用户：$map.user_id 成功\");\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    /**\n     * 删除数据\n     * @return\n     */\n    public boolean delLog(Map<String,String> map){\n        Date create_date=new java.util.Date();\n\n        JDBC.DbHelper  dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"id\")));\n            String sql=\"delete from  iptv_order_user where id=?\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"删除用户：$user_id 历史\");\n                return true;\n            }\n        }catch (Exception e){\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    public boolean putBlackUser(Map<String,String> map){\n        if(!updateData){\n            return true;\n        }\n        Date create_date=new java.util.Date();\n\n        JDBC.DbHelper dh=JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_id\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"user_type\")));\n            parameters.add(new SqlParameter(Types.VARCHAR,map.get(\"product_id\")));\n            parameters.add(new SqlParameter(Types.TIMESTAMP,create_date));\n            String desc=map.get(\"description\");\n            if(desc!=null&& desc.length()>50){\n                desc=desc.substring(0,40);\n            }\n            parameters.add(new SqlParameter(Types.VARCHAR,desc));\n            String sql=\"insert into iptv_black_user(user_id,user_type,product_id,create_date,description)values\";\n            sql=sql+\"(?,?,?,?,?)\";\n            int cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                logger.debug(\"插入黑名单用户：$map.user_id \");\n                return true;\n            }\n        }catch (Exception e){\n//            e.printStackTrace();\n        }\n        return false;\n    }\n\n\n\n}', null, null, '2021-03-04 10:30:25', '2021-03-09 00:33:05');
INSERT INTO `exe_resource` VALUES ('169', '51', 'api', '/iptv/order/cq', '重庆跑单', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <iptv.order.cq name=\"订购任务\" run=\"true\" />\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>			', null, null, '2021-03-04 11:10:01', '2021-03-09 00:05:34');
INSERT INTO `exe_resource` VALUES ('170', '51', 'api', '/iptv/rev/cq', '重庆接受数据', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <iptv.order.rev.cq name=\"接受数据\"  />\n		<resp name=\"成功\" code=\"200\" msg=\"成功\" key=\"rs\" />\n	</seg>\n	\n</rule>', null, null, '2021-03-04 18:40:21', '2021-03-08 22:26:03');
INSERT INTO `exe_resource` VALUES ('171', '51', 'task', '/task/iptv/order/cq', '跑单任务重庆', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rule name=\"跑单任务\" corn=\"1\">\n	<seg name=\"跑单任务\">\n        <iptv.order.cq name=\"订购任务\" run=\"true\" />\n	</seg>\n	\n</rule>			', null, null, '2021-03-08 20:32:41', '2021-03-09 00:41:58');
INSERT INTO `exe_resource` VALUES ('172', '51', 'plugin', 'iptv.order.rev.cq.java', '重庆接受订单数据', null, 'package com.exe.web.plugins;\n\nimport com.alibaba.fastjson.JSON;\nimport com.exe.base.Cmd;\nimport com.exe.base.vo.CmdVo;\nimport kkd.common.dao.dbuitl.SqlParameter;\nimport kkd.common.util.DateUtil;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.sql.Types;\nimport java.util.*;\n\npublic class OrderRevCqCmd extends Cmd {\n    private final static Logger logger = LoggerFactory.getLogger(OrderRevCqCmd.class);\n    @Override\n    public void exe(CmdVo cmd, Map<String, String> param) {\n        Map<String, Object> vars=cmdHandle.getVars();\n        HttpServletRequest req= (HttpServletRequest) cmdHandle.getSys().get(\"req\");\n        Map<String,String> map=new HashMap<>();\n        String url=req.getParameter(\"url\");\n        map.put(\"url\",url);\n        map.put(\"stbID\",req.getParameter(\"stbID\"));\n        map.put(\"STBType\",req.getParameter(\"STBType\"));\n        map.put(\"mac\",req.getParameter(\"mac\"));\n        map.put(\"userAgent\",req.getHeader(\"User-Agent\"));\n        map.put(\"userID\",req.getParameter(\"userId\"));\n        map.put(\"user_id\",req.getParameter(\"userId\"));\n\n        map.put(\"token\",req.getParameter(\"token\"));\n        map.put(\"product_id\",req.getParameter(\"product_id\"));\n        map.put(\"platform\",req.getParameter(\"platform\"));\n        String data=JSON.toJSONString(map);\n        putLog(map.get(\"userID\"),\"\",map.get(\"token\"),map.get(\"product_id\"),data,\"未处理\");\n    }\n\n    /**\n     放入黑名单\n     */\n    public boolean putLog(String user_id,String user_type,String token,String product_id,String data,String description){\n        Date create_date=new java.util.Date();\n        String create_dateStr= DateUtil.format(create_date,\"yyyy-MM-dd HH:mm:ss\");\n        kkd.common.dao.dbuitl.JDBC.DbHelper dh=kkd.common.dao.dbuitl.JDBC.getDefaultNoTransactionDbHelper();\n        List<SqlParameter> parameters=new ArrayList<>();\n        try{\n            parameters.add(new SqlParameter(Types.VARCHAR,user_id));\n            parameters.add(new SqlParameter(Types.VARCHAR,user_type));\n            parameters.add(new SqlParameter(Types.VARCHAR,product_id));\n            parameters.add(new SqlParameter(Types.VARCHAR,create_dateStr));\n            parameters.add(new SqlParameter(Types.VARCHAR,description));\n            parameters.add(new SqlParameter(Types.VARCHAR,data));\n            String sql=\"insert into iptv_order_user(user_id,user_type,product_id,create_date,description,data)values\";\n            sql=sql+\"(?,?,?,?,?,?)\";\n            Integer cnt=dh.executeUpdate(sql,parameters);\n            if(cnt>0){\n                return true;\n            }\n        }catch (Exception e){\n            System.out.println(\"------rev data-------5-$e--\");\n            logger.error(\"\",e);\n        }\n        return false;\n    }\n\n    @Override\n    public String op() {\n        return null;\n    }\n}\n', null, null, '2021-03-08 22:23:52', '2021-03-08 22:53:36');

-- ----------------------------
-- Table structure for `menu`
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `parentId` int(11) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `remark` varchar(1000) DEFAULT NULL,
  `url` varchar(2000) DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of menu
-- ----------------------------
INSERT INTO `menu` VALUES ('2', '0', '数据开发平台', null, '/html/views/admin/', null, null);
INSERT INTO `menu` VALUES ('3', '0', '主页', null, null, null, '2021-01-01 19:02:55');
INSERT INTO `menu` VALUES ('4', '2', '数据开发', null, null, null, null);
INSERT INTO `menu` VALUES ('5', '0', '系统管理', null, null, '2020-12-30 17:33:19', '2021-01-02 22:06:53');
INSERT INTO `menu` VALUES ('8', '0', '收藏夹', null, null, '2021-01-02 22:07:38', null);
INSERT INTO `menu` VALUES ('9', '0', '设置', null, null, '2021-01-02 22:07:46', null);
INSERT INTO `menu` VALUES ('10', '4', '应用管理', null, '/html/views/app/list.html', '2021-01-02 22:08:07', null);
INSERT INTO `menu` VALUES ('11', '4', '资源管理', null, '/html/views/resource/list.html', '2021-01-02 22:08:17', null);
INSERT INTO `menu` VALUES ('12', '4', '文件管理', null, '/html/views/fileMgt/index.html', '2021-01-02 22:08:25', null);
INSERT INTO `menu` VALUES ('13', '4', '资源版本管理', null, '/html/views/version/list.html', '2021-01-02 22:08:36', null);
INSERT INTO `menu` VALUES ('14', '4', '数据库管理', null, '/html/views/db/index.html', '2021-01-02 22:08:48', null);
INSERT INTO `menu` VALUES ('15', '4', '文件索引', null, '/html/views/index/index.html', '2021-01-02 22:08:56', null);
INSERT INTO `menu` VALUES ('16', '4', '类索引', null, '/html/views/index/class.html', '2021-01-02 22:09:04', null);
INSERT INTO `menu` VALUES ('17', '4', '方法索引', null, '/html/views/index/method.html', '2021-01-02 22:09:12', null);
INSERT INTO `menu` VALUES ('18', '5', '用户管理', null, '/html/views/user/list.html', '2021-01-02 22:09:26', null);
INSERT INTO `menu` VALUES ('19', '5', '角色管理', null, '/html/views/role/list.html', '2021-01-02 22:09:33', null);
INSERT INTO `menu` VALUES ('20', '5', '菜单管理', null, '/html/views/menu/list.html', '2021-01-02 22:09:41', null);
INSERT INTO `menu` VALUES ('21', '8', '收藏管理', null, '/html/views/scj/list.html', '2021-01-02 22:10:02', null);
INSERT INTO `menu` VALUES ('22', '8', '公共收藏', null, '/html/views/scj/public.html', '2021-01-02 22:10:13', null);
INSERT INTO `menu` VALUES ('23', '8', '标签管理', null, '/html/views/scj/tag/list.html', '2021-01-02 22:10:26', null);
INSERT INTO `menu` VALUES ('24', '8', '网页收集工具', null, '/html/views/scj/webtools.html', '2021-01-02 22:10:40', null);
INSERT INTO `menu` VALUES ('25', '9', '系统设置', null, null, '2021-01-02 22:10:50', null);
INSERT INTO `menu` VALUES ('26', '25', '清理缓存', null, '/api/app/page?page=1&limit=10&id=&appName=&contextPath=&c=true', '2021-01-02 22:11:05', null);
INSERT INTO `menu` VALUES ('27', '3', '我的收藏', null, '/html/views/scj/list.html', '2021-01-02 22:14:33', null);
INSERT INTO `menu` VALUES ('28', '5', '任务管理', null, '/html/views/task/list.html', '2021-01-18 13:08:28', '2021-01-18 13:12:10');
INSERT INTO `menu` VALUES ('29', '5', '查看日志', null, '/html/views/fileMgt/index.html?currPath=logs', '2021-01-20 11:13:24', '2021-03-09 10:38:00');
INSERT INTO `menu` VALUES ('30', '0', 'IPTV', null, '_', '2021-01-25 10:01:48', null);
INSERT INTO `menu` VALUES ('31', '30', '订购用户管理', null, '/html/views/iptv/orderuser/list.html', '2021-01-25 10:02:28', null);
INSERT INTO `menu` VALUES ('32', '30', '黑名单用户', null, '/html/views/iptv/blackuser/list.html', '2021-01-25 10:02:58', null);

-- ----------------------------
-- Table structure for `role_info`
-- ----------------------------
DROP TABLE IF EXISTS `role_info`;
CREATE TABLE `role_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `roleName` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `remark` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '描述',
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of role_info
-- ----------------------------
INSERT INTO `role_info` VALUES ('1', '开发人员', '', '2020-11-25 10:20:28', '2021-01-02 22:06:09');
INSERT INTO `role_info` VALUES ('3', 'test', 's', '2020-11-25 10:30:53', '2020-12-15 12:06:40');
INSERT INTO `role_info` VALUES ('4', 'IPTV', 'IPTV', '2021-01-18 13:05:50', null);

-- ----------------------------
-- Table structure for `role_menu_ref`
-- ----------------------------
DROP TABLE IF EXISTS `role_menu_ref`;
CREATE TABLE `role_menu_ref` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `roleId` int(11) DEFAULT NULL,
  `menuId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of role_menu_ref
-- ----------------------------
INSERT INTO `role_menu_ref` VALUES ('115', '1', '2');
INSERT INTO `role_menu_ref` VALUES ('116', '1', '4');
INSERT INTO `role_menu_ref` VALUES ('117', '1', '10');
INSERT INTO `role_menu_ref` VALUES ('118', '1', '11');
INSERT INTO `role_menu_ref` VALUES ('119', '1', '12');
INSERT INTO `role_menu_ref` VALUES ('120', '1', '13');
INSERT INTO `role_menu_ref` VALUES ('121', '1', '14');
INSERT INTO `role_menu_ref` VALUES ('122', '1', '15');
INSERT INTO `role_menu_ref` VALUES ('123', '1', '16');
INSERT INTO `role_menu_ref` VALUES ('124', '1', '17');
INSERT INTO `role_menu_ref` VALUES ('125', '1', '3');
INSERT INTO `role_menu_ref` VALUES ('126', '1', '27');
INSERT INTO `role_menu_ref` VALUES ('127', '1', '5');
INSERT INTO `role_menu_ref` VALUES ('128', '1', '18');
INSERT INTO `role_menu_ref` VALUES ('129', '1', '19');
INSERT INTO `role_menu_ref` VALUES ('130', '1', '20');
INSERT INTO `role_menu_ref` VALUES ('131', '1', '28');
INSERT INTO `role_menu_ref` VALUES ('132', '1', '29');
INSERT INTO `role_menu_ref` VALUES ('133', '1', '8');
INSERT INTO `role_menu_ref` VALUES ('134', '1', '21');
INSERT INTO `role_menu_ref` VALUES ('135', '1', '22');
INSERT INTO `role_menu_ref` VALUES ('136', '1', '23');
INSERT INTO `role_menu_ref` VALUES ('137', '1', '24');
INSERT INTO `role_menu_ref` VALUES ('138', '1', '9');
INSERT INTO `role_menu_ref` VALUES ('139', '1', '25');
INSERT INTO `role_menu_ref` VALUES ('140', '1', '26');
INSERT INTO `role_menu_ref` VALUES ('141', '1', '30');
INSERT INTO `role_menu_ref` VALUES ('142', '1', '31');
INSERT INTO `role_menu_ref` VALUES ('143', '1', '32');
INSERT INTO `role_menu_ref` VALUES ('144', '4', '5');
INSERT INTO `role_menu_ref` VALUES ('145', '4', '28');
INSERT INTO `role_menu_ref` VALUES ('146', '4', '29');
INSERT INTO `role_menu_ref` VALUES ('147', '4', '30');
INSERT INTO `role_menu_ref` VALUES ('148', '4', '31');
INSERT INTO `role_menu_ref` VALUES ('149', '4', '32');

-- ----------------------------
-- Table structure for `rule`
-- ----------------------------
DROP TABLE IF EXISTS `rule`;
CREATE TABLE `rule` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ruleName` varchar(255) DEFAULT NULL,
  `corn` varchar(255) DEFAULT NULL COMMENT '定时任务',
  `caiConfig` longtext,
  `caiRule` longtext,
  `loginRule` longtext,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of rule
-- ----------------------------
INSERT INTO `rule` VALUES ('1', '外星人源码采集规则', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"discuz 数据采集\" corn=\"\">\r\n	<seg name=\"登录片段\">\r\n		<open name=\"打开网页\" url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=48\"/>\r\n		<loadCookieLocal name=\"记住cookie\"  />\r\n		<check name=\"检查是否登录\" byType=\"cssSelector\" byVal=\"#ls_username\" true=\"打开列表页\" false=\"打开登录页\"/>\r\n		\r\n		<input name=\"输入用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" value=\"tanbin\"/>\r\n		<input name=\"输入密码\" byType=\"cssSelector\" byVal=\"#ls_password\" value=\"tanbin\"/>\r\n		<click name=\"点击登录1\" byType=\"cssSelector\" byVal=\".fastlg button\" />\r\n		\r\n		<input name=\"输入错误验证码\" byType=\"cssSelector\" byVal=\"#seccodeverify_cSA\" value=\"1111\"/>\r\n		<click name=\"点击用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" />\r\n		\r\n		<checkvalue name=\"检查用户输入\" retry=\"4\" delay=\"10000\" byType=\"cssSelector\" byVal=\"#checkseccodeverify_cSA img\" attr=\"src\" c=\"like\" value=\"check_right.gif\"  false=\"检查用户输入\" true=\"点击登录2\"/>\r\n		\r\n		<click name=\"点击登录2\" byType=\"name\" byVal=\"loginsubmit\" />\r\n		\r\n		\r\n		<saveCookie name=\"记住cookie\"  />\r\n		\r\n		<go name=\"跳转到检查是否登录\" to=\"检查是否登录\"/>\r\n	</seg>\r\n	<seg name=\"列表页片段\">\r\n		<open name=\"打开列表页\" target=\"list\" url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=48\"/>\r\n		<find name=\"找到列表元素\"   >\r\n			<field name=\"list\" handle=\"css\" attr=\"\" cssSelector=\"#threadlisttableid\">\r\n				<field name=\"item\"  handle=\"css\"  attr=\"innerHTML\" cssSelector=\" tr\">\r\n					<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"th  a.xst\"/>\r\n					<field name=\"url\" var=\"detail.url\" handle=\"css\" attr=\"href\"  cssSelector=\"th  a.xst\" to=\"打开详情页面\" />\r\n					<field name=\"by\" handle=\"css\" attr=\"\"  cssSelector=\"td:nth-child(3) a\"/>\r\n				</field>\r\n			</field>\r\n		</find>\r\n		<check name=\"检查是否存在下一页\" byType=\"cssSelector\" byVal=\"#fd_page_top .nxt\" true=\"点击下一页\" false=\"退出\"/>\r\n		<click name=\"点击下一页\" byType=\"cssSelector\" byVal=\"#fd_page_top .nxt\" />\r\n		<go  name=\"跳转列表元素\" to=\"找到列表元素\" />\r\n	</seg>\r\n	<seg name=\"详情页片段\">\r\n		<!--url怎么获取-->\r\n		<open  name=\"打开详情页面\"  :url=\"#{detail.url}\" target=\"detail\"/>\r\n		<find name=\"找到详情列表元素\"   >\r\n			<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"#thread_subject\"></field>\r\n			<field name=\"postlist\" handle=\"css\" attr=\"innerHTML\" cssSelector=\"#postlist > div:not(#postlistreply)\">\r\n					<field name=\"userName\" handle=\"css\" attr=\"\" cssSelector=\".authi .xw1\"></field>\r\n					<field name=\"headImg\" handle=\"css\" attr=\"src\" cssSelector=\".avatar .avtm img\"></field>\r\n					<field name=\"content\" handle=\"css\" attr=\"innerHTML\" cssSelector=\".pcb .t_fsz \"></field>\r\n			</field>\r\n		</find>\r\n		<check name=\"是否有评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\"  true=\"点击评论下一页\" false=\"关闭详情页\"/>\r\n		<click  name=\"点击评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\" />\r\n		<go name=\"跳转找到详情列表元素\" to=\"找到详情列表元素\"/>\r\n		<closeTab name=\"关闭详情页\" target=\"detail\"/>\r\n		<changeTab name=\"切换到列表页\" target=\"list\"/>\r\n		<return  name=\"详情页跳转\" to=\"返回\"/>\r\n	</seg>\r\n	\r\n	\r\n	\r\n	<seg name=\"退出\">\r\n		<quit name=\"退出\"/>\r\n	</seg>\r\n	\r\n</rule>\r\n\r\n\r\n', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rules>\r\n    <page title=\"detail\" desc=\"详情页\" \r\n	url=\"\"\r\n	maxPage=\"1\"\r\n	nextCssSelector=\"\"\r\n	baseUrl=\"https://www.discuz.net/\"\r\n	pageStep=\"1\"\r\n	pageStart=\"1\"\r\n	pageNoStr=\"\"\r\n	listUrl=\"\"\r\n	>\r\n        <field name=\"标题\" handle=\"css\" attr=\"\" cssSelector=\"#thread_subject\"></field>\r\n				<field name=\"postlist\" handle=\"css\" attr=\"innerHTML\" cssSelector=\"#postlist > div:not(#postlistreply)\">\r\n						<field name=\"userName\" handle=\"css\" attr=\"\" cssSelector=\".authi .xw1\"></field>\r\n						<field name=\"headImg\" handle=\"css\" attr=\"src\" cssSelector=\".avatar .avtm img\"></field>\r\n						<field name=\"content\" handle=\"css\" attr=\"innerHTML\" cssSelector=\".pcb .t_fsz \"></field>\r\n				\r\n				\r\n				</field>\r\n    </page>\r\n    <startPage \r\n	title=\"listPage\" desc=\"列表页\" \r\n	url=\"https://www.discuz.net/forum-2-\"\r\n	maxPage=\"1\"\r\n	nextCssSelector=\"\"\r\n	baseUrl=\"https://www.discuz.net/\"\r\n	pageStep=\"1\"\r\n	pageStart=\"1\"\r\n	pageNoStr=\"${page}\"\r\n	listUrl=\"https://www.discuz.net/forum-2-${page}.html\"\r\n	>\r\n        <field name=\"list\" dataType=\"list\" handle=\"css\"  attr=\"innerHTML\" cssSelector=\"#threadlisttableid tr\">\r\n			<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"th  a.xst\">\r\n			</field>\r\n			<field name=\"url\" handle=\"css\" attr=\"href\"  cssSelector=\"th  a.xst\" pageId=\"detail\">\r\n			</field>\r\n			<field name=\"by\" handle=\"css\" attr=\"\"  cssSelector=\"td:nth-child(3) a\">\r\n			</field>\r\n		</field>\r\n    </startPage>\r\n    \r\n</rules>	', 'package main;\r\n\r\nimport java.util.Date;\r\nimport java.util.Set;\r\n\r\nimport kkd.common.util.FileUtil;\r\nimport kkd.common.util.StringUtil;\r\n\r\nimport org.openqa.selenium.Cookie;\r\nimport org.openqa.selenium.WebDriver;\r\n\r\nimport caiji.config.ConfigUtil;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.alibaba.fastjson.JSONArray;\r\nimport com.alibaba.fastjson.JSONObject;\r\n\r\n/**\r\n * 登录检查\r\n * \r\n * 页面登录检查  直到 有人手动登录才返回 否则一直检查\r\n * 登录成功后写入登录cookie 下次直接登录\r\n * @author tanbin\r\n *\r\n */\r\npublic class CaiLoginWait {\r\n	private WebDriver driver;\r\n	\r\n	/**\r\n	 * 登录检查 直到登录成功\r\n	 * @return\r\n	 */\r\n	public boolean loginWait(){\r\n		while(true){\r\n			driver.get(\"https://www.eenot.com/\");\r\n			Cookie uidC=driver.manage().getCookieNamed(\"uid\");\r\n			System.out.println(\"登录检查\");\r\n			if(uidC!=null && uidC.getValue()!=null){\r\n				System.out.println(\"登录成功获取到登录cookie\");\r\n				Set<Cookie> cookieSet=driver.manage().getCookies();\r\n				String content=JSON.toJSONString(cookieSet);\r\n				String file=ConfigUtil.class.getResource(\"/\").getFile();\r\n				FileUtil.writeMethodB(file+\"cookie.txt\", content, false);\r\n				return true;\r\n			}else{\r\n				System.out.println(\"获取旧的登录文件\");\r\n				String cookieStr=getCookie();\r\n				if(!StringUtil.isEmpty(cookieStr)){\r\n					try {\r\n						System.out.println(\"设置cookie\");\r\n						JSONArray ja= JSON.parseArray(cookieStr);\r\n						driver.manage().deleteAllCookies();\r\n						for (Object object : ja) {\r\n							JSONObject jo=(JSONObject) object;\r\n							String name=jo.getString(\"name\");\r\n							String value=jo.getString(\"value\");\r\n							String path=jo.getString(\"path\");\r\n							String domain=jo.getString(\"domain\");\r\n							Date expiry=jo.getDate(\"expiry\");\r\n							Boolean isSecure=jo.getBoolean(\"isSecure\");\r\n							isSecure=isSecure==null?false:isSecure;\r\n							Boolean isHttpOnly=jo.getBoolean(\"isHttpOnly\");\r\n							isHttpOnly=isHttpOnly==null?false:isHttpOnly;\r\n							\r\n							Cookie c=new Cookie(name, value, domain, path, expiry, isSecure, isHttpOnly);\r\n							driver.manage().addCookie(c);\r\n						}\r\n					} catch (Exception e) {\r\n						e.printStackTrace();\r\n						String file=ConfigUtil.class.getResource(\"/\").getFile();\r\n						FileUtil.writeMethodB(file+\"cookie.txt\", \"\", false);\r\n					}\r\n				}\r\n				\r\n			}\r\n			try {\r\n				Thread.sleep(5000);\r\n			} catch (InterruptedException e) {\r\n				e.printStackTrace();\r\n			}\r\n		}\r\n	}\r\n	public static String getCookie(){\r\n		final StringBuilder sb=new StringBuilder();\r\n		FileUtil.FileUtilReader f=new FileUtil.FileUtilReader() {\r\n			\r\n			public void read(Object data) {\r\n				sb.append(data.toString()+\"\\r\\n\");\r\n			}\r\n		};\r\n		String file=ConfigUtil.class.getResource(\"/\").getFile();\r\n		FileUtil.readFileByLines(file+\"cookie.txt\", f, \"utf-8\");\r\n		return sb.toString();\r\n	}\r\n	public WebDriver getDriver() {\r\n		return driver;\r\n	}\r\n\r\n	public void setDriver(WebDriver driver) {\r\n		this.driver = driver;\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		\r\n	}\r\n}\r\n', null, null);
INSERT INTO `rule` VALUES ('2', 'discuz采集规则(计数器分页)', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"discuz 数据采集\" corn=\"\">\r\n	<seg name=\"列表页片段\">\r\n		<count name=\"计数器初始化\" inc=\"0\" init=\"48\" var=\"page\"/>\r\n		<open name=\"打开列表页\" target=\"list\" :url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=#{page}\"/>\r\n		<find name=\"找到列表元素\"   >\r\n			<field name=\"list\" handle=\"css\" attr=\"\" cssSelector=\"#threadlisttableid\">\r\n				<field name=\"item\"  handle=\"css\"  attr=\"innerHTML\" cssSelector=\" tr:nth-child(3)\">\r\n					<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"th  a.xst\"/>\r\n					<field name=\"url\" var=\"detail.url\" handle=\"css\" attr=\"href\"  cssSelector=\"th  a.xst\" to=\"打开详情页面\" />\r\n					<field name=\"by\" handle=\"css\" attr=\"\"  cssSelector=\"td:nth-child(3) a\"/>\r\n				</field>\r\n			</field>\r\n		</find>\r\n		<check name=\"检查是否存在下一页\" byType=\"cssSelector\" byVal=\"#fd_page_top .nxt\" true=\"计数器页数+1\" false=\"退出\"/>\r\n		<count name=\"计数器页数+1\" inc=\"1\" var=\"page\"/>\r\n		<go  name=\"跳转列表元素\" to=\"打开列表页\" />\r\n		\r\n	</seg>\r\n	<seg name=\"详情页片段\">\r\n		<!--url怎么获取-->\r\n		<open  name=\"打开详情页面\"  :url=\"#{detail.url}\" target=\"detail\"/>\r\n		<find name=\"找到详情列表元素\"   >\r\n			\r\n			\r\n		</find>\r\n		<check name=\"是否有评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\"  true=\"点击评论下一页\" false=\"关闭详情页\"/>\r\n		<click name=\"点击评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\" />\r\n		<go name=\"跳转找到详情列表元素\" to=\"找到详情列表元素\"/>\r\n		<closeTab name=\"关闭详情页\" target=\"detail\"/>\r\n		<changeTab name=\"切换到列表页\" target=\"list\"/>\r\n		<return  name=\"详情页跳转\" to=\"返回\"/>\r\n	</seg>\r\n	<seg name=\"登录片段\">\r\n		<open name=\"打开网页\" url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=48\"/>\r\n		<loadCookieLocal name=\"加载cookie\"  />\r\n		<check name=\"检查是否登录\" byType=\"cssSelector\" byVal=\"#ls_username\" true=\"打开列表页\" false=\"打开登录页\"/>\r\n		\r\n		<input name=\"输入用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" value=\"tanbin\"/>\r\n		<input name=\"输入密码\" byType=\"cssSelector\" byVal=\"#ls_password\" value=\"tanbin\"/>\r\n		<click name=\"点击登录1\" byType=\"cssSelector\" byVal=\".fastlg button\" />\r\n		\r\n		<input name=\"输入错误验证码\" byType=\"cssSelector\" byVal=\"#seccodeverify_cSA\" value=\"1111\"/>\r\n		<click name=\"点击用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" />\r\n		\r\n		<checkvalue name=\"检查用户输入\" retry=\"4\" delay=\"10000\" byType=\"cssSelector\" byVal=\"#checkseccodeverify_cSA img\" attr=\"src\" c=\"like\" value=\"check_right.gif\"  false=\"检查用户输入\" true=\"点击登录2\"/>\r\n		\r\n		<click name=\"点击登录2\" byType=\"name\" byVal=\"loginsubmit\" />\r\n		\r\n		\r\n		<saveCookie name=\"保存cookie\"  />\r\n		\r\n		<go name=\"跳转到检查是否登录\" to=\"检查是否登录\"/>\r\n	</seg>\r\n	\r\n	\r\n	\r\n	<seg name=\"退出\">\r\n		<quit name=\"退出\"/>\r\n	</seg>\r\n	\r\n</rule>\r\n\r\n\r\n', null, null, null, null);
INSERT INTO `rule` VALUES ('3', 'discuz采集规则(点击分页)', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"discuz 数据采集\" corn=\"\">\r\n	<seg name=\"列表页片段\">\r\n		<open name=\"打开列表页\" target=\"list\" :url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=48\"/>\r\n		<find name=\"找到列表元素\"   >\r\n			<field name=\"list\" handle=\"css\" attr=\"\" cssSelector=\"#threadlisttableid\">\r\n				<field name=\"item\"  handle=\"css\"  attr=\"innerHTML\" cssSelector=\" tr\">\r\n					<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"th  a.xst\"/>\r\n					<field name=\"url\" var=\"detail.url\" handle=\"css\" attr=\"href\"  cssSelector=\"th  a.xst\" to=\"详情页片段\" />\r\n					<field name=\"by\" handle=\"css\" attr=\"\"  cssSelector=\"td:nth-child(3) a\"/>\r\n				</field>\r\n			</field>\r\n		</find>\r\n		<check name=\"检查是否存在下一页\" byType=\"cssSelector\" byVal=\"#fd_page_top .nxt\" true=\"点击下一页\" false=\"退出\"/>\r\n		\r\n		<click name=\"点击下一页\" byType=\"cssSelector\" byVal=\"#fd_page_top .nxt\" />\r\n		<var name=\"设置下一页的地址\"  />\r\n		<go  name=\"跳转列表元素\" to=\"找到列表元素\" />\r\n		\r\n	</seg>\r\n	<seg name=\"详情页片段\">\r\n		<!--url怎么获取-->\r\n		<open  name=\"打开详情页面\"  :url=\"#{detail.url}\" target=\"detail\"/>\r\n		<find name=\"找到详情列表元素\"   >\r\n			<field name=\"title\" handle=\"css\" attr=\"\" cssSelector=\"#thread_subject\"></field>\r\n			<field name=\"postlist\" handle=\"css\" attr=\"innerHTML\" cssSelector=\"#postlist > div:not(#postlistreply)\">\r\n					<field name=\"userName\" handle=\"css\" attr=\"\" cssSelector=\".authi .xw1\"></field>\r\n					<field name=\"headImg\" handle=\"css\" attr=\"src\" cssSelector=\".avatar .avtm img\"></field>\r\n					<field name=\"content\" handle=\"css\" attr=\"innerHTML\" cssSelector=\".pcb .t_fsz \"></field>\r\n			</field>\r\n		</find>\r\n		<check name=\"是否有评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\"  true=\"点击评论下一页\" false=\"关闭详情页\"/>\r\n		<click  name=\"点击评论下一页\"  byType=\"cssSelector\" byVal=\".pg .nxt\" />\r\n		<go name=\"跳转找到详情列表元素\" to=\"找到详情列表元素\"/>\r\n		<closeTab name=\"关闭详情页\" target=\"detail\"/>\r\n		<changeTab name=\"切换到列表页\" target=\"list\"/>\r\n		<return  name=\"详情页跳转\" to=\"返回\"/>\r\n	</seg>\r\n	<seg name=\"登录片段\">\r\n		<open name=\"打开网页\" url=\"https://www.discuz.net/forum.php?mod=forumdisplay&amp;fid=3979&amp;sortid=154&amp;sortid=154&amp;page=48\"/>\r\n		<loadCookieLocal name=\"加载cookie\"  />\r\n		<check name=\"检查是否登录\" byType=\"cssSelector\" byVal=\"#ls_username\" true=\"打开列表页\" false=\"打开登录页\"/>\r\n		\r\n		<input name=\"输入用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" value=\"tanbin\"/>\r\n		<input name=\"输入密码\" byType=\"cssSelector\" byVal=\"#ls_password\" value=\"tanbin\"/>\r\n		<click name=\"点击登录1\" byType=\"cssSelector\" byVal=\".fastlg button\" />\r\n		\r\n		<input name=\"输入错误验证码\" byType=\"cssSelector\" byVal=\"#seccodeverify_cSA\" value=\"1111\"/>\r\n		<click name=\"点击用户名\" byType=\"cssSelector\" byVal=\"#ls_username\" />\r\n		\r\n		<checkvalue name=\"检查用户输入\" retry=\"4\" delay=\"10000\" byType=\"cssSelector\" byVal=\"#checkseccodeverify_cSA img\" attr=\"src\" c=\"like\" value=\"check_right.gif\"  false=\"检查用户输入\" true=\"点击登录2\"/>\r\n		\r\n		<click name=\"点击登录2\" byType=\"name\" byVal=\"loginsubmit\" />\r\n		\r\n		\r\n		<saveCookie name=\"保存cookie\"  />\r\n		\r\n		<go name=\"跳转到检查是否登录\" to=\"检查是否登录\"/>\r\n	</seg>\r\n	\r\n	\r\n	\r\n	<seg name=\"退出\">\r\n		<quit name=\"退出\"/>\r\n	</seg>\r\n	\r\n</rule>\r\n\r\n\r\n', null, null, null, null);
INSERT INTO `rule` VALUES ('4', '通过数据查询实现分页采集', null, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rule name=\"discuz 数据采集\" corn=\"\">\r\n	<seg name=\"初始化\">\r\n		<count name=\"初始化页码\" inc=\"0\" init=\"0\" var=\"start\"/>\r\n		<count name=\"设置每页数据\" inc=\"0\" init=\"2\" var=\"limit\"/>\r\n		<go name=\"跳转下一页\" to=\"分页循环\"/>\r\n	</seg>\r\n	<seg name=\"分页循环\">\r\n		<print name=\"打印\"  :out=\"开始位置:#{start}\" />\r\n		<sqlFind name=\"查找分页数据\"  var=\"pageList\" cols=\"id,path,name,data\"\r\n			:sql=\"select * from cai_field where levId=4 and name=\'url_0\' limit #{start},#{limit}\"\r\n		/>\r\n		<count name=\"初始化数据索引位置\"  init=\"0\" var=\"dataPos\"/>\r\n		<go name=\"跳转数据循环\" to=\"数据循环\"/>\r\n	</seg>\r\n	<seg name=\"数据循环\">\r\n		<var name=\"获取分页数据\"  key=\"pageList\" :index=\"#{dataPos}\" childKey=\"data\" var=\"url\"  />\r\n		<var name=\"获取分页数据长度\"  key=\"pageList\" size=\"true\" var=\"len\"  />\r\n		<if name=\"判断url是否存在\" :js=\"\'#{url}\'!=\'\' \" true=\"打开详情页面\" false=\"跳转到下一页\" />\r\n		\r\n		<open  name=\"打开详情页面\"  :url=\"#{url}\" target=\"detail\"/>\r\n		<find name=\"找到详情列表元素\"   ></find>\r\n		<count name=\"数据索引位置+1\"  inc=\"1\" var=\"dataPos\"/>\r\n		<go name=\"跳转数据循环\" to=\"数据循环\"/>\r\n	</seg>\r\n	<seg name=\"跳转到下一页\">\r\n		<if name=\"判断是否存在下一页\" :js=\"\'#{len}\'!=\'0\' \" true=\"设置下一页位置\" false=\"退出\" />\r\n		<count name=\"设置下一页位置\" :inc=\"#{limit}\" var=\"start\"/>\r\n		<go name=\"跳转下一页\" to=\"分页循环\"/>\r\n	</seg>\r\n	<seg name=\"退出\">\r\n		<quit name=\"退出\"/>\r\n	</seg>\r\n	\r\n</rule>\r\n\r\n\r\n', null, null, null, null);

-- ----------------------------
-- Table structure for `scj_sc`
-- ----------------------------
DROP TABLE IF EXISTS `scj_sc`;
CREATE TABLE `scj_sc` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `private` varchar(5) COLLATE utf8_bin DEFAULT NULL COMMENT '私有的',
  `remark` longtext COLLATE utf8_bin,
  `link` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  `uid` int(11) DEFAULT NULL,
  `userName` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=75 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of scj_sc
-- ----------------------------
INSERT INTO `scj_sc` VALUES ('1', '百度', '', '', 'http://www.baidu.com', '2020-11-12 15:57:55', '2020-12-30 13:45:33', null, null);
INSERT INTO `scj_sc` VALUES ('14', 'google', null, '', 'http://baidu.com', '2020-11-13 11:01:52', '2020-12-27 21:42:44', '4', 'wcy');
INSERT INTO `scj_sc` VALUES ('15', 'google.cn', null, 0xE8B0B7E6AD8CE4B8ADE59BBD, 'http://google.cn', '2020-11-13 11:06:36', null, null, null);
INSERT INTO `scj_sc` VALUES ('28', '我的任务', null, '', '/html/views/fileMgt/modContent.html?path=/html/doc/tanbin/task.txt', '2020-11-19 16:21:21', '2020-12-15 13:46:24', null, null);
INSERT INTO `scj_sc` VALUES ('29', 'URL编码', null, '', 'https://tool.chinaz.com/tools/urlencode.aspx', '2020-11-25 10:05:12', null, null, null);
INSERT INTO `scj_sc` VALUES ('31', 'LayUI文档', null, '', 'https://www.layui.com/doc/', '2020-11-25 10:06:06', null, null, null);
INSERT INTO `scj_sc` VALUES ('32', 'JS解密', null, '', 'https://www.sojson.com/jsjiemi.html', '2020-11-25 10:06:38', null, null, null);
INSERT INTO `scj_sc` VALUES ('33', 'xmSelect文档', null, '', 'https://maplemei.gitee.io/xm-select/#/component/install', '2020-11-25 10:06:59', null, null, null);
INSERT INTO `scj_sc` VALUES ('34', '万能语法编辑器', null, '', '/html/lib/code/index.html', '2020-11-25 10:07:39', null, null, null);
INSERT INTO `scj_sc` VALUES ('35', 'Mock.js', null, '', 'http://mockjs.com/examples.html', '2020-11-25 10:08:02', null, null, null);
INSERT INTO `scj_sc` VALUES ('36', '银行卡', null, 0xE9878DE5BA86E5869CE69D91E59586E4B89AE993B6E8A18C0A36323134203635313020333332352035313734, '', '2020-11-30 17:04:22', null, null, null);
INSERT INTO `scj_sc` VALUES ('39', 'Web流程设计工具Demo', null, 0x576562E6B581E7A88BE8AEBEE8AEA1E5B7A5E585B744656D6F, '/html/lib/mxgraph/index.html', '2020-11-30 18:00:20', null, null, null);
INSERT INTO `scj_sc` VALUES ('40', 'css压缩', null, '', 'https://tool.oschina.net/jscompress/', '2020-12-03 21:58:36', null, null, null);
INSERT INTO `scj_sc` VALUES ('41', '文件对比', null, '', '/html/views/diff/index.html', '2020-12-07 14:17:21', null, null, null);
INSERT INTO `scj_sc` VALUES ('42', '代码设计器', null, 0xE4BBA3E7A081E8AEBEE8AEA1E599A8, 'http://lowcode.magicalcoder.com/magicaldrag/index-layui.html', '2020-12-08 16:55:12', null, null, null);
INSERT INTO `scj_sc` VALUES ('43', '一个更加好看的web编辑器', null, '', 'https://github.com/ajaxorg/ace-builds', '2020-12-09 15:12:37', null, null, null);
INSERT INTO `scj_sc` VALUES ('49', 'Electron ', null, 0xE59FBAE4BA8E20456C656374726F6E20E5BC80E58F91E3808174797065736372697074E7BC96E58699E38081E5BA95E5B182204E6F64652E6A7320E68993E980A0E79A84E4B880E4B8AAE7BC96E8BE91E599A8202C20E4B88DE698AF494445EFBC8CE8A2ABE7A7B0E4B8BAE2809CE68AABE79D80494445E5A496E8A1A3E79A84E7BC96E8BE91E599A8E2809D, '', '2020-12-10 15:01:09', null, null, null);
INSERT INTO `scj_sc` VALUES ('50', '人脸识别demo', null, '', 'https://shumeipai.nxez.com/2018/03/09/real-time-face-recognition-an-end-to-end-project-with-raspberry-pi.html', '2020-12-13 10:45:55', null, null, null);
INSERT INTO `scj_sc` VALUES ('51', '全景图拼接', null, '', 'https://blog.csdn.net/echooozhang/article/details/105275661', '2020-12-13 11:42:08', null, null, null);
INSERT INTO `scj_sc` VALUES ('52', '重庆政府采购网站', null, '', 'https://www.ccgp-chongqing.gov.cn/disclosures/list', '2020-12-24 10:49:35', null, null, null);
INSERT INTO `scj_sc` VALUES ('53', '重庆市政务服务网统一认证中心-用户登录', 'on', '', 'https://auth.cq.gov.cn:81/sso/login?utype=0&redirect=istrue&client_id=AHGNQV7AW&goto=http://zwfw.cq.gov.cn/icity/public/index', '2020-12-30 10:54:03', '2020-12-30 14:13:37', null, null);
INSERT INTO `scj_sc` VALUES ('63', 'layui checkbox取值_百度搜索', 'on', '', 'https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&tn=baidu&wd=layui%20checkbox%E5%8F%96%E5%80%BC&oq=layui%2520table%2520%25E6%2580%25A7%25E5%2588%25AB%25E8%25BD%25AC%25E6%258D%25A2&rsv_pq=ece2c76300004842&rsv_t=721ee1jwAPRT%2FbJ4qS4plo6LsqTwy5mtd%2FBIH2bSRRrGp7HrOrEwHeHxgbM&rqlang=cn&rsv_enter=1&rsv_dl=tb&rsv_btype=t&inputT=3868&rsv_sug3=58&rsv_sug1=38&rsv_sug7=100&sug=layui%2520checkbox%25E5%258F%2596%25E5%2580%25BC&rsv_n=1&bs=layui%20table%20%E6%80%A7%E5%88%AB%E8%BD%AC%E6%8D%A2', '2020-12-30 11:59:58', '2020-12-30 14:13:20', null, null);
INSERT INTO `scj_sc` VALUES ('64', '谭子萱考试', 'on', 0x78656E3A0AE4BB8E312E3132E588B03236E58FB7E983BDE698AF20E591A8E4BA8CE79A84E4B88BE58D88353A3330E588B0373A303020E591A8E585ADE4B88AE58D88393A3030E588B031303A3330E591900A0A78656E3A0AE784B6E5908EE5B0B1E698AF31E69C883330E588B032E69C8831E8BF9EE7BBADE4B889E5A4A9E983BDE698AF383A3330E588B0393A33300A, '', '2021-01-05 16:24:38', '2021-01-05 16:25:05', null, null);
INSERT INTO `scj_sc` VALUES ('65', '通过谷歌浏览器的超链接打开本地一个exe文件_知行合一-CSDN博客', null, '', 'https://blog.csdn.net/longzhoufeng/article/details/78796837', '2021-01-13 09:26:52', null, null, null);
INSERT INTO `scj_sc` VALUES ('66', 'linux 下selenium chrome使用 - 等一念 - 博客园', null, '', 'https://www.cnblogs.com/nullnullnull/p/11598389.html', '2021-01-15 19:07:20', null, null, null);
INSERT INTO `scj_sc` VALUES ('67', 'IPTV,蓝湖', 'on', '', 'https://lanhuapp.com/web/#/item/project/board?type=share_mark&pid=60e6abff-7bc7-41b0-bb24-144dbf157b84&activeSectionId=f0015444-3ae1-4444-a4e6-7bd19db4fee0&teamId=377e613c-87e6-44db-845f-c7206bef7931&param=ea6075f6-5ba4-4bd5-a568-cf54f9c193f9', '2021-01-20 11:21:32', null, null, null);
INSERT INTO `scj_sc` VALUES ('68', 'centos7使用yumdownloader离线安装库简单操作_门前大橋下丶-CSDN博客', null, '', 'https://blog.csdn.net/weixin_44883371/article/details/111884213', '2021-01-20 17:59:37', null, null, null);
INSERT INTO `scj_sc` VALUES ('69', 'SSH 连接时间超时 - lvph - 博客园', null, '', 'https://www.cnblogs.com/lph970417/p/12082556.html', '2021-01-21 09:43:08', null, null, null);
INSERT INTO `scj_sc` VALUES ('70', '外星人源码', 'on', 0x6D756D750A54616E62696E313233343536, 'https://www.eenot.com', '2021-02-20 18:39:11', null, null, null);
INSERT INTO `scj_sc` VALUES ('71', '会员中心-源码搜藏网', null, 0x74616E62696E0A54616E62696E313233343536, 'https://www.codesocang.com/user/', '2021-02-20 20:54:51', null, null, null);
INSERT INTO `scj_sc` VALUES ('72', '直播 - 搜索结果 - 挖鱼源码网', null, '', 'http://www.wayu.cn/?s=%E7%9B%B4%E6%92%AD', '2021-02-20 21:18:10', null, null, null);
INSERT INTO `scj_sc` VALUES ('73', '营业执照', null, 0xE9878DE5BA86E5AD97E88A82E5BE8BE58AA8E7A791E68A80E69C89E99990E585ACE58FB80A39313530303130374D413555544536383339, '', '2021-02-25 13:00:13', null, null, null);
INSERT INTO `scj_sc` VALUES ('74', 'GitHub - pili-engineering/pili-streaming-react-native: pili-streaming-react-native 是支持 React Native 项目添加直播推流功能的 SDK，底层基于 PLDroidMediaStreaming (Android) 和 PLMediaStreamingKit（iOS) 实现。', 'on', 0xE79BB4E692ADE68EA8E6B5810A68747470733A2F2F6769746875622E636F6D2F70696C692D656E67696E656572696E672F70696C692D73747265616D696E672D72656163742D6E61746976650AE79BB4E692ADE68B89E6B5810A68747470733A2F2F6769746875622E636F6D2F70696C692D656E67696E656572696E672F70696C692D72656163742D6E6174697665, 'https://github.com/pili-engineering/pili-streaming-react-native', '2021-03-25 08:45:23', null, null, null);

-- ----------------------------
-- Table structure for `scj_tag`
-- ----------------------------
DROP TABLE IF EXISTS `scj_tag`;
CREATE TABLE `scj_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of scj_tag
-- ----------------------------
INSERT INTO `scj_tag` VALUES ('1', '常用', '2020-11-20 14:08:28', null);
INSERT INTO `scj_tag` VALUES ('2', '互联网', '2020-11-20 14:08:25', null);
INSERT INTO `scj_tag` VALUES ('3', '谭斌', '2020-11-20 14:08:22', '2020-11-20 13:57:50');
INSERT INTO `scj_tag` VALUES ('4', 'web工具', '2020-12-07 14:18:10', null);
INSERT INTO `scj_tag` VALUES ('5', 'AI(人工智能)', '2020-12-13 10:45:22', '2020-12-13 10:45:34');
INSERT INTO `scj_tag` VALUES ('6', '招标', '2020-12-24 10:49:12', null);

-- ----------------------------
-- Table structure for `scj_tag_sc_ref`
-- ----------------------------
DROP TABLE IF EXISTS `scj_tag_sc_ref`;
CREATE TABLE `scj_tag_sc_ref` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tagId` int(11) DEFAULT NULL,
  `scId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=405582156 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of scj_tag_sc_ref
-- ----------------------------
INSERT INTO `scj_tag_sc_ref` VALUES ('405582144', '6', '52');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582147', '3', '64');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582148', '1', '65');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582149', '1', '66');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582150', '3', '67');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582151', '3', '70');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582152', '3', '71');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582153', '3', '72');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582154', '3', '73');
INSERT INTO `scj_tag_sc_ref` VALUES ('405582155', '3', '74');

-- ----------------------------
-- Table structure for `sys_task`
-- ----------------------------
DROP TABLE IF EXISTS `sys_task`;
CREATE TABLE `sys_task` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `job_name` varchar(255) DEFAULT NULL COMMENT '任务名',
  `description` varchar(255) DEFAULT NULL COMMENT '任务描述',
  `cron_expression` varchar(255) DEFAULT NULL COMMENT 'cron表达式',
  `bean_class` varchar(255) DEFAULT NULL COMMENT '任务执行时调用哪个类的方法 包名+类名',
  `params` varchar(1000) DEFAULT NULL,
  `job_status` varchar(255) DEFAULT NULL COMMENT '任务状态',
  `job_group` varchar(255) DEFAULT NULL COMMENT '任务分组',
  `createTime` datetime DEFAULT NULL COMMENT '创建时间',
  `upTime` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of sys_task
-- ----------------------------
INSERT INTO `sys_task` VALUES ('3', 'order', '跑单任务\n每周六每5分钟执行一次\n0 0/5 1-2 ? * 6,7 *\n每30秒执行一次\n0/30 * * * * ? \n每天18-23 每30秒执行一次\n0,30 * 18-23 * * ? *\ncorn表达式：\nhttps://cron.qqe2.com/', '0,30 * 18-23 * * ? *', 'com.exe.web.task.TestJob', '171', 'run', 'iptv', '2021-01-17 21:16:30', '2021-03-10 16:10:51');
INSERT INTO `sys_task` VALUES ('4', 'task.iptv.del.userorder', '删除30天前订购历史数据\n每5分钟执行一次\n0 0/5 * * * ? ', '0 0/5 * * * ? ', 'com.exe.web.task.TestJob', '158', 'run', 'iptv', '2021-01-26 10:17:36', '2021-01-26 10:31:23');

-- ----------------------------
-- Table structure for `test`
-- ----------------------------
DROP TABLE IF EXISTS `test`;
CREATE TABLE `test` (
  `id` int(11) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of test
-- ----------------------------

-- ----------------------------
-- Table structure for `user_info`
-- ----------------------------
DROP TABLE IF EXISTS `user_info`;
CREATE TABLE `user_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(255) DEFAULT NULL,
  `nickName` varchar(255) DEFAULT NULL,
  `pwd` varchar(255) DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  `upTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of user_info
-- ----------------------------
INSERT INTO `user_info` VALUES ('1', 'admin', 'admin', 'e10adc3949ba59abbe56e057f20f883e', '2020-11-24 21:35:12', '2020-12-21 11:44:19');
INSERT INTO `user_info` VALUES ('3', 'tanbin', 'tanbin', 'e10adc3949ba59abbe56e057f20f883e', '2020-11-25 09:26:53', '2021-03-29 09:06:11');
INSERT INTO `user_info` VALUES ('6', 'cz', '崔总', 'e10adc3949ba59abbe56e057f20f883e', '2021-01-18 13:22:25', '2021-01-18 14:47:59');

-- ----------------------------
-- Table structure for `user_role_ref`
-- ----------------------------
DROP TABLE IF EXISTS `user_role_ref`;
CREATE TABLE `user_role_ref` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userId` int(11) DEFAULT NULL,
  `roleId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of user_role_ref
-- ----------------------------
INSERT INTO `user_role_ref` VALUES ('11', '3', '1');
INSERT INTO `user_role_ref` VALUES ('12', '3', '3');
INSERT INTO `user_role_ref` VALUES ('13', '6', '4');
